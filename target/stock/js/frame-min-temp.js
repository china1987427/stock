var messageRegEx_0 = /\{0\}/g;
var messageRegEx_1 = /\{1\}/g;
var messageRegEx_2 = /\{2\}/g;
var messageRegEx_3 = /\{3\}/g;
var messageRegEx_4 = /\{4\}/g;
var messageRegEx_5 = /\{5\}/g;
var messageRegEx_6 = /\{6\}/g;
var messageRegEx_7 = /\{7\}/g;
var messageRegEx_8 = /\{8\}/g;
var messageRegEx_9 = /\{9\}/g;
var messageRegEx_10 = /\{10\}/g;
var messageRegEx_11 = /\{11\}/g;
var messageRegEx_12 = /\{12\}/g;
var messageRegEx_13 = /\{13\}/g;
var messageRegEx_14 = /\{14\}/g;
var messageRegEx_15 = /\{15\}/g;

var portalOfA8IframeStr = "top.frames['frame_A8']";

/**
 * \u6269\u5c55\u5176\u5b83\u6d4f\u89c8\u5668DOM\u5143\u7d20\u7684outerHTML\u5c5e\u6027
 */
if(!window.ActiveXObject){
	if (typeof(HTMLElement) != "undefined") {
		HTMLElement.prototype.__defineSetter__("outerHTML", function(s) {
			var r = this.ownerDocument.createRange();
			r.setStartBefore(this);
			var df = r.createContextualFragment(s);
			this.parentNode.replaceChild(df, this);
			return s;
		});
		HTMLElement.prototype.__defineGetter__("outerHTML", function(){
			var a = this.attributes, str = "<" + this.tagName, i = 0;
			for (; i < a.length; i++)
				if (a[i].specified)
					str += " " + a[i].name + '="' + a[i].value + '"';
			if (!this.canHaveChildren)
				return str + " />";
			return str + ">" + this.innerHTML + "</" + this.tagName + ">";
		});

		HTMLElement.prototype.__defineGetter__("canHaveChildren", function(){
			return !/^(area|base|basefont|col|frame|hr|img|br|input|isindex|link|meta|param)$/.test(this.tagName.toLowerCase());
		});
		//insertAdjacentElement
		/**
    HTMLElement.prototype.insertAdjacentElement = function(where, parsedNode) {
        switch (where) {
            case "beforeBegin":
                this.parentNode.insertBefore(parsedNode, this);
                break;
            case "afterBegin":
                this.insertBefore(parsedNode, this.firstChild);
                break;
            case "beforeEnd":
                this.appendChild(parsedNode);
                break;
            case "afterEnd":
                if (this.nextSibling)
                    this.parentNode.insertBefore(parsedNode, this.nextSibling);
                else
                    this.parentNode.appendChild(parsedNode);
                break;
        }
    }
    HTMLElement.prototype.insertAdjacentHTML = function(where, htmlStr) {
        var r = this.ownerDocument.createRange();
        r.setStartBefore(this);
        var parsedHTML = r.createContextualFragment(htmlStr);
        this.insertAdjacentElement(where, parsedHTML);
    }
    HTMLElement.prototype.insertAdjacentText = function(where, txtStr) {
        var parsedText = document.createTextNode(txtStr);
        this.insertAdjacentElement(where, parsedText);
    }
		 **/
	}
}

if(!window.ActiveXObject){
/**
 * \u6269\u5c55\u5176\u5b83\u6d4f\u89c8\u5668DOM\u5143\u7d20\u7684innerText\u5c5e\u6027
 */
	if (!!document.getBoxObjectFor || window.mozInnerScreenX != null) {
	    HTMLElement.prototype.__defineSetter__("innerText", function(sText) {
	        var parsedText = document.createTextNode(sText);
	        this.innerHTML = "";
	        this.appendChild(parsedText);
	        return parsedText;
	    });
	    HTMLElement.prototype.__defineGetter__("innerText", function() {
	        var r = this.ownerDocument.createRange();
	        r.selectNodeContents(this);
	        return r.toString();
	    });
	}
	
	/**
	 * \u6269\u5c55\u5176\u5b83\u6d4f\u89c8\u5668DOM\u5143\u7d20\u7684outerText\u5c5e\u6027
	 */
	if (!!document.getBoxObjectFor || window.mozInnerScreenX != null) {
	    HTMLElement.prototype.__defineSetter__("outerText", function(sText) {
	        var parsedText = document.createTextNode(sText);
	        this.parentNode.replaceChild(parsedText, this);
	        return parsedText;
	    });
	    HTMLElement.prototype.__defineGetter__("outerText", function() {
	        var r = this.ownerDocument.createRange();
	        r.selectNodeContents(this);
	        return r.toString();
	    });
	}
}

String.prototype.getBytesLength = function() {
	var cArr = this.match(/[^\x00-\xff]/ig);
	return this.length + (cArr == null ? 0 : cArr.length);
};

String.prototype.getLimitLength = function(maxlengh, symbol) {
	if(!maxlengh || maxlengh < 0){
		return this;
	}
	var len = this.getBytesLength();

	if(len <= maxlengh){
		return this;
	}
	
	symbol = symbol == null ? ".." : symbol;
	maxlengh = maxlengh - symbol.length;

    var a = 0; 
    var temp = ''; 

    for (var i = 0; i < this.length; i++)    { 
        if (this.charCodeAt(i) > 255) a += 2; 
        else a++; 

        temp += this.charAt(i);  

        if(a >= maxlengh) {
			return temp + symbol;
		}
    } 

    return this; 
};

String.prototype.escapeHTML = function(isEscapeSpace){
	try{
		return escapeStringToHTML(this, isEscapeSpace);
	}
	catch(e){}
	
	return this;
};
String.prototype.escapeUrl = function(isEscapeSpace){
  try {
      return escapeStringToHTML(this.replace(/\n/g, ''), isEscapeSpace);
  } 
  catch (e) {
  }
  
  return this;
};
String.prototype.escapeJavascript = function(){
	return escapeStringToJavascript(this);
};

String.prototype.escapeSpace = function(){	
	return this.replace(/ /g, "&nbsp;");
};

String.prototype.escapeSameWidthSpace = function(){	
	return this.replace(/ /g, "&nbsp;&nbsp;");
};

String.prototype.escapeXML = function(){	
	return this.replace(/\&/g, "&amp;").replace(/\</g, "&lt;").replace(/\>/g, "&gt;").replace(/\"/g, "&quot;");
};
String.prototype.escapeQuot = function(){
	return this.replace(/\'/g,"&#039;").replace(/"/g,"&#034;");
};
String.prototype.startsWith = function(prefix){	
	return this.indexOf(prefix) == 0;
};
String.prototype.endsWith = function(subfix){	
	var pos = this.indexOf(subfix);
	return pos > -1 && pos == this.length - subfix.length;
};

/**
 * \u53bb\u6389\u7a7a\u683c
 */
String.prototype.trim = function(){
	var chs = this.toCharArray();
	
	var st = 0;
	var off = chs.length;
	
	for(var i = 0; i < chs.length; i++){
		var c = chs[i];
		if(c == ' '){
			st++;
		}
		else{
			break;
		}
	}
	
	if(st == this.length){
		return "";
	}
	
	for(var i = chs.length; i > 0; i--){
		var c = chs[i-1];
		if(c == ' '){
			off--;
		}
		else{
			break;
		}
	}
		
	return this.substring(st, off);
};

/**
 * \u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u6570\u7ec4
 */
String.prototype.toCharArray = function(){
	var array = [];
	
	for(var i = 0; i < this.length; i++){
		array[i] = this.charAt(i);
	}		
	
	return array;
};

/**
 * 
 */
Array.prototype.indexOf = function(object){
	for(var i = 0; i < this.length; i++) {
		if(this[i] == object){
			return i;
		}
	}
	
	return -1;
}

/**
 * \u65e5\u5fd7
 */
var log = {
	rootLogger : "info",
	
	debugLevel : {debug : true , info : true , warn : true , error : true },
	infoLevel  : {debug : false, info : true , warn : true , error : true },
	warnLevel  : {debug : false, info : false, warn : true , error : true },
	errorLevel : {debug : false, info : false, warn : false, error : true },
	
	debug : function(message){
		if(this.isDebugEnabled())
			alert("Debug : " + message)
	},	
	info : function(message){
		if(this.isInfoEnabled())
			alert("Info : " + message)
	},	
	warn : function(message){
		if(this.isWarnEnabled())
			alert("Warn : " + message)
	},
	error : function(message, exception){
		if(this.isErrorEnabled())
			alert("Error : " + message + "\n\n" + exception.message)
	},
	
	isDebugEnabled : function(){
		return eval("this." + this.rootLogger + "Level.debug");
	},	
	isInfoEnabled : function(){
		return eval("this." + this.rootLogger + "Level.info");
	},	
	isWarnEnabled : function(){
		return eval("this." + this.rootLogger + "Level.warn");
	},	
	isErrorEnabled : function(){
		return eval("this." + this.rootLogger + "Level.error");
	}	
}

var UUID_seqence = 0;

/**
 * \u4ea7\u751fUUID\uff0c\u8fd4\u56de\u7c7b\u578b\u662fString
 */
function getUUID(){
	var UUIDConstants_Time = new Date().getTime() + "" + (UUID_seqence++);
	if(UUID_seqence >= 100000){
		UUID_seqence = 0;
	}
	
	return UUIDConstants_Time;
}


var EmptyArrayList = new ArrayList();

/**
 * ArrayList like java.util.ArrayList
 */
function ArrayList(){
	this.instance = new Array();
}

ArrayList.prototype.size = function(){
	return this.instance.length;
}
/**
 * \u5728\u672b\u5c3e\u8ffd\u52a0\u4e00\u4e2a
 */
ArrayList.prototype.add = function(o){
	this.instance[this.instance.length] = o;
}
/**
 * \u5f53list\u4e2d\u4e0d\u5b58\u5728\u8be5\u5bf9\u8c61\u65f6\u624d\u6dfb\u52a0
 */
ArrayList.prototype.addSingle = function(o){
	if(!this.contains(o)){
		this.instance[this.instance.length] = o;
	}
}
/**
 * \u5728\u6307\u5b9a\u4f4d\u7f6e\u589e\u52a0\u5143\u7d20
 * @param posation \u4f4d\u7f6e\uff0c \u4ece0\u5f00\u59cb
 * @param o \u8981\u589e\u52a0\u7684\u5143\u7d20
 */
ArrayList.prototype.addAt = function(position, o){
	if(position >= this.size() || position < 0 || this.isEmpty()){
		this.add(o);
		return;
	}
	
	this.instance.splice(position, 0, o);
}

/**
 * Appends all of the elements in the specified Collection to the end of
 * this list, in the order that they are returned by the
 * specified Collection's Iterator.  The behavior of this operation is
 * undefined if the specified Collection is modified while the operation
 * is in progress.  (This implies that the behavior of this call is
 * undefined if the specified Collection is this list, and this
 * list is nonempty.)
 */
ArrayList.prototype.addAll = function(array){
	if(!array || array.length < 1){
		return;
	}
	
	this.instance = this.instance.concat(array);
}

/**
 * \u8ffd\u52a0\u4e00\u4e2aList\u5728\u961f\u5c3e
 */
ArrayList.prototype.addList = function(list){
	if(list && list instanceof ArrayList && !list.isEmpty()){
		this.instance = this.instance.concat(list.instance);
	}
}

/**
 * @return the element at the specified position in this list.
 */
ArrayList.prototype.get = function(index){
	if(this.isEmpty()){
		return null;
	}

	if(index > this.size()){
		return null;
	}

	return this.instance[index];
}

/**
 * \u6700\u540e\u4e00\u4e2a
 */
ArrayList.prototype.getLast = function(){
	if(this.size() < 1){
		return null;
	}

	return this.instance[this.size() - 1];
}

/**
 * Replace the element at the specified position in the list with the specified element
 * @param index int index of element to replace
 * @param obj Object element to be stored at the specified posotion
 * @return Object the element previously at the specified posotion
 * @throws IndexOutOfBoundException if index out of range
 */
ArrayList.prototype.set = function(index, obj){
	if(index >= this.size()){
		throw "IndexOutOfBoundException : Index " + index + ", Size "+this.size();
	}
	
	var oldValue = this.instance[index];
	this.instance[index] = obj;
	
	return oldValue;
}

/**
 * Removes the element at the specified position in this list.
 * Shifts any subsequent elements to the left (subtracts one from their
 * indices).
 */
ArrayList.prototype.removeElementAt = function(index){
	if(index > this.size() || index < 0){
		return;
	}

	this.instance.splice(index, 1);
}
/**
 * Removes the element in this list.
 */
ArrayList.prototype.remove = function(o){
	var index = this.indexOf(o);
	this.removeElementAt(index);
}
/**
 * @return <tt>true</tt> if this list contains the specified element.
 */
ArrayList.prototype.contains = function(o, comparatorProperies){
	return this.indexOf(o, comparatorProperies) > -1;
}
/**
 * Searches for the first occurence of the given argument, testing 
 * for equality using the <tt>==</tt> method. 
 */
ArrayList.prototype.indexOf = function(o, comparatorProperies){
	for(var i = 0; i < this.size(); i++){
		var s = this.instance[i];
		if(s == o){
			return i;
		}
		else if(comparatorProperies != null && s != null && o != null && s[comparatorProperies] == o[comparatorProperies]){
			return i;
		}
	}

	return -1;
}
/**
 * Returns the index of the last occurrence of the specified object in this list. 
 * @return the index of the last occurrence of the specified object in this list;
 *         returns -1 if the object is not found. 
 */
ArrayList.prototype.lastIndexOf = function(o, comparatorProperies){
	for(var i = this.size() - 1; i >= 0; i--){
		var s = this.instance[i];
		if(s == o){
			return i;
		}
		else if(comparatorProperies != null && s != null && o != null && s[comparatorProperies] == o[comparatorProperies]){
			return i;
		}
	}

	return -1;
}

/**
 * Returns a view of the portion of this list between 
 * fromIndex, inclusive, and toIndex, exclusive.
 * @return a view of the specified range within this list. 
 */
ArrayList.prototype.subList = function(fromIndex, toIndex){
	if(fromIndex < 0){
		fromIndex = 0;
	}
	
	if(toIndex > this.size()){
		toIndex = this.size();
	}
	
	var tempArray = this.instance.slice(fromIndex, toIndex);
	
	var temp = new ArrayList();
	temp.addAll(tempArray);
	
	return temp;
}
/**
 * Returns an array containing all of the elements in this list in the correct order;
 *
 * @return Array
 */
ArrayList.prototype.toArray = function(){
	return this.instance;
}

/**
 * Tests if this list has no elements.
 *
 * @return <tt>true</tt> if this list has no elements;
 */
ArrayList.prototype.isEmpty = function(){
	return this.size() == 0;
}
/**
 * Removes all of the elements from this list.  The list will
 * be empty after this call returns.
 */
ArrayList.prototype.clear = function(){
	this.instance = new Array();
}
/** 
 * show all elements
 */
ArrayList.prototype.toString = function(sep){
	sep = sep || ", ";
	return this.instance.join(sep);
}


/**
 * \u5bf9ArrayList\u5feb\u901f\u6392\u5e8f
 * 
 * @param list \u8981\u6392\u5e8f\u7684ArrayList
 * @param comparatorProperies \u5bf9\u6570\u636e\u4e2d\u5143\u7d20\u7684\u67d0\u4e2a\u5c5e\u6027\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e
 */
function QuickSortArrayList(list, comparatorProperies) {
	QuickSortArray(list.toArray(), comparatorProperies);
}

/**
 * \u5bf9\u6570\u7ec4\u5feb\u901f\u6392\u5e8f
 * 
 * @param arr \u8981\u6392\u5e8f\u7684\u6570\u7ec4
 * @param comparatorProperies \u5bf9\u6570\u636e\u4e2d\u5143\u7d20\u7684\u67d0\u4e2a\u5c5e\u6027\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e
 */
function QuickSortArray(arr, comparatorProperies) {
	if(comparatorProperies){
		arr.sort(function(o1, o2){
			return o1[comparatorProperies] < o2[comparatorProperies] ? -1 : (o1[comparatorProperies] == o2[comparatorProperies] ? 0 : 1);
		});
	}
	else{
		arr.sort();
	}
}


var EmptyProperties = new Properties();

/**
 *
 */
function Properties(jsProps){
	this.instanceKeys = new ArrayList();
	this.instance = {};
	
	if(jsProps){
		this.instance = jsProps;
		for(var i in jsProps){
			this.instanceKeys.add(i);
		}
	}
}

/**
 * Returns the number of keys in this Properties.
 * @return int
 */
Properties.prototype.size = function(){
  return this.instanceKeys.size();
}

/**
 * Returns the value to which the specified key is mapped in this Properties.
 * @return value
 */
Properties.prototype.get = function(key, defaultValue){
	if(key == null){
		return null;
	}
	
	var returnValue = this.instance[key];
  
	if(returnValue == null && defaultValue != null){
		return defaultValue;
	}

	return returnValue;
}
/**
 * Removes the key (and its corresponding value) from this 
 * Properties. This method does nothing if the key is not in the Properties.
 */
Properties.prototype.remove = function(key){
	if(key == null){
		return null;
	}
	this.instanceKeys.remove(key);
	delete this.instance[key]
}
/**
 * Maps the specified <code>key</code> to the specified 
 * <code>value</code> in this Properties. Neither the key nor the 
 * value can be <code>null</code>. <p>
 *
 * The value can be retrieved by calling the <code>get</code> method 
 * with a key that is equal to the original key. 
 */
Properties.prototype.put = function(key,value){
	if(key == null){
		return null;
	}
	
	if(this.instance[key] == null){
		this.instanceKeys.add(key);
	}

	this.instance[key] = value;
}

/**
 * \u76f4\u63a5\u8ffd\u52a0\uff0c\u4e0d\u8003\u8651\u91cd\u590dkey
 */
Properties.prototype.putRef = function(key,value){
	if(key == null){
		return null;
	}

	this.instanceKeys.add(key);
	this.instance[key] = value;
}

/**
 * Returns the value to which the specified value is mapped in this Properties.
 * e.g:
 * userinfo.getMultilevel("department.name")  the same sa :  userinfo.get("department").get("name")
 * @return string
 */
Properties.prototype.getMultilevel = function(key, defaultValue){
	if(key == null){
		return null;
	}
	
	var _keys = key.split(".");
  
	function getObject(obj, keys, i){
		try{
			if(obj == null || (typeof obj != "object")){
				return null;
			}
	
			var obj1 = obj.get(keys[i]);
	
			if(i < keys.length - 1){
				obj1 = getObject(obj1, keys, i + 1);
			}
	
			return obj1;
		}
		catch(e){
		}

		return null;
	}

	var returnValue = getObject(this, _keys, 0);

	return returnValue == null ? defaultValue : returnValue;
}

/**
 * Tests if the specified object is a key in this Properties.
 * @return boolean
 */
Properties.prototype.containsKey = function(key){
	if(key == null){
		return false;
	}
	
	return this.instance[key] != null;
}

/**
 * Returns an ArrayList of the keys in this Properties.
 * @return ArrayList
 */
Properties.prototype.keys = function(){
	 return this.instanceKeys;
}

/**
 * Returns an ArrayList of the values in this Properties.
 * @return ArrayList
 */
Properties.prototype.values = function(){
	var vs = new ArrayList();
	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		
		if(key){
			var value = this.instance[key];
			vs.add(value);
		}
	}

	return vs;
}

/**
 * Tests if this Properties maps no keys to values.
 * @return boolean
 */
Properties.prototype.isEmpty = function(){
	return this.instanceKeys.isEmpty();
}

/**
 * Clears this Properties so that it contains no keys. 
 */
Properties.prototype.clear = function(){
	this.instanceKeys.clear();
	this.instance = {};
}
/**
 * exchange entry1(key1-value1) with entry2(key2-value2)
 */
Properties.prototype.swap = function(key1, key2){
	if(!key1 || !key2 || key1 == key2){
		return;
	}
	
	var index1 = -1;
	var index2 = -1;
	
	for(var i = 0; i < this.instanceKeys.instance.length; i++) {
		if(this.instanceKeys.instance[i] == key1){
			index1 = i;
		}
		else if(this.instanceKeys.instance[i] == key2){
			index2 = i;
		}		
	}
	
	this.instanceKeys.instance[index1] = key2;
	this.instanceKeys.instance[index2] = key1;
}

Properties.prototype.entrySet = function(){
	var result = [];
	
	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		var value = this.instance[key];
		
		if(!key){
			continue;
		}
		
		var o = new Object();
		o.key = key;
		o.value = value;
		
		result[result.length] = o;
	}
	
	return result;
}

/**
 *
 */
Properties.prototype.toString = function(){
	var str = "";

	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		str += key + "=" + this.instance[key] + "\n";
	}

	return str;
}
/**
 * \u8f6c\u6362\u6210key1=value1;key2=value2;\u7684\u5f62\u5f0f
 * token1 -- \u5bf9\u5e94\u7b2c\u4e00\u5c42\u5206\u9694\u7b26  \u5982\u4e0a\u5f0f\u7684";"
 * token2 -- \u5bf9\u5e94\u7b2c\u4e8c\u5c42\u5206\u9694\u7b26  \u5982\u4e0a\u5f0f\u7684"="
 */
Properties.prototype.toStringTokenizer = function(token1, token2){
	token1 = token1 == null ? ";" : token1;
	token2 = token2 == null ? "=" : token2;
	var str = "";

	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		var value = this.instance[key];
		
		if(!key){
			continue;
		}
		
		if(i > 0){
			str += token1;
		}
		str += key + token2 + value;
	}

	return str;
}

Properties.prototype.toQueryString = function(){
	if(this.size() < 1){
		return "";
	}
	
	var str = "";
	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		var value = this.instance[key];
		
		if(!key){
			continue;
		}
		
		if(i > 0){
			str += "&";
		}

		if(typeof value == "object"){
			
	    }
		else{
			str += key + "=" + encodeURIat(value);
		}
	}

	return str;
}

/**
 * Ajax\u8fdb\u884c\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u5c06\u5176\u8f6c\u6362\u6210ASCLL\u7801\uff0cencodeURI\u4e0d\u4f1a\u5bf9\u67d0\u4e2a\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8f6c\u7801\uff0c\u9700\u8981\u53e6\u5916\u5355\u72ec\u51fa\u6765\u3002
 */
//function encodeURIat(str)
//{
//	var strTemp=encodeURI(str);
//	strTemp=strTemp.replace(/&/g,"%26");  
//	strTemp=strTemp.replace(/\+/g,"%2B");
//	strTemp=strTemp.replace(/\+/g,"%2B");
//	strTemp=strTemp.replace(/(#)/g, "%23");
//
//	
//	return strTemp;
//}
/**

* \u5c06\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u7684\u7279\u6b8a\u5b57\u7b26\u4e32\u8f6c\u4e3aurl\u7f16\u7801\uff0c\u4ee5\u4f7f\u5b83\u80fd\u6b63\u786e\u4f20\u8f93

*/

function encodeURIat(inputStr) {
    if( (typeof inputStr) !=="string" ) {
         return "";
    }
    inputStr = encodeURI(inputStr);
    var reg = /&|\/|\+|\?|\s|%|#|=/g;
    if( reg.test(inputStr) ) {
       // inputStr = inputStr.replace( /(%)/g, "%25");
        inputStr = inputStr.replace( /(\/)/g, "%2F");
        inputStr = inputStr.replace( /(&)/g, "%26");
        inputStr = inputStr.replace( /(\+)/g, "%2B");
        inputStr = inputStr.replace( /(\?)/g, "%3F");
        inputStr = inputStr.replace( /(#)/g, "%23");
       // inputStr = inputStr.replace( /(\s)/g, "%20");
        inputStr = inputStr.replace( /(=)/g, "%3D");
    }
    return inputStr;
};


Properties.prototype.toInputString = function(){
	if(this.size() < 1){
		return "";
	}
	
	var str = "";
	for(var i=0; i<this.instanceKeys.size(); i++){
		var key = this.instanceKeys.get(i);
		var value = this.instance[key];
		
		if(!key){
			continue;
		}

		if(typeof value == "object"){
			
	    }
		else{
			str += "<input type='hidden' name=\"" + key + "\" value=\"" + encodeURI(value) + ">";
		}
	}

	return str;
}

function Set(){
	this.instance = new Array();
	this.key = {
		
	}
}

/**
 * var a = new Set();
 * a.add(1);
 * a.add(2);
 * a.add(3);
 * a.add(4);
 * a.add(5, 6, 7, 8, 9);
 */
Set.prototype.add = function(){
	if(arguments == null || arguments.length < 1){
		throw "arguments is null";
	}
	
	for(var i = 0; i < arguments.length; i++) {
		var a = arguments[i];
		if(!this.contains(a)){ //\u5b58\u5728
			this.instance[this.size()] = a;
			this.key[a] = "A8"; //\u968f\u4fbf\u7ed9\u4e2a\u503c
		}
	}
}

Set.prototype.size = function(){
	return this.instance.length;
}

Set.prototype.contains = function(o){
	return this.key[o] != null;
}

Set.prototype.isEmpty = function(){
	return this.size() == 0;
}

Set.prototype.clear = function(){
	this.instance = new Array();
	this.key = {
		
	}
}

Set.prototype.get = function(index){
	if(this.isEmpty()){
		return null;
	}

	if(index > this.size()){
		return null;
	}

	return this.instance[index];
}

Set.prototype.toArray = function(){
	return this.instance;
}
Set.prototype.toString = function(){
	return this.instance.join(', ');
}

/**
 * StringStringBuffer\u5bf9\u8c61
 */
function StringBuffer(){
	this._strings_ = new Array();
}
StringBuffer.prototype.append = function(str){
	if(str){
		if(str instanceof Array){
			this._strings_ = this._strings_.concat(str);
		}
		else{
			this._strings_[this._strings_.length] = str;
		}
	}
	
	return this;
}
StringBuffer.prototype.reset = function(newStr){
	this.clear();
	this.append(newStr);
}
StringBuffer.prototype.clear = function(){
	this._strings_ = new Array();
}
StringBuffer.prototype.isBlank = function(){
	return this._strings_.length == 0;
}

StringBuffer.prototype.toString = function(sp){
	sp = sp == null ? "" : sp;
	if (this._strings_.length == 0)
		return "";
	return this._strings_.join(sp);
}

function V3X(){
	this.windowArgs = new Array();
	this.lastWindow = null;
	// Browser check
	var ua = navigator.userAgent;
	this.isMSIE = (navigator.appName == "Microsoft Internet Explorer");
	this.isMSIE5 = this.isMSIE && (ua.indexOf('MSIE 5') != -1);
	this.isMSIE5_0 = this.isMSIE && (ua.indexOf('MSIE 5.0') != -1);
	this.isMSIE6 = this.isMSIE && (ua.indexOf('MSIE 6') != -1);
	this.isMSIE7 = this.isMSIE && (ua.indexOf('MSIE 7') != -1);
	this.isMSIE8 = this.isMSIE && (ua.indexOf('MSIE 8') != -1);
	this.isMSIE9 = this.isMSIE && (ua.indexOf('MSIE 9') != -1);
	this.isGecko = ua.indexOf('Gecko') != -1;
	this.isGecko18 = ua.indexOf('Gecko') != -1 && ua.indexOf('rv:1.8') != -1;
	this.isSafari = ua.indexOf('Safari') != -1;
	this.isOpera = ua.indexOf('Opera') != -1;
	this.isFirefox = ua.indexOf('Firefox') != -1;
	this.isMac = ua.indexOf('Mac') != -1;
	this.isNS7 = ua.indexOf('Netscape/7') != -1;
	this.isNS71 = ua.indexOf('Netscape/7.1') != -1;
	this.isIpad = ua.indexOf('iPad') != -1;
	this.isChrome = ua.indexOf('Chrome') != -1;
	//IE6/7/8\u3001IE9\u3001FireFox\u3001iPad\u3001Chrome\u3001Safari\u3001Opera   
	this.currentBrowser = "";
	this.isMSIE10 = this.isMSIE && (ua.indexOf('MSIE 10') != -1);
	this.useFckEditor = this.isMSIE6;

	//\u5f15\u7528if(v3x.getBrowserFlag('selectPeople')){}
	this.browserFlag = {
			//\u5f39\u51fa\u6a21\u6001\u7a97\u53e3\u8fd8\u662f\u6b63\u5e38\u7a97\u53e3,true:\u6a21\u6001\u5bf9\u8bdd\u6846 \uff1bfalse\uff1a\u6b63\u5e38\u7a97\u53e3 -- \u9996\u9875\u6253\u5f00\u3001\u5904\u7406\u534f\u540c
			openWindow:[true,true,true,false,false,false,false],
			//\u9996\u9875\u680f\u76ee\u662f\u5426\u7528\u6a21\u6001\u5bf9\u8bdd\u6846\u6253\u5f00\uff0c\u53ea\u6709ipad\u7528open window
			sectionOpenDetail:[true,true,true,false,true,true,false],
			//\u9009\u4eba\u754c\u9762 true pc false ipad -- \u9009\u4eba\u754c\u9762\u5185\u90e8
			selectPeople:[true,true,true,false,true,true,false],
			//\u4e0d\u652f\u6301\u5bcc\u6587\u672c\uff0c\u53ea\u63d0\u4f9b\u7eaf\u6587\u672c\u7f16\u8f91\u6846,true:\u652f\u6301\u5bcc\u6587\u672c\uff0cfalse\u4e0d\u652f\u6301 -- \u95ee\u672c\u7f16\u8f91\u5668
			htmlEditer:[true,true,true,false,true,true,false],
			//\u83dc\u5355 -- \u7cfb\u7edf\u5185\u90e8toolbar
			hideMenu:[true,true,true,false,true,true,false],
			//\u4f7f\u7528flash \u65b0\u5efa\u6d41\u7a0b\u56fe
			newFlash:[true,true,true,false,true,false,false],
			//\u7b7e\u7ae0,true\u652f\u6301 false\u4e0d\u652f\u6301 -- \u7b7e\u7ae0
			signature:[true,true,false,false,false,false,false],
			//\u65b0\u5efa\u6d41\u7a0b true pc\u6a21\u5f0f false \u53ea\u65b0\u5efa\u4e00\u6b21 -- 
			createProcess:[true,true,true,false,true,true,false],
			//flash  pc\u6a21\u5f0f false html5 -- 
			flash:[true,true,true,false,true,true,false],
			//\u662f\u5426\u5141\u8bb8\u4e0b\u8f7d true \u5141\u8bb8\u4e0b\u8f7d false \u5c4f\u853d\u4e0b\u8f7d  -- \u7cfb\u7edf\u5185\u90e8toolbar
			downLoad:[true,true,true,false,true,true,false],
			//\u6253\u5370 true pc false ipad -- \u7cfb\u7edf\u5185\u90e8toolbar/\u529f\u80fd
			print:[true,true,true,false,true,true,false],
			//\u5bfc\u51faExcel  true pc false ipad -- \u9690\u85cf\u5bfc\u51fa\u529f\u80fd
			exportExcel:[true,true,true,false,true,true,false],
			//\u662f\u5426\u663e\u793a\u4e0a\u4e0b\u7ed3\u6784,true:\u663e\u793a\u4e0a\u4e0b\u7ed3\u6784;false:\u7eaf\u5217\u8868\u663e\u793a -- \u4e0a\u4e0b\u7ed3\u6784
			pageBreak:[true,true,true,false,true,true,false],
			//\u83dc\u5355\u5b9a\u4f4d\u53ea\u51c6\u5bf9ipad -- \u7a7a\u95f4\u680f\u76ee\u4e0b\u62c9\u83dc\u5355
			menuPosition:[false,false,false,true,false,false,false],
			//office\u63d2\u4ef6 --
			officeMenu:[true,true,false,false,false,false,false],
			//\u9009\u4eba\u754c\u9762\u5185\u90e8div\u6539\u9020 -- \u9009\u4eba\u754c\u9762select list ipad \u4e0d\u80fd\u5c55\u5f00
			selectPeopleShowType:[true,true,true,false,true,true,false],
			//div\u5b9e\u73b0\u6a21\u6001\u7a97\u53e3 -- div\u5b9e\u73b0\u6a21\u6001
			OpenDivWindow:[true,true,true,false,true,true,false],
			//select div\u6539\u9020
			selectDivType:[true,true,true,false,true,true,false],
			//ipad\u4e0d\u652f\u6301\u53cc\u51fb\u4e8b\u4ef6
			onDbClick:[true,true,true,false,true,true,true],
			//safari \u4e0b\u9700\u8981\u6a21\u6001
			needModalWindow:[true,true,true,false,true,true,false],
			//\u53ea\u6709ie
			onlyIe:[true,true,false,false,false,false,false]
	}
	
	this.dialogCounter = 0;
	
	this.defaultLanguage = "en";
	this.currentLanguage = "";
	this.baseURL = "";
	this.loadedFiles = new Array();
	this.workSpaceTop = 130;
	if(this.isMSIE8){
		this.workSpaceTop = 140;
	}
	if(!this.isMSIE7 && !this.isMSIE8){
		this.workSpaceTop = 130;
	}
	this.workSpaceLeft = 0;
	this.workSpaceWidth = screen.width - this.workSpaceLeft;
	this.workSpaceheight = screen.height - this.workSpaceTop - 20 - (this.isMSIE7 ? 35 : 0);

	// Fake MSIE on Opera and if Opera fakes IE, Gecko or Safari cancel those
	if (this.isOpera) {
		this.isMSIE = true;
		this.isGecko = false;
		this.isSafari =  false;
	}
	
	this.settings = {
		dialog_type : "modal",
		resizable : "yes",
		scrollbars : "yes"
	};
}

V3X.prototype.init = function(contextPath, language){	
	if(contextPath){
		this.baseURL = contextPath;
	}
	
	this.currentLanguage = language;		
	this.loadLanguage("/common/js/i18n");
	
	this.loadScriptFile(this.baseURL + "/common/office/license.js?V=3_50_2_29");
	this.getCurrentBrowser();
}


V3X.prototype.getCurrentBrowser = function(){
	
	////IE6/7/8\u3001IE9\u3001FireFox\u3001iPad\u3001Chrome\u3001Safari\u3001Opera   
	
	if(this.isMSIE || this.isMSIE5 || this.isMSIE5_0 || this.isMSIE7 || this.isMSIE8) this.currentBrowser = 'MSIE';
	
	if(this.isMSIE9) this.currentBrowser = 'MSIE9';
	
	if(this.isFirefox) this.currentBrowser = 'FIREFOX';
	
	if(this.isSafari) this.currentBrowser = 'SAFARI';
	
	if(this.isChrome) this.currentBrowser = 'CHROME';
	
	if(this.isIpad) this.currentBrowser = 'IPAD';
	
	if(this.isOpera) this.currentBrowser = 'OPERA';
		
	
}

V3X.prototype.getBrowserFlag = function(name){
	
	////IE6/7/8\u3001IE9\u3001FireFox\u3001iPad\u3001Chrome\u3001Safari\u3001Opera   
	if(name != null && name!=''){
	
		var i =0;
		
		if(this.currentBrowser == 'MSIE')  i = 0;
		
		if(this.currentBrowser == 'MSIE9')  i = 1;
		
		if(this.currentBrowser == 'FIREFOX')  i = 2;
		
		if(this.currentBrowser == 'IPAD')  i = 3;
		
		if(this.currentBrowser == 'CHROME')  i = 4;
		
		if(this.currentBrowser == 'SAFARI')  i = 5;
		
		if(this.currentBrowser == 'OPERA')  i = 6;
		
		return this.browserFlag[name][i];
		
	}
	
}
//div\u7a97\u53e3
V3X.prototype.openDialog = function(json) {
	return new MxtWindow(json);
}
//\u83b7\u5f97event,\u517c\u5bb9\u591a\u6d4f\u89c8\u5668
V3X.prototype.getEvent = function(){   
    if(this.isMSIE){
        return window.event;//\u5982\u679c\u662fie
    }
    func=v3x.getEvent.caller;
    while(func!=null){
        var arg0=func.arguments[0];
        if(arg0){
            if((arg0.constructor==Event || arg0.constructor ==MouseEvent) || (typeof(arg0)=="object" && arg0.preventDefault && arg0.stopPropagation)){
                return arg0;
             }
         }
         func=func.caller;
     }
    return null;
}   
/**
 * 
	var args = new Array();
	
	args['file']   = 'about.htm';
	args['width']  = 480;
	args['height'] = 380;
	
	v3x.openWindow(args});
 */
V3X.prototype.openWindow = function(args) {
	var html, width, height, x, y, resizable, scrollbars, url;

	this.windowArgs = args;

	html = args['html'];
		
	if(args["FullScrean"]){
		width = this.workSpaceWidth;
		height = this.workSpaceheight + this.workSpaceTop;
		
		x = 0;
		y = 0; 
	}
	else if(args["workSpace"]){
		width = this.workSpaceWidth;
		height = this.workSpaceheight;
		
		x = this.workSpaceLeft;
		y = this.workSpaceTop; 
		if(this.isSafari){
			y = y-40;
		}
	}
	else if(args["workSpaceRight"]){
		width = this.workSpaceWidth - 155;
		height = this.workSpaceheight;
		if(this.isMSIE8){
			height = this.workSpaceheight-48;
		}
		if(!this.isMSIE7 && !this.isMSIE8){
			width = this.workSpaceWidth - 165;
			height = this.workSpaceheight-35;
		}
		x = 140;
		y = this.workSpaceTop;
	}
	else{
		width = args['width'] || 320;
		height = args['height'] || 200;
		
		width = parseInt(width);
		height = parseInt(height);
		
		if (this.isMSIE){
			if(this.isMSIE7||this.isMSIE8){
				height -= 6;
			}
			else{
				height += 20;
			}
		}
		
		x = args["left"] || parseInt(screen.width / 2.0) - (width / 2.0);
		y = args["top"] || parseInt(screen.height / 2.0) - (height / 2.0);		
	}

	resizable = args['resizable'] || this.settings["resizable"];
	scrollbars = args['scrollbars'] || this.settings["scrollbars"];

	url = args['url'];

	if (html) {
		var win = window.open("", "v3xPopup" + new Date().getTime(), "top=" + y + ",left=" + x + ",scrollbars=" + scrollbars + ",dialog=yes,minimizable=" + resizable + ",modal=yes,width=" + width + ",height=" + height + ",resizable=" + resizable);
		if (win == null) {
			return;
		}

		win.document.write(html);
		win.document.close();
		win.resizeTo(width, height);
		win.focus();
		
		return win;
	}
	else {
		var dialog_type = args["dialogType"] || this.settings["dialog_type"];
		
		if (dialog_type == "modal") {
			var features = "resizable:" + resizable 
            + ";scroll:"
            + scrollbars + ";status:no;help:no;dialogWidth:"
            + width + "px;dialogHeight:" + height + "px;";
            
			if(args["workSpace"] || args["workSpaceRight"] || (args["left"] && args["top"])){
				features += "dialogTop:" + y + "px;dialogLeft:" + x + "px;";				
			}
			else{
				var cw = (parseInt(getA8Top().document.body.offsetWidth)-width)/2;
				var ch = (parseInt(getA8Top().document.body.offsetHeight)-height)/2;
				if(cw==null || ch==null || cw <0 || ch<0){cw=200;ch=200;}
				features += this.isMSIE ? "center:yes;" : "dialogTop:"+ch+"px;dialogLeft:"+cw+"px;";
			}
			var rv = window.showModalDialog(url, window, features);
			var temp = null;
			if(this.ModalDialogResultValue == undefined){
				temp = rv;
			}
			else{
				temp = this.ModalDialogResultValue;
				this.ModalDialogResultValue = undefined;
			}
			return temp;
		}
		else {
			var rv = null;
			var modal = (resizable == "yes") ? "no" : "yes";

			if (this.isGecko && this.isMac)
				modal = "no";

			if (args['closePrevious'] != "no")
				try {this.lastWindow.close();} catch (ex) {}
			if(window.dialogArguments && args["workSpace"]){
				y -=5;
				height -=25;
			}
			var win = window.open(url, "v3xPopup" + new Date().getTime(), "top=" + y + ",left=" + x + ",scrollbars=" + scrollbars + ",dialog=" + modal + ",minimizable=" + resizable + ",modal=" + modal + ",width=" + width + ",height=" + height + ",resizable=" + resizable);
			if (win == null) {
				return;
			}

			if (args['closePrevious'] != "no")
				this.lastWindow = win;

//			eval('try { win.resizeTo(width, height); } catch(e) { }');

			// Make it bigger if statusbar is forced
			if (this.isGecko) {
				if (win.document.defaultView.statusbar.visible)
					win.resizeBy(0, this.isMac ? 10 : 24);
			}

			win.focus();
			
			return win;
		}
	}
}

V3X.prototype.setResultValue = function(obj) {
	this.getParentWindow().v3x.ModalDialogResultValue = obj;
}

V3X.prototype.closeWindow = function(win) {
	win.close();
}

/**
 * \u5f97\u5230\u5f39\u51fa\u5f53\u524d\u7a97\u53e3\u7684\u76f4\u63a5\u7236\u7a97\u53e3
 */
V3X.prototype.getParentWindow = function(win){
	win = win || window;
	if(win.dialogArguments){
		return win.dialogArguments;
	}
	else{
		return win.opener || win;
	}
}

V3X.prototype.loadLanguage = function(url){
	this.loadScriptFile(this.baseURL + url + "/" + this.currentLanguage + ".js?V=3_50_2_29");
}

/**
 * \u662f\u5426\u662f\u5bbd\u5c4f
 */
V3X.prototype.isWidescreen = function(){
	return window.screen.width > 1200;
}
	
/**
 * JS\u7684\u56fd\u9645\u5316
 */
V3X.prototype.getMessage = function(key){
	try{
		var msg = eval("" + key);
		
		if(msg && arguments.length > 1){
			for(var i = 0; i < arguments.length - 1; i++) {
				var regEx = eval("messageRegEx_" + i);
				var repMe = "" + arguments[i + 1];
				if(repMe.indexOf("$_") != -1){
					repMe = repMe.replace("$_", "$$_");
				}
				msg = msg.replace(regEx, repMe);
			}
		}
		
		return msg;
	}
	catch(e){
	}
	
	return "";
}



/**
 * 
 */
V3X.prototype.loadScriptFile = function(url) {
	for (var i=0; i<this.loadedFiles.length; i++) {
		if (this.loadedFiles[i] == url)
			return;
	}

	document.write('<script language="javascript" type="text/javascript" charset="UTF-8" src="' + url + '"></script>');

	this.loadedFiles[this.loadedFiles.length] = url;
};
V3X.prototype.getElementPosition = function(el){
	var ua = navigator.userAgent.toLowerCase();
	var isOpera = (ua.indexOf('opera') != -1);
	var isIE = (ua.indexOf('msie') != -1 && !isOpera);
	// not opera spoof
	if(el.parentNode === null || el.style.display == 'none'){
		return false;
	}
	var parent = null;
	var pos = []; 
	var box;   
	if(el.getBoundingClientRect){//IE 
		box = el.getBoundingClientRect();
		var scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);
		var scrollLeft = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);
		return {x:box.left + scrollLeft, y:box.top + scrollTop}; 
	}else if(document.getBoxObjectFor){ // gecko 
		box = document.getBoxObjectFor(el); 
		var borderLeft = (el.style.borderLeftWidth)?parseInt(el.style.borderLeftWidth):0;
		var borderTop = (el.style.borderTopWidth)?parseInt(el.style.borderTopWidth):0; 
		pos = [box.x - borderLeft, box.y - borderTop];  
	}else{// safari & opera   
		pos = [el.offsetLeft, el.offsetTop];        
		parent = el.offsetParent;        
		if (parent != el) {             
			while (parent) {               
				pos[0] += parent.offsetLeft;               
				pos[1] += parent.offsetTop;              
				parent = parent.offsetParent;
			}
		}
		if (ua.indexOf('opera') != -1|| ( ua.indexOf('safari') != -1 && el.style.position == 'absolute')){                
			pos[0] -= document.body.offsetLeft;                
			pos[1] -= document.body.offsetTop;
		}
	}   
	if (el.parentNode){
		parent = el.parentNode;
	}else{
		parent = null;
	}
	while (parent && parent.tagName != 'BODY' && parent.tagName != 'HTML'){ // account for any scrolled ancestors      
		pos[0] -= parent.scrollLeft;         pos[1] -= parent.scrollTop;           
		if (parent.parentNode) {
			parent = parent.parentNode;
		}else {
			parent = null;
		}
	}
	return {x:pos[0], y:pos[1]}; 
}

/**
 * \u662f\u6309\u94ae\u5931\u6548\uff0c\u53c2\u6570button\u652f\u6301id\uff0c\u548cobject
 * 
 */
function disableButton(button, height){
	height = height || "100%";
	if(!button){
		return false;
	}
	
	var el = null;
	if(typeof button == "string"){
		el = document.getElementById(button);
	}
	else{
		el = button;
	}
	
	if(!el){
		return false;
	}
	
	if(document.readyState != "complete")	{
		if(typeof button == "string"){
			window.setTimeout("disableButton('"+button+"')", 2500);
		}else{
			window.setTimeout("disableButton("+button+")", 2500);
		}
		
		return;
	}
	
	var cDisabled = el.cDisabled;
	cDisabled=(cDisabled!=null);
	if(!cDisabled){
		el.cDisabled = true;
		
		if(document.getElementsByTagName){
			var str  = "<span style='background: buttonshadow; filter: chroma(color=white) dropshadow(color=buttonhighlight, offx=1, offy=1); height: " + height + ";'>";
				str += "  <span style='filter: mask(color=white); height: " + height + "'>";
				str += el.innerHTML
				str += "  </span>";
				str += "</span>";
				
			el.innerHTML = str;
		}
		else{
			el.innerHTML='<span style="background: buttonshadow; width: 100%; height: 100%; text-align: center;">'+'<span style="filter:Mask(Color=buttonface) DropShadow(Color=buttonhighlight, OffX=1, OffY=1, Positive=0); height: 100%; width: 100%; text-align: center;">'+el.innerHTML+'</span>'+'</span>';
		}
	
		if(el.onclick!=null){
			el.cDisabled_onclick = el.onclick;
			el.onclick = null;
		}
		
		if(el.onmouseover!=null){
			el.cDisabled_onmouseover = el.onmouseover;
			el.onmouseover = null;
		}
		
		if(el.onmouseout!=null){
			el.cDisabled_onmouseout = el.onmouseout;
			el.onmouseout = null;
		}
	}
}

/**
 * \u4f7f\u6309\u94ae\u751f\u6548
 */
function enableButton(button){
	if(!button){
		return false;
	}
	
	var el = null;
	if(typeof button == "string"){
		el = document.getElementById(button);
	}
	else{
		el = button;
	}
	
	if(!el){
		return false;
	}

	var cDisabled=el.cDisabled;
	cDisabled=(cDisabled!=null);
	
	if(cDisabled){
		el.cDisabled=null;
		el.innerHTML=el.children[0].children[0].innerHTML;
		
		if(el.cDisabled_onclick!=null){
			el.onclick=el.cDisabled_onclick;
			el.cDisabled_onclick=null;
		}
		
		if(el.cDisabled_onmouseover!=null){
			el.onmouseover=el.cDisabled_onmouseover;
			el.cDisabled_onmouseover=null;
		}
		
		if(el.cDisabled_onmouseout!=null){
			el.onmouseout=el.cDisabled_onmouseout;
			el.cDisabled_onmouseout=null;
		}
		
	}	
}



/*************************************   \u9644\u4ef6  **********************************************************/

var attachmentConstants = {
	height : 18	
}

function downloadAttachment(fileId, createDate, filename){
	var contextPath = v3x.baseURL;
	var f = document.forms['downloadFileForm'];
	if(!f){
		var form = document.createElement("<form name='downloadFileForm' action='" + contextPath + "/fileUpload.do' method='get' target='downloadFileFrame' style='margin:0px;padding:0px'></form>");
		document.body.appendChild(form);
		form.appendChild(document.createElement("<input type='hidden' name='method' value='download'>"));
		form.appendChild(document.createElement("<input type='hidden' name='viewMode' value='download'>"));
		form.appendChild(document.createElement("<input type='hidden' name='fileId' value=''>"));
		form.appendChild(document.createElement("<input type='hidden' name='createDate' value=''>"));
		form.appendChild(document.createElement("<input type='hidden' name='filename' value=''>"));

		f = document.forms['downloadFileForm'];
	}
	
	f.fileId.value = fileId;
	f.createDate.value = createDate;
	f.filename.value = filename;
	
	f.submit();
}

/**
 * \u9644\u4ef6\u5bf9\u8c61
 * \u7279\u522b\u8bf4\u660e\uff1aneedClone \u662f\u6307\uff0c\u8be5\u9644\u4ef6\u9700\u8981\u590d\u5236\uff0c\u5982\uff1a\u8f6c\u53d1\u534f\u540c\u7684\u539f\u6709\u9644\u4ef6\u9700\u8981\u590d\u5236\u4e00\u4efd
 */
function Attachment(id, reference, subReference, category, type, filename, mimeType, createDate, size, fileUrl, description, needClone,extension,icon,onlineView,isCanTransform,v){
	this.id = id;
	this.reference = reference;
	this.subReference = subReference;
	this.category = category;
	this.type = type;
	this.filename = filename;
	this.mimeType = mimeType;
	this.createDate = createDate;
	this.size = size;
	this.fileUrl = fileUrl;
	this.description = description || "";
	this.needClone = needClone;
	this.extension = extension;
	this.icon = icon;
	
	//office\u6c38\u4e2d\u8f6c\u6362\u5f00\u5173\u5224\u65ad\u53c2\u6570
	this.isCanTransform = isCanTransform == 'true' ? true : false; 
	
	this.onlineView = onlineView == null ? true : onlineView;
	
	this.extReference = ""; //\u6269\u5c55Reference\uff0c\u5728\u4fdd\u5b58\u9644\u4ef6\u8868\u7684\u65f6\u5019\uff0cReference\u5b57\u6bb5\u4ee5\u8fd9\u4e2a\u503c\u4e3a\u51c6\uff08\u524d\u63d0\u662f\u4e0d\u7a7a\uff09\uff0c\u5426\u5219\u4ee5\u63a5\u53e3\u4f20\u6765\u7684\u53c2\u6570\u4e3a\u51c6
	this.extSubReference = ""; //\u6269\u5c55subReference\uff0c\u5728\u4fdd\u5b58\u9644\u4ef6\u8868\u7684\u65f6\u5019\uff0csubReference\u5b57\u6bb5\u4ee5\u8fd9\u4e2a\u503c\u4e3a\u51c6\uff08\u524d\u63d0\u662f\u4e0d\u7a7a\uff09\uff0c\u5426\u5219\u4ee5\u63a5\u53e3\u4f20\u6765\u7684\u53c2\u6570\u4e3a\u51c6
	this.showArea = '';
	this.v=v;
}
/**
 * \u5728\u9644\u4ef6\u533a\u663e\u793a\u9644\u4ef6
 */
Attachment.prototype.show = function(isShowLink, isShowClose,onlineEdit){
	document.write(this.toString(isShowLink, isShowClose,onlineEdit));
}

var allowTransType = [ "doc", "docx", "xls", "xlsx", "ppt", "pptx", "rtf", "eio" ];

Attachment.prototype.allowTrans = function(){
	if(this.type != 0 && this.type != 3){
		return false;
	}
	
	if(parseInt(this.size) > 5242880){
		return false;
	}
	
	var filename = this.filename.toLowerCase();
	for ( var i = 0; i < allowTransType.length; i++) {
		if(filename.endsWith("." + allowTransType[i])){
			return true;
		}
	}
	
	return false;
}

/**
 * @param isShowLink
 * @param isShowDelete
 * @param onlineEdit
 */
Attachment.prototype.toString = function(isShowLink, isShowDelete, onlineEdit, width){
	var contextPath = v3x.baseURL;
	var str = "";
	str += "<div id='attachmentDiv_" + this.fileUrl + "' class='attachment_block' style='float: left;height: " + attachmentConstants.height + "px; line-height: 14px;' noWrap>"
	if(this.type != 1){
		str += "<img src='" + contextPath + "/common/images/attachmentICON/" + this.icon + "' border='0' height='16' width='16' align='absmiddle' style='margin-right: 3px;'>";
	}
	
	if(isShowLink && (this.type == 0 || this.type == 3 || this.type == 5)){//downloadURL
	    if(this.type == 3){
	    	str += "<a onclick=\'downloadAttachment(\""+this.fileUrl+"\",\""+this.createDate.substring(0, 10)+"\",\""+escapeStringToHTML(this.filename)+"\")\' title=\"" + escapeStringToHTML(this.filename) + "\" target='downloadFileFrame' style='font-size:12px;color:#007CD2;' class='like-a'>";
	    }
	    else{
			str += "<a href=\"" + contextPath + "/file" + (this.v?"Download":"Upload") + ".do?method=download&fileId=" + this.fileUrl + (this.v?("&v=" + this.v):"") + "&createDate=" + this.createDate.substring(0, 10) + "&filename=" + encodeURIComponent(this.filename) + "\" title=\"" + escapeStringToHTML(this.filename) + "\" target='downloadFileFrame' style='font-size:12px;color:#007CD2;'>";
	    }
	}
	if(onlineEdit){
		str += "<a onclick=\"editOfficeOnline(\'"+this.id+"\')\" title=\"" + escapeStringToHTML(this.filename) + "\" target='downloadFileFrame' style='font-size:12px;color:#007CD2;' class='like-a'>";
		isShowLink = true;
	}
	if((this.type == 2 || this.type == 4) && this.description && (onlineEdit != false)){	//\u6587\u6863
		var click = "";
		var suffix = ""; //\u8868\u5355\u5b50\u6d41\u7a0b\u4e2d\u7684\u5173\u8054\u6587\u6863 \u5173\u8054\u7684\u662f\u4e3b\u6d41\u7a0bid\uff0c\u9700\u8981\u5728\u6b64\u4f20\u5165\u5b50\u6d41\u7a0bid\uff0c\u7528\u4e8e\u5224\u65ad\u6743\u9650.
		if(this.type == 4){
			try{
				if(parent.parent.openerSummaryId && parent.parent.openerSummaryId != this.reference){
					suffix = "&openerSummaryId=" + parent.parent.openerSummaryId;
				} else {
					if(noFlowRecordId) {
						suffix = "&noFlowRecordId=" + noFlowRecordId;
					}
				}
			}
			catch(e){
			}
		}
		if(this.mimeType == "collaboration"){
			click = "openDetail('', 'affairId=" + this.description + "&openFrom=glwd&baseObjectId=" + this.reference +"&baseApp="+ this.category + suffix + "')";
		}
		if(this.mimeType == "edoc"){
			click = "openDetailURL('"+edocDetailURL+"?method=detail&from=Done&openFrom=glwd&affairId=" + this.description + "&isQuote=true&baseObjectId=" + this.reference +"&baseApp="+ this.category +"')";
		}
		else if(this.mimeType == "km"){
			click = "openDetailURL('" + docURL + "?method=docOpenIframeOnlyId&openFrom=glwd&docResId=" + this.description + "&baseObjectId=" + this.reference +"&baseApp="+ this.category + suffix + "')";
		}
		else if(this.mimeType == "meeting") {
			click = "openDetailURL('" + mtMeetingUrl + "?method=myDetailFrame&id=" + this.description + "&isQuote=true&baseObjectId=" + this.reference +"&baseApp="+ this.category + "&state=10');"
		}
		
		str += "<a class=\"like-a\" onclick=\"" + click + "\" title=\"" + escapeStringToHTML(this.filename) + "\" style='font-size:12px;color:#007CD2;'>";
		isShowLink = true;
	}
	
	if(this.type != 1){
		var len = 25;
		if(width){
			len = parseInt(width/8);
		}
		str += this.filename.getLimitLength(len).escapeHTML();
	}	
	
	if(this.size && this.type == 0){
		str += "(" + (parseInt(this.size/1024) + 1) + "KB)";
	}
	
	//\u663e\u793a\u94fe\u63a5
	if(isShowLink){
		str += "</a>";
	}
	
	if(isShowLink && this.onlineView == true && this.allowTrans() && this.isCanTransform){
		str += "[<a href=\"" + contextPath + "/officeTrans.do?method=view&fileId=" + this.fileUrl + "&createDate=" + this.createDate.substring(0, 10) + "&filename=" + encodeURIComponent(this.filename) + "\" target='downloadFileFrame' style='font-size:12px;color:#007CD2;'>" + v3x.getMessage("V3XLang.OfficeTrans_view") + "</a>]";
	}
	
	//\u663e\u793a\u5220\u9664
	if(isShowDelete){
		if(this.type == 4 || this.type == 3){
			str += "<img src='" + contextPath + "/common/images/attachmentICON/delete.gif' onclick='deleteAtt4Form(this)' fileName=\""+this.filename+"\" fileUrl=\""+this.fileUrl+"\" class='cursor-hand' title='" + v3x.getMessage('V3XLang.attachment_delete') + "' height='11' align='absmiddle'>";					
		}else if(this.type == 5){
		    str += "<img src='" + contextPath + "/common/images/attachmentICON/delete.gif' onclick='deleteAttachmentForImage(\"" + this.fileUrl + "\")' class='cursor-hand' title='" + v3x.getMessage('V3XLang.attachment_delete') + "' height='11' align='absmiddle'>";
		}else{
			str += "<img src='" + contextPath + "/common/images/attachmentICON/delete.gif' onclick='deleteAttachment(\"" + this.fileUrl + "\")' class='cursor-hand' title='" + v3x.getMessage('V3XLang.attachment_delete') + "' height='16' align='absmiddle'>";				
		}
	}
	str += "&nbsp;<input type=\"hidden\" name=\"input_file_id\"   value=\""+ this.fileUrl +"\" / >&nbsp;";
	str += "&nbsp;</div>";
	return str;
}
function deleteAtt4Form(obj){
	var fileUrl = obj.getAttribute?obj.getAttribute("fileUrl"):obj.fileUrl;
	var fileName = obj.getAttribute?obj.getAttribute("fileName"):obj.fileName;
	deleteAttachmentForForm(fileUrl,fileName);
}
function openDetailURL(_url) {
	var dialogType_temp = "modal";
	if(!v3x.getBrowserFlag('openWindow')){
		dialogType_temp = "open;"
	}
    var rv = v3x.openWindow({
	     url: _url,
	     dialogType:dialogType_temp,
	     workSpace: 'yes'
	});
	
}

/**
 * \u5c06\u9644\u4ef6\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u636e\u6846
 */
Attachment.prototype.toInput = function(){
	var str = "";
	str += "<input type='hidden' name='attachment_id' value='" + this.id + "'>";
	str += "<input type='hidden' name='attachment_reference' value='" + this.reference + "'>";
	str += "<input type='hidden' name='attachment_subReference' value='" + this.subReference + "'>";
	str += "<input type='hidden' name='attachment_category' value='" + this.category + "'>";
	str += "<input type='hidden' name='attachment_type' value='" + this.type + "'>";
	str += "<input type='hidden' name='attachment_filename' value='" + escapeStringToHTML(this.filename) + "'>";
	str += "<input type='hidden' name='attachment_mimeType' value='" + this.mimeType + "'>";
	str += "<input type='hidden' name='attachment_createDate' value='" + this.createDate + "'>";
	str += "<input type='hidden' name='attachment_size' value='" + this.size + "'>";
	str += "<input type='hidden' name='attachment_fileUrl' value='" + this.fileUrl + "'>";
	str += "<input type='hidden' name='attachment_description' value='" + this.description + "'>";
	str += "<input type='hidden' name='attachment_needClone' value='" + this.needClone + "'>";
	str += "<input type='hidden' name='attachment_extReference' value='" + this.extReference + "'>";
	str += "<input type='hidden' name='attachment_extSubReference' value='" + this.extSubReference + "'>";
	
	return str;
}
/**
 * \u5c06\u9644\u4ef6\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u636e\u6846(\u6b63\u6587\u9644\u4ef6)
 */
Attachment.prototype.toContentInput = function(){
	var str = "";
	str += "<input type='hidden' name='content_attachment_id' value='" + this.id + "'>";
	str += "<input type='hidden' name='content_attachment_reference' value='" + this.reference + "'>";
	str += "<input type='hidden' name='content_attachment_subReference' value='" + this.subReference + "'>";
	str += "<input type='hidden' name='content_attachment_category' value='" + this.category + "'>";
	str += "<input type='hidden' name='content_attachment_type' value='" + this.type + "'>";
	str += "<input type='hidden' name='content_attachment_filename' value='" + escapeStringToHTML(this.filename) + "'>";
	str += "<input type='hidden' name='content_attachment_mimeType' value='" + this.mimeType + "'>";
	str += "<input type='hidden' name='content_attachment_createDate' value='" + this.createDate + "'>";
	str += "<input type='hidden' name='content_attachment_size' value='" + this.size + "'>";
	str += "<input type='hidden' name='content_attachment_fileUrl' value='" + this.fileUrl + "'>";
	str += "<input type='hidden' name='content_attachment_description' value='" + this.description + "'>";
	str += "<input type='hidden' name='content_attachment_needClone' value='" + this.needClone + "'>";
	
	return str;
}
/**
 * \u5c06\u9644\u4ef6\u8f6c\u5316\u4e3ajson\u6570\u636e
 */
Attachment.prototype.toJson = function(){
	return "{id:\""+this.id+"\", reference:\""+this.reference+"\", subReference:\""+this.subReference+"\", category:\""+this.category+"\", type:\""+this.type+"\", filename:\""+escapeStringToHTML(this.filename)+"\", mimeType:\""+this.mimeType+"\", createDate:\""+this.createDate+"\", size:\""+this.size+"\", fileUrl:\""+this.fileUrl+"\", description:\""+this.description+"\", needClone:\""+this.needClone+"\",extension:\""+this.extension+"\",icon:\""+this.icon+"\",extReference:\""+this.extReference+"\",extSubReference:\""+this.extSubReference+"\"}";
}
/**
 * \u663e\u793a\u9644\u4ef6
 */
function showAttachment(subRef, type, attachmentTrId, numberDivId,showAttachmentArea){
	try{
		if(!theToShowAttachments){
			return;
		}
		var attachmentNumber = 0;
		var str = "";
		for(var i = 0; i < theToShowAttachments.size(); i++) {
			var att  = theToShowAttachments.get(i);
			
			if(att.subReference == subRef && att.type == type){
				str += att.toString(true, false);
				
				attachmentNumber++;
			}
		}
		if(!showAttachmentArea){
			document.write(str);
			document.close();
		}else{
			var inAtt = document.getElementById(showAttachmentArea);
			inAtt.innerHTML = str;
		}
		
		if(attachmentNumber > 0){
			if(attachmentTrId){
				var attachmentTr = document.getElementById(attachmentTrId);
				
				if(attachmentTr){
					attachmentTr.style.display = "";
				}
			}
			if(numberDivId){
				var attachmentNumberDiv = document.getElementById(numberDivId);
				if(attachmentNumberDiv){
					attachmentNumberDiv.innerHTML = "" + attachmentNumber;
				}
			}
		}else{
			if(attachmentTrId){
				var attachmentTr = document.getElementById(attachmentTrId);
				if(attachmentTr){
					attachmentTr.style.display = "none";
				}
			}
		}
		if(numberDivId){
			var attachmentNumberDiv = document.getElementById(numberDivId);
			if(attachmentNumberDiv){
				attachmentNumberDiv.innerHTML = "" + attachmentNumber;
			}
		}
	}
	catch(e){
	}
}
/**
 * \u5c55\u5f00\u9644\u4ef6\u533a\u57df
 */
function exportAttachment(obj){
	if(obj.getAttribute('expand')){
		return;
	}
	
	var originalClassName = obj.className;
	obj.className = 'div-float';
	
	var h = obj.scrollHeight;
	if(h >= (attachmentConstants.height * 2)){
		obj.className = 'attachment-all-80';
	}
	else{
		obj.className = originalClassName;
	}
	
	obj.setAttribute('expand', "yes");
}

/**********************************************/
/* \u4e00\u4e0b\u65b9\u6cd5\u7528\u5728\u4e0a\u4f20
/**********************************************/
var fileUploadAttachments = new Properties();
//\u5373\u65f6\u4e0a\u4f20 \u4e0d\u7528\u957f\u671f\u4fdd\u7559\u7684\u9644\u4ef6
var fileUploadAttachment = null;
// \u4e0a\u4f20\u6570\u91cf
var fileUploadQuantity = 5;
//\u663e\u793a\u9644\u4ef6\u7684\u533a\u57df
var attachObject = '';
//\u663e\u793a\u9644\u4ef6\u7684\u7c7b\u578b
var atttachTr = '';
//\u662f\u5426\u663e\u793a\u9644\u4ef6 \u5220\u9664\u6309\u94ae
var attachDelete ;
//\u663e\u793a\u9644\u4ef6\u7684\u4e2a\u6570\u7684\u533a\u57df
var attachCount = true;
//\u8868\u5355\u6b63\u6587\u4e2d\u7684\u5df2\u7ecf\u5220\u9664\u7684\u9644\u4ef6
var theHasDeleteAtt = new Properties() ;
//\u9644\u4ef6mineType\u5bf9\u5e94a8\u6587\u4ef6\u7c7b\u578b
var attFileType = new Properties();
/**
 * \u662f\u5426\u4e0a\u4f20\u4e86\u9644\u4ef6
 */
function isUploadAttachment(){
	return !fileUploadAttachments.isEmpty();
}
/**
 * attObj \u9644\u4ef6\u663e\u793a\u7684\u533a\u57df
 * attachTr \u9644\u4ef6\u7c7b\u578b\u663e\u793a\u7684\u533a\u57df
 * attachDe \u662f\u5426\u663e\u793a\u5220\u9664\u6309\u94ae
 * attachC  \u662f\u5426\u663e\u793a\u9644\u4ef6\u4e2a\u6570
 */
function resetAttachment(attObj,attachTr,attachDe,attachC){
	attachObject = attObj;
	atttachTr = attachTr;
	attachDelete = attachDe;
	attachCount = attachC;
	fileUploadAttachment = new Properties();
}
function clearUploadAttachments(){
	attachObject = '';
	atttachTr = '';
	attachDelete = null;
	attachCount = true;
	fileUploadAttachment.clear();
	fileUploadAttachment = null;
}
/**
 * \u5c06\u9644\u4ef6\u8f6c\u6210input
 */
function saveAttachment(inputObj,saveEditLog){
	var atts = null;
	if(fileUploadAttachment != null){
		atts = fileUploadAttachment.values();
	}else{
		atts = fileUploadAttachments.values();
	}
	
	var attachmentInputsObj = inputObj || document.getElementById("attachmentInputs") || document.getElementById("attachmentEditInputs");
	if(!saveEditLog || saveEditLog != 'false'){
		if(!atts || atts.size()<=0){
			if(attachmentInputsObj && attActionLog){
				attachmentInputsObj.innerHTML = attActionLog.toInput();
			}
			return true;
		}
	}

	
	var attInputStr = "";
	for(var i=0; i<atts.size(); i++) {
		attInputStr += atts.get(i).toInput();
	}
	if(attachmentInputsObj){
		attachmentInputsObj.innerHTML = attInputStr;
		//\u4fdd\u5b58\u7f16\u8f91\u540e\u7684\u9644\u4ef6
		if(!saveEditLog || saveEditLog != 'false'){
			if(attActionLog){
				attachmentInputsObj.innerHTML += attActionLog.toInput();
			}
		}
	}
	else{
		alert("Warn: Save attachments unsuccessful")
		return false;
	}
	
	return true;
}
function saveContentAttachment(inputObj){
	var atts = null;
	if(fileUploadAttachment != null){
		atts = fileUploadAttachment.values();
	}else{
		atts = fileUploadAttachments.values();
	}
	
	//\u5220\u9664\u9644\u4ef6\u7684\u65f6\u5019\u4e5f\u8981\u80fd\u591f\u4fdd\u5b58\uff0c\u6240\u4ee5\u5c06\u4e0b\u9762\u7684\u6ce8\u91ca\u6389
	//if(!atts || atts.size()<=0){
	//return true;
	//}
	
	var attInputStr = "";
	for(var i=0; i<atts.size(); i++) {
		attInputStr += atts.get(i).toContentInput();
	}
	
	var attachmentInputsObj = inputObj || parent.detailRightFrame.document.getElementById("contentAttachmentInputs");
	if(attachmentInputsObj){
		attachmentInputsObj.innerHTML = attInputStr;
		attachmentInputsObj.innerHTML+="<input type='hidden' name='isContentAttchmentChanged' value='1'>";
	}
	else{
		alert("Warn: Save attachments unsuccessful")
		return false;
	}
	
	return true;
}

/**
 * \u5c06\u9644\u4ef6\u8f6c\u6210input\u8fd4\u56de
 */
function getAttachmentsToMap(){
	var atts = fileUploadAttachments.values();
	
	if(!atts || atts.isEmpty()){
		return true;
	}
	
	var attInputStr = "";
	for(var i=0; i<atts.size(); i++) {
		attInputStr += atts.get(i).toMap();
	}
	if(attInputStr!=null)
	{
		return attInputStr;
	}
	
}
/**
 * \u5c06\u9644\u4ef6\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u636e\u6846
 */
Attachment.prototype.toMap = function(){
	var str = "#attachment_id="+this.id+";";
	str += "attachment_reference" + this.reference + ";";
	str += "attachment_subReference=" + this.subReference + ";";
	str += "attachment_category=" + this.category + ";";
	str += "attachment_type=" + this.type + ";";
	str += "attachment_filename=" + escapeStringToHTML(this.filename) + ";";
	str += "attachment_mimeType=" + this.mimeType + ";";
	str += "attachment_createDate=" + this.createDate + ";";
	str += "attachment_size=" + this.size + ";";
	str += "attachment_fileUrl=" + this.fileUrl + ";";
	str += "attachment_description=" + this.description + ";";
	str += "attachment_needClone=" + this.needClone + ";";
	
	return str;
}
/**
 * \u8bbe\u7f6e\u9644\u4ef6\u7684\u662f\u5426\u590d\u5236\u5c5e\u6027
 */
function cloneAllAttachments(){
	var atts = fileUploadAttachments.values();

	for(var i = 0; i < atts.size(); i++) {
		atts.get(i).needClone = true;
	}
}

/**
 * \u5220\u9664\u9644\u4ef6
 */
function deleteAttachment(fileUrl, showAlert){
	var file = fileUploadAttachments.get(fileUrl);
	if(file == null){
		return;
	}
	if(showAlert != false ){
		if(file.type == '2'){
			if(!confirm(v3x.getMessage("V3XLang.attachent_delete_relation_alert", file.filename))){
				return 1;
			}
		}else if(!confirm(v3x.getMessage("V3XLang.attachment_delete_alert", file.filename))){
			return 1;
		}
	}
	
	fileUploadAttachments.remove(fileUrl);
	document.getElementById("attachmentDiv_" + fileUrl).parentNode.removeChild(document.getElementById("attachmentDiv_" + fileUrl));
	
	showAttachmentNumber(file.type);
	
	var num = getFileAttachmentNumber(file.type);
	if(num < 1){
		if(!(typeof(_updateAttachmentState)!="undefined" && _updateAttachmentState))
		showAtachmentTR(file.type, "none");
	}
	//\u53ea\u6709\u662f\u5df2\u53d1\u9001\u4e2d\u9012\u8fc7\u6765\u7684\u624d\u9a6c\u4e0a\u63d0\u4ea4\u3002
	var attachmentInputsObj=document.getElementById("attachmentInputs");
	var canUpdateAttachmentFromSended= document.getElementById("canUpdateAttachmentFromSended");
	if(canUpdateAttachmentFromSended && canUpdateAttachmentFromSended.value=="submit") 
		updateAttachment('del',attachmentInputsObj);
	//\u662f\u5426\u6267\u884c\u4e86\u5220\u9664\u64cd\u4f5c\u3002
	if(typeof(removeChanged)!= 'undefined') removeChanged=true;
	///
}
//\u5220\u9664\u9644\u4ef6\u5e76\u91cd\u7f6e\u5176\u4ed6\u6570\u636e -- \u7528\u4e8e\u65b0\u95fb\u56fe\u7247\u7684\u6dfb\u52a0
function deleteAttachmentForImage(fileUrl, showAlert){
	deleteAttachment(fileUrl, showAlert);
	var imageId = document.getElementById("imageId");
	if(imageId){
		imageId.value = "";
	}
}

/**
 * \u6309\u94ae\u4e8b\u4ef6
 */
function insertAttachment(){
	var url = downloadURL + "&quantity=" + fileUploadQuantity;
	if(arguments && arguments[0]){
		url += "&selectRepeatSkipOrCover=" + arguments[0];
	}
	v3x.openWindow({
		url		: url,
		width	: 400,
		height	: 250,
		resizable	: "yes"
	});
}


//\u5173\u8054\u6587\u6863
function insertCorrelationFile(){
	var atts = v3x.openWindow({
	         url: v3x.baseURL + '/ctp/common/associateddoc/assdocFrame.do?isBind=1,3',
           height: 600,
           width: 800
         });
        activeOcx();
      if (atts) {
		   deleteAllAttachment(2);
              for (var i = 0; i < atts.length; i++) {
                var att = atts[i];
                       addAttachment(att.type, att.filename, att.mimeType, att.createDate, att.size, att.fileUrl, true, false, att.description, null,  att.mimeType + ".gif");					   
                 }
        }
}

/**
 * \u6dfb\u52a0\u9644\u4ef6
 */	
function addAttachment(type, filename, mimeType, createDate, size, fileUrl, canDelete, needClone, description, extension, icon, reference, category, onlineView, width,isCanTransform,hasSaved,v) {
	canDelete = canDelete == null ? true : canDelete;
	needClone = needClone == null ? false : needClone;
	description = description ==null ? "" : description;
	if(attachDelete != null) canDelete = attachDelete;
	if(!reference){
		reference = "";
	}
	if(!category){
		category = "";
	}
	var attachment = new Attachment('', reference, '', category, type, filename, mimeType, createDate, size, fileUrl, description, needClone,extension,icon, onlineView,isCanTransform,v);
	attachment.showArea = '';
	if(fileUploadAttachment != null){
		if(fileUploadAttachment.containsKey(fileUrl)){
			return;
		}
		fileUploadAttachment.put(fileUrl, attachment);
	}else{
		if(fileUploadAttachments.containsKey(fileUrl)){
			return;
		}
		fileUploadAttachments.put(fileUrl, attachment);
	}
	showAtachmentObject(attachment, canDelete, width);
	showAtachmentTR(type);
	if(attachCount)
		showAttachmentNumber(type);
	if(typeof(currentPage) !="undefined" && currentPage== "newColl"){
		addScrollForDocument();
	}
}
//start by dongyj --\u9644\u4ef6\u7f16\u8f91
//action 0.\u6dfb\u52a0 1.\u4fee\u6539 2.\u5220\u9664
function AttActionLog(reference,subReference,logs,editAtt){
	this.reference = reference;
	this.subReference = subReference;
	this.logs = logs;
	this.editAtt = editAtt;
}
AttActionLog.prototype.toInput = function(){
	var result = "";
	if(this.logs && !this.logs.isEmpty()){
		result +="<input type='hidden' name='reference' value='"+this.reference+"'>";
		result +="<input type='hidden' name='subReference' value='"+this.subReference+"'>";
		result +="<input type='hidden' name='isEditAttachment' value='1'/>";
		result +="<input type='hidden' name='editAttachmentSize' value='"+this.editAtt.size()+"'/>";
		//\u8bb0\u5f55log attachment
		for(var i = 0 ; i< this.logs.size();i++){
			result +=this.logs.get(i).toInput();
		}
		for(var i = 0 ; i< this.editAtt.size();i++){
			result +=this.editAtt.get(i).toInput();
		}
	}
	return result;
}
function ActionLog(action,createDate,description){
	this.action = action;
	this.createDate = createDate;
	this.des = description;
}
ActionLog.prototype.toInput = function(){
	var str = "";
	str +="<input type='hidden' name='logAction' value='"+this.action+"'>"
	str +="<input type='hidden' name='logCreateDate' value='"+this.createDate+"'>"
	str +="<input type='hidden' name='logDesc' value='"+this.des+"'>"
	return str;
}
function copyActionLog(actionLog){
	var result = new ActionLog(actionLog.action,actionLog.createDate,actionLog.des);
	return result;
}
function copyAttachment(attachment){
	var result = new Attachment(attachment.id, attachment.reference, attachment.subReference, attachment.category, attachment.type, attachment.filename, attachment.mimeType, attachment.createDate, attachment.size, attachment.fileUrl, attachment.description, attachment.needClone,attachment.extension,attachment.icon);
	result.onlineView = attachment.onlineView;
	result.extReference = attachment.extReference;
	result.extSubReference = attachment.extSubReference;
	return result;
}
var attActionLog = null;
/**
 * \u663e\u793a\u4fee\u6539\u9644\u4ef6\u9875\u9762 \u7f16\u8f91\u6210\u529f\uff0c\u8fd4\u56de\u53d7\u8fc7\u7f16\u8f91\u7684\u9875\u9762\u3002\u4e0d\u6210\u529f\uff0c\u8fd4\u56denull
 * @param atts \u9700\u8981\u7f16\u8f91\u7684\u9644\u4ef6 
 * @param reference \u5173\u8054id  not null
 * @param subReference \u6b21\u5173\u8054id not null
 * @param category \u6240\u5c5e\u5e94\u7528;\u5173\u8054\u6587\u6863\u534f\u540c1\uff0c\u516c\u65874
 */
function editAttachments(atts,reference,subReference,category){
	if(attActionLog == null){
		attActionLog = new AttActionLog(reference,subReference,null,atts);
	}
	reference = reference || "";
	subReference = subReference || "";
	var result = v3x.openWindow({
		url		: getA8Top().v3x.baseURL + "/genericController.do?ViewPage=common/fileUpload/attEdit&category="+category+"&reference="+reference+"&subReference="+subReference,
		width	: 550,
		height	: 430,
		resizable	: "yes"
	});
	if(result){
		var attachmentList = new ArrayList();
		var inst = result[0].instance;
		for(var i = 0 ;i < inst.length;i++){
			var att = copyAttachment(inst[i]);
			att.onlineView = false;
			attachmentList.add(att);
		}
		var logList = new ArrayList();
		inst = result[1].instance;
		if(inst.length ==0) return false;
		for(var i = 0 ;i < inst.length;i++){
			var att = copyActionLog(inst[i]);
			logList.add(att);
		}
		var save = saveEditAttachments(logList,attachmentList);
		if(!save){
			return null;
		}
		return attActionLog.editAtt;
	}
	return null;
}
function saveEditAttachments(logs,attList){
	if(!attActionLog || logs.size() ==0){
		return false;
	}
	if(attActionLog.logs){
		attActionLog.logs.addList(logs);
	}else{
		attActionLog.logs = logs;
	}
	attActionLog.editAtt = attList;
	return true;
}
/**
 * \u6839\u636e4\u4e2a\u53c2\u6570\u5f97\u5230\u672c\u5730\u5b58\u653e\u7684\u9644\u4ef6
 * @param category\u6240\u5c5e\u5e94\u7528
 * @param reference \u5173\u8054id \u4e0d\u6307\u5b9a\u4e3a\u4e0d\u9650\u5236
 * @param subReference \u6b21\u5173\u8054id \u4e0d\u6307\u5b9a\u4e3a\u4e0d\u9650\u5236
 * @param type \u7c7b\u578b\uff08\u672c\u5730\u6587\u6863\u3001\u5173\u8054\u6587\u6863\uff09;\u591a\u79cd\u6709","\u9694\u5f00\uff0c\u4e0d\u6307\u5b9a\u4e3a\u4e0d\u9650\u5236
 */
function getAttachment(reference,subReference,type){
	var result = new ArrayList();
	for(var i = 0 ; i < theToShowAttachments.size();i++){
		var att = theToShowAttachments.get(i);
		if(((reference && att.reference == reference) || !reference) && ((subReference && att.subReference == subReference) || !subReference) && ((type && att.type == type) || !type)){
			result.add(att);
		}
	}
	return result;
}
/**
 * \u66f4\u65b0\u672c\u5730\u7684\u9644\u4ef6
 * @param attList \u66f4\u65b0\u540e\u9644\u4ef6List<Attachment>
 * @param reference \u5173\u8054id
 * @param subReference \u6b21\u5173\u8054id
 * @param type \u7c7b\u578b\uff08\u672c\u5730\u6587\u6863\u3001\u5173\u8054\u6587\u6863\uff09;
 */
function updateAttachmentMemory(attList,reference,subReference,type){
	//\u672c\u5730\u5220\u9664 clinetAttList
	var clinetAttList = getAttachment(reference,subReference,type);
	for(var i = 0; i < clinetAttList.size(); i++) {
		var att  = clinetAttList.get(i);
		theToShowAttachments.remove(att);
	}
	//\u5185\u5b58\u4fdd\u5b58\u4fee\u6539\u540e\u7684\u9644\u4ef6\u5217\u8868 attList
	for(var i = 0 ; i < attList.size();i++){
		theToShowAttachments.add(attList.get(i));
	}
}
//end by dongyj \u9644\u4ef6\u7f16\u8f91
//type:\u64cd\u4f5c\u7c7b\u578b\uff0c\u6dfb\u52a0(add)/\u5220\u9664(del)
//attachmentInputsObj:\u63d2\u5165\u7684\u533a\u57df
function updateAttachment(type,attachmentInputsObj){
	//1.\u4fdd\u5b58\u9644\u4ef6
	saveContentAttachment(attachmentInputsObj);
	updateAttachmentOnly(type);
}
//\u516c\u6587\u53d1\u8d77\u4eba\u4fee\u6539\u9644\u4ef6
//type:\u64cd\u4f5c\u7c7b\u578b\uff0c\u589e\u52a0\u6216\u8005\u5220\u9664
function updateAttachmentOnly(type){
	//2.\u5411\u540e\u53f0\u66f4\u65b0\u9644\u4ef6\u7684\u53d8\u5316\u60c5\u51b5
	 $('#attchmentForm').ajaxSubmit({
	        url : genericURL + "?method=updateAttachment&edocSummaryId="+edocSummaryId+"&affairId="+affairId,
	        type : 'POST',
	        success : function(data) {
	        	//\u5728\u5df2\u53d1\u4e2d\u4fee\u6539\u9644\u4ef6\u7ed9\u51fa\u63d0\u793a\uff0c\u662f\u5426\u6210\u529f\u6216\u8005\u5931\u8d25\u3002
//	        	if(_form=="sended"){
//		        	if(data=="SUCCESS"){//\u6210\u529f
//		        		if(type=="add"){
//		        			alert(_("V3XLang.attachment_prompt_add_success"));
//		        		}else if(type=="del"){
//		        			alert(_("V3XLang.attachment_prompt_delete_success"));
//		        		}
//		        	}else{//\u5931\u8d25
//	        			if(type=="add"){
//	        				alert(_("V3XLang.attachment_prompt_add_error"));
//	        			}else if(type=="del"){
//	        				alert(_("V3XLang.attachment_prompt_delete_error"));
//	        			}
//		        	}
//	        	}
	 		}
	 })         	
                	
}

function deleteAllAttachment(uploadNum)
{
	var keys = fileUploadAttachments.keys();
	for(var i = 0; i < keys.size(); i++) {
		var att = fileUploadAttachments.get(keys.get(i));
		if(att.type == uploadNum){
			fileUploadAttachments.remove(keys.get(i));
			i -= 1;
		}
	}
	
	var id = "attachmentArea";
	if(uploadNum != 0){
		id = "attachment" + uploadNum + "Area";
	}
	
	var attachmentAreaObj = document.getElementById(id);
	if(attachmentAreaObj){
		attachmentAreaObj.style.display = "";
		attachmentAreaObj.innerHTML ="";
	}
	
	var id = "attachmentTR";
	if(uploadNum != 0){
		id = "attachment" + uploadNum + "TR";
	}
		
	var attachmentTRObj = document.getElementById(id);
	if(attachmentTRObj){
		//_display = _display || "";
		attachmentTRObj.style.display = "none";
		//attachmentTRObj.innerHTML="";
	}
}

//\u663e\u793a\u589e\u52a0\u9644\u4ef6\u7684\u6309\u94ae\u548c\u5220\u9664\u9644\u4ef6\u7684\u6309\u94ae\u3002
function showUpdateAttachment(type){
	//\u5df2\u7ecf\u5904\u4e8e\u9644\u4ef6\u4fee\u6539\u72b6\u6001\u4e0d\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c
	if(_updateAttachmentState)return;
	
	//1.\u663e\u793a\u201c\u63d2\u5165\u9644\u4ef6\u201d\u7684\u884c
	var attachmentTr=document.getElementById("attachmentTr");
	if(attachmentTr)attachmentTr.style.display="";
	var normalText=document.getElementById("normalText");
	if(normalText)normalText.style.display="none";
	var uploadAttachmentTR=document.getElementById("uploadAttachmentTR");
	if(uploadAttachmentTR)uploadAttachmentTR.style.display="";
	
	if(!theToShowAttachments)return;
	
	var attachmentAreaObj = document.getElementById("attachmentArea");
	var attachmentArea2Obj = document.getElementById("attachment2Area");
	var contextPath = v3x.baseURL;
	for(var i = 0; i < theToShowAttachments.size(); i++) {
		var att  = theToShowAttachments.get(i);
		if(att.type==0 && att.type==type){
			//\u672c\u5730\u9644\u4ef6
			var attDiv=document.getElementById("attachmentDiv_"+att.fileUrl);
			if(attDiv){
				var a=attDiv.getElementsByTagName("a");
				if(a){
					var delImg = "<img src='" + contextPath + "/common/images/attachmentICON/delete.gif' onclick='deleteAttachment(\"" + att.fileUrl + "\")' class='cursor-hand' title='" + v3x.getMessage('V3XLang.attachment_delete') + "' height='16' align='absmiddle'>";		
					a[0].insertAdjacentHTML("afterEnd",delImg);	
				}
			}
		}else if(att.type==2 && att.type==type){
			//\u5173\u8054\u6587\u6863
			var attDiv=document.getElementById("attachmentDiv_"+att.fileUrl);
			if(attDiv){
				var a=attDiv.getElementsByTagName("a");
				if(a){
					var delImg = "<img src='" + contextPath + "/common/images/attachmentICON/delete.gif' onclick='deleteAttachment(\"" + att.fileUrl + "\")' class='cursor-hand' title='" + v3x.getMessage('V3XLang.attachment_delete') + "' height='16' align='absmiddle'>";		
					a[0].insertAdjacentHTML("afterEnd",delImg);	
				}
			}
		}
	}	
	_updateAttachmentState=true;	
}
/**
 * \u663e\u793a\u9644\u4ef6\u5bf9\u8c61
 */
function showAtachmentObject(attachment, canDelete, width){
	if(!attachment){
		return
	}
	var id = "attachmentArea";
	if(attachment.type != 0){
		id = "attachment" + attachment.type + "Area";
	}
	if(attachObject){
		id = attachObject;
	}
	var attachmentAreaObj = document.getElementById(id);
	if(attachmentAreaObj){
		attachmentAreaObj.style.display = "";
		attachmentAreaObj.innerHTML += attachment.toString(true, canDelete, undefined, width);
	}
}

/**
 * \u663e\u793a\u9644\u4ef6\u884c
 * @type \u9644\u4ef6\u7c7b\u578b
 * @param _display style.display\u503c\uff0c\u9ed8\u8ba4\u663e\u793a
 */
function showAtachmentTR(type, _display){
	var id = "attachmentTR";
	if(type != 0){
		id = "attachment" + type + "TR";
	}
	if(atttachTr){
		id = atttachTr;
	}
	var attachmentTRObj = document.getElementById(id);
	if(attachmentTRObj){
		_display = _display || "";
		attachmentTRObj.style.display = _display;
	}
}

/**
 * \u663e\u793a\u6587\u4ef6\u9644\u4ef6\u7684\u6570\u91cf
 */
function showAttachmentNumber(type){
	var id = "attachmentNumberDiv";
	if(type != 0){
		id = "attachment" + type + "NumberDiv";
	}
		
	var attachmentNumberDivObj = document.getElementById(id);
	if(attachmentNumberDivObj){
		try{
			attachmentNumberDivObj.innerText = getFileAttachmentNumber(type);
		}catch(e){}
	}
}

/**
 * \u6587\u4ef6\u9644\u4ef6\u7684\u6570\u91cf
 */
function getFileAttachmentNumber(type){
	var number = 0;
	
	var files = fileUploadAttachments.values();
	if(!files){
		return number;
	}
	
	for(var i = 0; i < files.size(); i++) {
		if(files.get(i).type == type){
			number++;
		}
	}
		
	return number;
}
/**
 * \u6587\u4ef6\u9644\u4ef6\u7684\u540d\u79f0
 */
function getFileAttachmentName(type){
    var atts = fileUploadAttachments.values();	
	if(!atts){
		return "";
	}
	var str = "";
	for(var i = 0; i < atts.size(); i++) {
			var att  = atts.get(i);			
			if(att.type == type){
				str += "<div id='attachmentDiv_" + att.fileUrl + "' style='float: left;height: " + 
                                                   attachmentConstants.height + "px; line-height: 14px;' noWrap>";
	                        str += "<img src='" + v3x.baseURL + "/common/images/attachmentICON/" + att.icon + "' border='0' height='16' width='16'                                                    align='absmiddle' style='margin-right: 3px;'/>";
                            str += att.filename;
                            str += "&nbsp;</div>";
                           
			}
	}
        
            
	return str;		
}
/**
 * \u53d1\u9001\u534f\u540c\u7528\u6587\u4ef6\u9644\u4ef6\u7684\u540d\u79f0
 */
function getSenderAttachmentName(subRef,type){
       var atts = parent.theToShowAttachments;
       if(!atts){
		return "";
	}
	var str = "";
	for(var i = 0; i < atts.size(); i++) {
			var att  = atts.get(i);			
			if(att.type == type&&att.subReference ==subRef){
				str += "<div id='attachmentDiv_" + att.fileUrl + "' style='float: left;height: " + 
                                                   attachmentConstants.height + "px; line-height: 14px;' noWrap>";
	                        str += "<img src='" + v3x.baseURL + "/common/images/attachmentICON/" + att.icon + "' border='0' height='16' width='16'                                                    align='absmiddle' style='margin-right: 3px;'/>";
                            str += att.filename;
                            str += "&nbsp;</div>";
                           
			}
	}
        
            
	return str;	
}



/********************************************  \u9009\u4eba\u754c\u9762\u5b9e\u4f53 **************************************************
 * @param type \u5b9e\u4f53\u7c7b\u578b\uff1aMember/Department/Post/Level
 * @param id \u5bf9\u5e94\u7684\u5b9e\u4f53InternalId
 * @param name \u5b9e\u4f53\u540d\u79f0
 * @param typeName \u5b9e\u4f53\u7c7b\u578b\u540d\u79f0\uff1a\u4eba\u5458/\u90e8\u95e8/\u5c97\u4f4d/\u804c\u52a1\u7ea7\u522b
 * @param acountId \u6240\u5c5e\u5355\u4f4did
 * @param accountShortname \u6240\u5c5e\u5355\u4f4d\u522b\u540d
 * @param excludeChildDepartment \u662f\u5426\u4e0d\u5305\u542b\u5b50\u90e8\u95e8\uff0ctrue\uff1a\u4e0d\u5305\u542b
 * @author tanmf 
 * Select People Element
 */
function Element(type, id, name, typeName, accountId, accountShortname, description){
	this.type = type;
	this.id = id;
	this.name = name;
	this.typeName = typeName;
	this.accountId = accountId || "";
	this.accountShortname = accountShortname || "";
	this.description = description;
	this.entity = null;
	this.isEnabled = true;
	this.excludeChildDepartment = false;
}

Element.prototype.copy = function(anth){
	this.type = anth.type;
	this.id = anth.id;
	this.name = anth.name;
	this.typeName = anth.typeName;
	this.accountId = anth.accountId;
	this.accountShortname = anth.accountShortname;
	this.description = anth.description;
	this.isEnabled = anth.isEnabled
	this.excludeChildDepartment = anth.excludeChildDepartment;
}

Element.prototype.toString = function(){
	return this.type + "\t" + this.id + "\t" + this.name + "\t" + this.typeName + "\t" + this.accountId + "\t" + this.accountShortname;
}

/**
 * \u5f97\u5230Element[] \u7684\u6240\u6709\u540d\u79f0\uff0c\u683c\u5f0f\u4e3a: \u8c2d\u654f\u950b,\u674e\u7acb,\u5f00\u53d1\u90e8
 */
function getNamesString(elements, _sp){
    if(!elements){
        return "";
    }
    
    var sp = v3x.getMessage("V3XLang.common_separator_label") || _sp;
    
    var names = [];
    for(var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var _name = null;
        
        if(e.accountShortname){
            _name = e.name + "(" + e.accountShortname + ")";
        }
        else{
            _name = e.name;
        }
        
        names[names.length] = _name;
    }
    
    return names.join(sp);
}

/**
 * \u5f97\u5230Element[] \u7684\u6240\u6709\u540d\u79f0\uff0c\u683c\u5f0f\u4e3a: \u8c2d\u654f\u950b,\u674e\u7acb,\u5f00\u53d1\u90e8
 */
function getFullNamesString(elements){
	if(!elements){
		return "";
	}
	
	var sp = v3x.getMessage("V3XLang.common_separator_label");
	
	var deptNames = [];
	var str = "";
	for(var i=0; i<elements.length; i++) {
		if(elements[i].type == "Department") {
			str += elements[i].id+",";
		}
	}
	if(str!="") {
		str = str.substring(0, str.length-1);
		var orgAccountId=document.getElementById("orgAccountId");
		var requestCaller = new XMLHttpRequestCaller(this, "ajaxOrgManager", "getParentDepartmentFullName", false);
		requestCaller.addParameter(1, "String", str);
		requestCaller.addParameter(2, "long", orgAccountId.value);
		var rs = requestCaller.serviceRequest();
		if(rs!=null) {
			deptNames = rs.split(",");
		}
	}
	var k = 0;
	var names = [];
	for(var i = 0; i < elements.length; i++) {
		var e = elements[i];
		var _name = null;
		if(e.type == "Department") {
			_name = deptNames[k];
			k++;
		} else {
			if(e.accountShortname){
				var appName=document.getElementById("appName");
			    if(appName && appName.value=="4"){
			        if(e.type=="Account"||(orgAccountId && orgAccountId.value==e.accountId)){
			            _name = e.name;
			        }else{
			          _name=e.accountShortname+e.name;
			        }
			    }else{
			        _name = e.name + "(" + e.accountShortname + ")";
			    }
			}
			else{
				_name = e.name;
			}
		}
		names[names.length] = _name;
	}
	
	return names.join(sp);
}

/**
 * \u5f97\u5230Element[] \u7684\u6240\u6709Id\uff0c\u683c\u5f0f\u4e3a: <br>
 * 1\u3001\u5982\u679c\uff1aneedType \u4e3a true
 * Member|0977614325432,Member|23456754365745,Department|3451234132<br>
 * 2\u3001\u5982\u679c\uff1aneedType \u4e3a false
 * 0977614325432,23456754365745,3451234132<br>
 * 3\u3001\u5982\u679c\u90e8\u95e8\u4e0d\u5305\u542b\u5b50\u90e8\u95e8\uff0c\u540e\u9762\u591a\u4e00\u4e2a1\uff1a Member|0977614325432,Department|23456754365745,Department|3451234132|1\u6216\u8005123412341234|1,3451234123|1,1234123
 * 
 * @needType \u662f\u5426\u8981\u7c7b\u578b\u6807\u793a \u9ed8\u8ba4\u4e3atrue
 */
function getIdsString(elements, needType){
	if(!elements){
		return "";
	}
	
	if(needType == null){
		needType = true;
	}
	
	var names = [];
	for(var i = 0; i < elements.length; i++) {
		var a = null
		if(needType){
			a = elements[i].type + "|" + elements[i].id;
		}
		else{
			a = elements[i].id;
		}
		
		names[names.length] = a + (elements[i].excludeChildDepartment ? "|1" : "");
	}
	
	return names.join(",");
}

/**
 * \u5c06Member|0977614325432|\u8c2d\u654f\u950b|123412,Department|3451234132|\u5f00\u53d1\u90e8|1234123\u683c\u5f0f\u7684\u4eba\u5458\u6570\u636e\u8f6c\u6362\u6210Element[]
 * \u8be5\u65b9\u6cd5\u53ea\u7528\u5728\u56de\u663e\u9009\u4eba\u754c\u9762\u6570\u636e
 * 
 * e.g
 * String people = "Member|0977614325432|\u8c2d\u654f\u950b|123412,Department|3451234132|\u5f00\u53d1\u90e8|1234123";
 * <script>
 * elements_${\u9009\u4eba\u7ec4\u4ef6id} = parseElements(people);
 * </script>
 * 
 * @param idsString \u683c\u5f0f\u4e3a EntityType|EntityId|EntityName|AccountId
 * @param type \u6570\u636e\u7c7b\u578b
 * @return Element[]\uff0c\u4f46\u4e0d\u89e3\u91ca\u73b0\u5b9e\u7684\u540d\u79f0\uff0c
 */
function parseElements(idsString){
	if(!idsString || idsString == "null"){
		return null;
	}
	
	var elements = [];
	
	var enteries = idsString.split(",");
	for(var i = 0; i < enteries.length; i++) {
		if(!enteries[i]){
			continue;
		}
		
		var e = enteries[i].split("|");
		if(e.length > 3){
			var element = new Element(e[0], e[1], e[2], null, e[3], null, '');
			
			if(e.length > 4){
				element.isEnabled = (e[4] == "true");
			}
			
			elements[elements.length] = element;
		}
		
	}

	return elements;
}

/**
 * parseElements4Exclude("Member|0977614325432,Department|3451234132");
 * parseElements4Exclude("0977614325432,3451234132", "Member");
 * 
 * @param idsString Member|0977614325432,Department|3451234132
 * @param type \u6307\u5b9a\u7c7b\u578b
 */
function parseElements4Exclude(idsString, type){
	if(!idsString || idsString == "null"){
		return null;
	}
	
	var elements = [];
	
	var enteries = idsString.split(",");
	for(var i = 0; i < enteries.length; i++) {
		if(!enteries[i]){
			continue;
		}
		
		if(type){
			elements[elements.length] = new Element(type, enteries[i]);
		}
		else{
			var e = enteries[i].split("|");
			if(e.length == 2){
				var element = new Element(e[0], e[1]);
				
				elements[elements.length] = element;
			}
		}
	}

	return elements;
}

/**
 * \u5f97\u5230Element[] \u7684\u6240\u6709Id\u4e13\u7a0binput\uff0c\u5982\uff1a
 * 1\u3001\u5982\u679c\uff1aneedType \u4e3a true
 * <input type='hidden' name='person' value="Member|43265345643564356">
 * <input type='hidden' name='person' value="Member|56732452435345234">
 * <input type='hidden' name='person' value="Department|-445652435345234">
 * 2\u3001\u5982\u679c\uff1aneedType \u4e3a false
 * <input type='hidden' name='person' value="43265345643564356">
 * <input type='hidden' name='person' value="56732452435345234">
 * <input type='hidden' name='person' value="-445652435345234">
 * 
 * @needType \u662f\u5426\u8981\u7c7b\u578b\u6807\u793a \u9ed8\u8ba4\u4e3atrue
 */
function getIdsInput(elements, inputName, needType){
	if(!elements){
		return "";
	}
	
	if(needType == null){
		needType = true;
	}
	
	var str = "";
	for(var i=0; i<elements.length; i++) {
		if(needType){
			str += "<input type='hidden' name='"+inputName+"' value=\"" + elements[i].type + "|" + elements[i].id + "\">";
		}
		else{
			str += "<input type='hidden' name='"+inputName+"' value=\"" + elements[i].id+"\">";
		}
	}
	
	return str;
}

/***************************************************  AJAX ******************************************************/

var AJAX_XMLHttpRequest_DEFAULT_METHOD = "POST";

var AJAX_XMLHttpRequest_DEFAULT_async = true; //\u9ed8\u8ba4\u5f02\u6b65

var AJAX_RESPONSE_XML_TAG_BEAN = "B";
var AJAX_RESPONSE_XML_TAG_LIST = "L";
var AJAX_RESPONSE_XML_TAG_Value = "V";
var AJAX_RESPONSE_XML_TAG_Property = "P";
var AJAX_RESPONSE_XML_TAG_Name = "n";


/**
 * AJAX Service Parameter
 */
function AjaxParameter(){
	this.instance =[];
};

AjaxParameter.prototype.put = function(index, type, value){
	var isArray = type.indexOf("[]") > -1;
	
	this.instance[this.instance.length] = {
		index : index,
		type  : isArray ? type.substring(0, type.length - 2) : type,
		value : value,
		isArray : isArray
	};
};

/**
 *
 */
AjaxParameter.prototype.toAjaxParameter = function(serviceName, methodName, needCheckLogin, returnValueType){
	needCheckLogin = needCheckLogin == null ? "false" : needCheckLogin;
	if(!serviceName || !methodName){
		return null;
	}
	
	var str = "";
		str += "S=" + serviceName;
		str += "&M=" + methodName; 
		str += "&CL=" + needCheckLogin; 
		str += "&RVT=" + returnValueType; 

	if(this.instance != null && this.instance.length > 0){
		for(var i = 0; i < this.instance.length; i++){
			var obj = this.instance[i];
			
			var paramterName = "P_" + obj.index + "_" + obj.type;
			
			if(obj.isArray){//\u6570\u7ec4
				if(obj.value == null || obj.value.length == 0){
					str += "&" + paramterName + "_A_N=";
				}
				else if(obj.value instanceof Array){
					for(var k = 0; k < obj.value.length; k++) {
						str += "&" + paramterName + "_A=" + encodeURIComponent(obj.value[k]);
					}
				}
			}
			else{
				var v = obj.value == null ? "" : obj.value;
				str += "&" + paramterName + "=" + encodeURIComponent(v);
			}
		}
	}
		
	return str;
};

/**
 * Browser independent XMLHttpRequestLoader
 * 
 * @param _caller d
 */
function XMLHttpRequestCaller(_caller, serviceName, methodName, async, method, needCheckLogin, actionUrl) {
	if((!serviceName || !methodName) && !actionUrl){
		alert("AJAX Service name or method, actionUrl is not null.");
		throw new Error(3, "AJAX Service name or method is not null.");
	}
	
	this.params = new AjaxParameter();
	this.serviceName = serviceName;
	this.methodName = methodName;
	this.needCheckLogin = needCheckLogin == null ? "true" : needCheckLogin;
	this.returnValueType = "XML"; //XML TEXT

	this.method = method || AJAX_XMLHttpRequest_DEFAULT_METHOD;
	this.async = (async == null ? AJAX_XMLHttpRequest_DEFAULT_async : async);
	this._caller = _caller;
	this.actionUrl = actionUrl;
	
	this.filterLogoutMessage = true;
	this.closeConnection = false;
};

/**
 * 
 * caller.addParameter(1, "String", "a8");
 * caller.addParameter(2, "Long", 2345234);
 * caller.addParameter(3, "String[]", ["tanmf", "jicnm", "maok", ""]);
 * caller.addParameter(4, "date", "2007-01-01 12:25:23");
 * 
 * @param index \u53c2\u6570\u987a\u5e8f\uff0c\u4ece1\u5f00\u59cb
 * @param type \u53c2\u6570\u7c7b\u578b \u5f53\u524d\u652f\u6301byte Byte short Short int Integer long Long double Double float Float boolean Boolean char character String date datetime
 * @param value \u53c2\u6570\u503c \u53ef\u4ee5\u662f\u6570\u7ec4
 */
XMLHttpRequestCaller.prototype.addParameter = function(index, type, value) {
	this.params.put(index, type, value);
};

/**
 * \u53d1\u51fa\u8bf7\u6c42
 */
XMLHttpRequestCaller.prototype.serviceRequest = function() {    
	var url = null;
	var sendContent = null;
	if(this.actionUrl){
		url = getBaseURL() + this.actionUrl;
		sendContent = this.sendData;
	}
	else{
		var _url = getBaseURL() + "/getAjaxDataServlet"
		var _queryString = this.params.toAjaxParameter(this.serviceName, this.methodName, this.needCheckLogin, this.returnValueType);
		if(!_queryString){
			throw new Error(5, "\u6ca1\u6709\u4efb\u4f55\u53c2\u6570");
		}
		
		if(_queryString.length < 500){
			this.method = "GET";
		}
		
		if(this.method.toUpperCase() == "POST" ){
			url = _url;
			sendContent = _queryString;
		}
		else if(this.method.toUpperCase() == "GET" ){
			url = _url + "?" + _queryString
		}
	}
	
	var xmlRequest = getHTTPObject();
	var c = this._caller;
	var flm = this.filterLogoutMessage;
	
	if(!xmlRequest){
		throw new Error(2, "\u5f53\u524d\u6d4f\u89c8\u5668\u4e0d\u652f\u6301XMLHttpRequest");
	}

	if(this.async){	//\u5f02\u6b65
		xmlRequest.onreadystatechange = function() {
			if (xmlRequest.readyState == 4){
				if (xmlRequest.status == 200){
					var returnValue = getXMLHttpRequestData(xmlRequest, flm);
					c.invoke(returnValue);	//\u56de\u8c03\u4e3b\u51fd\u6570
				}
				else{
					if(c && c.showAjaxError){
						c.showAjaxError(xmlRequest.status);
					}
					else{
						c.invoke(null);
					}
				}
			}
		};
	}
	
	xmlRequest.open(this.method, url, this.async);
	xmlRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	xmlRequest.setRequestHeader("RequestType", "AJAX");
	if(this.closeConnection){
		xmlRequest.setRequestHeader("Connection", "close");
	}
	xmlRequest.send(sendContent);

	if(!this.async) { //\u540c\u6b65
		if (xmlRequest.readyState == 4){
			if (xmlRequest.status == 200){
				return getXMLHttpRequestData(xmlRequest, flm);
			}
			else{
//				throw "There was a problem retrieving the XML data:\n" + xmlRequest.statusText + " for AjAX Service: \n" + this.serviceName + "." + this.methodName;
			}
		}
	}
};

function getXMLHttpRequestData(xmlRequest, filterLogoutMessage){
	var ct = xmlRequest.getResponseHeader("content-type");
	var isXML = ct && ct.indexOf("xml") >= 0;
	var data = isXML ? xmlRequest.responseXML : xmlRequest.responseText;
	
	//window.clipboardData.setData("text", data);
	if(isXML){
		data = xmlHandle(data) || xmlRequest.responseText;
	}
	
	//\u4e0d\u9700\u8981\u8fc7\u6ee4[logout]\uff0c\u9ed8\u8ba4\u90fd\u8981\u8fc7\u6ee4
	if(filterLogoutMessage == true && data != null && data.toString().indexOf("[LOGOUT]") == 0){
		return null;
	}

	return data;
}

/**
 * \u89e3\u6790XML
 */
function xmlHandle(xmlDom){
	if(!xmlDom){
		return null;
	}
  
	try{
		var root = xmlDom.documentElement;
		if(null != root) {
			var type = root.nodeName;

			if(type == AJAX_RESPONSE_XML_TAG_BEAN){
				return  beanXmlHandle(root);//bean xml
			}
			else if(type == AJAX_RESPONSE_XML_TAG_LIST){
				return  listXmlHandle(root);//bean xml
			}
			else if(type == AJAX_RESPONSE_XML_TAG_Value){
				return root.firstChild.nodeValue;
			}
		}
	}
	catch (e) {
		throw e.message;
	}
  
	return null;
};

/**
 * \u89e3\u6790
 * @return Properties
 */
function beanXmlHandle(_node){
	if(!_node){
		return null;
	}

	var properties = new Properties();
	properties.type = "";

	var propertys = _node.childNodes;

	if(propertys != null && propertys.length > 0){
		for (var i = 0; i < propertys.length; i++) {
			var key = propertys[i].attributes.getNamedItem(AJAX_RESPONSE_XML_TAG_Name).nodeValue;
			var value = "";

			var fChild = propertys[i].firstChild;

			if(fChild != null){
				if(fChild.childNodes != null && fChild.childNodes.length > 0){ //\u6709\u5b50\u8282\u70b9
					var type = fChild.nodeName;
					
					if(type == AJAX_RESPONSE_XML_TAG_BEAN){
				    	value = beanXmlHandle(fChild);
				    }
				    else if(type == AJAX_RESPONSE_XML_TAG_LIST){
				    	value = listXmlHandle(fChild);
				    }
				    else if(type == AJAX_RESPONSE_XML_TAG_Value){
				    	value = fChild.firstChild.nodeValue;
				    }
				}
				else{
					value = fChild.nodeValue;
				}
			}

			properties.putRef(key, (value));
		}
	}

	return properties;
};

/**
 *
 * @return Array Properties[]
 */
function listXmlHandle(_node){
	var list = new Array();

	if(_node != null){
		var properties = new Properties();
		var beans = _node.childNodes;

		if(beans != null && beans.length > 0){
			for (var i = 0; i < beans.length; i++) {
				var type = beans[i].nodeName;
				var returnVal = "";	
	        
				if(type == AJAX_RESPONSE_XML_TAG_BEAN){
					returnVal = beanXmlHandle(beans[i]);
				}
				else if(type == AJAX_RESPONSE_XML_TAG_LIST){
					returnVal =  listXmlHandle(beans[i]);
				}
				else if(type == AJAX_RESPONSE_XML_TAG_Value){
					returnVal = beans[i].firstChild.nodeValue;
				}
	        
				list[i] = returnVal;
			}
		}
	}

	return list;
};


/** Cross browser XMLHttpObject creator */
function getHTTPObject() 
{
  var xmlhttp;
  /*@cc_on
  @if (@_jscript_version >= 5)
    try {
      xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
    }
    catch (e) {
      try {
        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
      } 
      catch (E) {
        xmlhttp = false;
      }
    }
  @else
  xmlhttp = false;
  @end @*/
  if (!xmlhttp && typeof XMLHttpRequest != 'undefined') {
    try {
      xmlhttp = new XMLHttpRequest();
    } 
    catch (e) {
      xmlhttp = false;
    }
  }
  return xmlhttp;
};


function getBaseURL(){
	try{
		if(v3x){
			return v3x.baseURL;
		}
		else if(parent.v3x){
			return parent.v3x.baseURL;
		}
		else if(getA8Top().v3x){
			return getA8Top().v3x.baseURL;
		}
		else if(getA8Top().conextPath){
			return getA8Top().conextPath;
		}
	}
	catch(e){
	}
	
	return "/seeyon";
};
//////*************zhangh add \u4ee5ajax\u65b9\u5f0f\u63d0\u4ea4form\u6570\u636e\uff0c\u91c7\u7528post\u65b9\u5f0f\uff0c\u63d0\u4ea4url\u4eceform\u7684action\u4e2d\u8bfb\u53d6,\u8fd4\u56de\u6570\u636e\u4e3aProperties\u5bf9\u8c61\u6216\u8005\u5bf9\u8c61\u6570\u7ec4*********************************////////
function ajaxFormSubmit(formObj)
{
  var AjaxParams=new AjaxParameter();
  var xmlRequest=getHTTPObject();
  var _queryString=AjaxParams.FormToAjaxParameter(formObj); 
  xmlRequest.open("post",formObj.action,false);
  xmlRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); 
  xmlRequest.send(_queryString);
  if (xmlRequest.readyState == 4)
  {
	if (xmlRequest.status == 200)
	{
		var returnValue = xmlHandle(xmlRequest.responseXML);
		if(returnValue==null)
		{
			returnValue=xmlRequest["responseText"];
			if(returnValue.search("<")>0)
			{
				returnValue=returnValue.substr(returnValue.search("<"));
				returnValue=getXMLDoc(returnValue);	
				returnValue = xmlHandle(returnValue);				
			}
			else
			{
				return returnValue;
			}
		}		
		if(!returnValue)
		{			
			returnValue = xmlRequest.responseTEXT;	
		}		
		return returnValue;
	}
	else
	{
		return false;
	}
  }
  return false;
};

/**
 * \u521b\u5efaXML\u6587\u6863
 */
function getXMLDoc(xml){
	var xmlDoc = null;
	if(window.ActiveXObject){
		xmlDoc = new ActiveXObject("MSXML2.DOMDocument");
		xmlDoc.async=false;
		if(xml != null){
			xmlDoc.loadXML(xml);
		}
	}else{
		if(document.implementation && document.implementation.createDocument){
			xmlDoc = document.implementation.createDocument("","",null);
			var oParser = new DOMParser();
			xmlDoc.async=false;
			if(xml != null){
				xmlDoc = oParser.parseFromString(xml, "text/xml");
			}
		}
	}
	return xmlDoc;
}

/**
 * \u8f6c\u6362XSL\u6837\u5f0f
 */
function getXSLDoc(xmlDoc, xslDoc){
	if(window.ActiveXObject){
		return xmlDoc.transformNode(xslDoc);
	}
	else{
		var xsltProc=new XSLTProcessor();
		xsltProc.importStylesheet(xslDoc);
		var fragment=xsltProc.transformToFragment(xmlDoc,document);
		return new XMLSerializer().serializeToString(fragment);//\u4e32\u884c\u5316\u5bf9\u8c61
	}
}

/**
 * \u7528\u4e8e\u521b\u5efa\u7a7a\u7684xml\u6587\u6863\u540e,\u5f97\u5230\u8282\u70b9\u4e0b\u6240\u6709\u5185\u5bb9
 */
function getXmlString(sNode){
	if(window.ActiveXObject){
		return sNode.xml;
	}else{
		var div = document.createElement("div");
		div.appendChild(sNode.cloneNode(true));
		return div.innerHTML;
	}
}

////////////**************************Ajax \u65b9\u5f0f \u76f4\u63a5\u63d0\u4ea4Form\u6570\u636e\u65f6\uff0c\u628aform\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u6210request \u683c\u5f0f\u7684ajax\u53c2\u6570  zhangh add************************////////////////////
//formObj:form\u5bf9\u8c61
AjaxParameter.prototype.FormToAjaxParameter = function(formObj)
{  
  var submitData="";
  var ds=new Properties();
  var i;
  var obj,objValue;
  var tempValue;
  var access;
  for(i=0;i<formObj.elements.length;i++)
  {
    obj=formObj.elements[i];
    //\u516c\u6587\u5143\u7d20\u662f\u5426\u53ef\u7f16\u8f91\uff0c\u5982\u679c\u53ef\u7f16\u8f91\u5c31\u8981\u63d0\u4ea4\u6570\u636e
    access = obj.getAttribute("canSubmit");
    if(obj.disabled || (obj.readOnly && access != "true")){continue;}
    if(obj.type=="select-one" || obj.type=="hidden" || obj.type=="password" || obj.type=="text" || obj.type=="textarea")
    {
    	ds.put(obj.name,obj.value);
    }
    else if(obj.type=="select-multiple" || obj.type=="checkbox" || obj.type=="radio")
    {
      objValue=ds.get(obj.name);
      tempValue=getFormInputValue(obj);
      if(tempValue!="")
      {
        if(objValue!=null && objValue!="")
        {
          objValue+=",";          
        }
        else
        {
          objValue=tempValue;
        }
      }
      if(objValue==null){objValue="";}
      ds.put(obj.name,objValue);
    }
    submitData=ds.toQueryString();
  }
  return submitData;
};

function getFormInputValue(inputObj)
{
  var tempValue="";
  var i;
  var objs;
  if(inputObj.type=="select-multiple")
  {
    for(i=0;i<inputObj.options.length;i++)
    {
      if(inputObj.options[i].selected==true)
      {
        if(tempValue!=""){tempValue+=",";}
        tempValue+=inputObj.options[i].value;
      }
    }
  }
  else if(inputObj.type=="checkbox" || inputObj.type=="radio")
  {
    objs=document.getElementsByName(inputObj.name);
    for(i=0;i<objs.length;i++)
    {
      if(objs[i].checked==true)
      {
        if(tempValue!=""){tempValue+=",";}
        tempValue+=objs[i].value;
      }
    }    
  }
  return tempValue;
};
///////////***************************Ajax \u65b9\u5f0f \u76f4\u63a5\u63d0\u4ea4Form\u6570\u636e\u65f6\uff0c\u628aform\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u6210ajax\u53c2\u6570 \u7ed3\u675f***********************************************/////////////////
/**********************************************  \u8868\u683c\u6392\u5e8f  *****************************************************/

var dom = (document.getElementsByTagName) ? true : false;
var ie5 = (document.getElementsByTagName && document.all) ? true : false;

var arrowUp, arrowDown;

if (ie5 || dom)
	initSortTable();

function initSortTable() {
//	arrowUp = document.createElement("SPAN");
//	var tn = document.createTextNode("5");
//	arrowUp.appendChild(tn);
//	arrowUp.className = "arrow";
//
//	arrowDown = document.createElement("SPAN");
//	var tn = document.createTextNode("6");
//	arrowDown.appendChild(tn);
//	arrowDown.className = "arrow";
//	arrowUp = document.createElement("img");
//	arrowUp.style.width='9px';
//	arrowUp.style.height='4px';
//	arrowUp.src=this.baseURL+"/common/images/asc.gif";	
//	
//	arrowDown = document.createElement("img");
//	arrowDown.style.width='9px';
//	arrowDown.style.height='4px';
//	arrowDown.src=this.baseURL+"/common/images/desc.gif";	
	
	
	arrowUp = document.createElement("SPAN");
	arrowUp.className = "arrowAsc";
	arrowUp.innerHTML="&nbsp;&nbsp;"

	arrowDown = document.createElement("SPAN");
	arrowDown.className = "arrowDesc";
	arrowDown.innerHTML="&nbsp;&nbsp;"
};

function getNextSibByClass(el, className) {
	if (el == null) return null;
	else if (el.nodeType == 1 && el.className == className)
		return el;
	else
		return getNextSibByClass(el.nextSibling, className);
};
function getParentByClass(el, className) {
	if (el == null) return null;
	else if (el.nodeType == 1 && el.className == className)
		return el;
	else
		return getParentByClass(el.parentNode, className);
};
function sortTable(tableNode, nCol, bDesc, sType,dragable) {
	var tBody; 
	//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
	if(dragable){
		var divHead = getParentByClass(tableNode,'hDiv');
		var divBody = getNextSibByClass(divHead,'bDiv');
		tBody = divBody.childNodes[0].childNodes[0];
	}else{
		tBody = tableNode.tBodies[0];
	}
	var trs = tBody.rows;
	var a = new Array();
	
	//\u4f9bWEBIM\u663e\u793a\u79bb\u7ebf\u4eba\u5458\u65f6\u6392\u5e8f\u4f7f\u7528
	var b = new Array();

	for (var i=0; i<trs.length; i++) {
		var col = trs[i];
		for(var j=0; j<col.cells.length; j++){
			col.cells[j].className="sort";
		}
		col.childNodes[nCol].className="sort sorted";
		if(col.id.indexOf("off")!=-1){
			b[b.length] = trs[i];
		}else{
			a[a.length] = trs[i];
		}
	}
	a.sort(compareByColumn(nCol,bDesc,sType));
	b.sort(compareByColumn(nCol,bDesc,sType));

	for (var i=0; i<a.length; i++) {
		if(i%2==0){
			a[i].className="erow";
		}else{
			a[i].className="";
		}
		tBody.appendChild(a[i]);
	}
	for (var i=0; i<b.length; i++) {
		tBody.appendChild(b[i]);
	}
};

function CaseInsensitiveString(s) {
	return String(s).toLocaleString();
};

function parseDate(s) {
	return Date.parse(s.replace(/\-/g, '/'));
}

function toNumber(s) {
    return Number(s.replace(/[^0-9\.]/g, ""));
};

function compareByColumn(nCol, bDescending, sType) {
	var c = nCol;
	var d = bDescending;

	var fTypeCast = String;

	if (sType == "Number")
		fTypeCast = parseInt;
	else if (sType == "Date")
		fTypeCast = compareMyDate; //\u663e\u4f5c\u4e3a\u5b57\u7b26\u4e32
	else if (sType == "CaseInsensitiveString")
		fTypeCast = CaseInsensitiveString;
	else if (sType == "Size")
		fTypeCast = compareSize;
	else if (sType == "Percent")
		fTypeCast = comparePercent;
	else if(sType == "Month")
	    fTypeCast = compareMonth
	else if(sType == "Number")
	    fTypeCast = compareNumber    
	return function (n1, n2) {
	    if(fTypeCast == String || fTypeCast == CaseInsensitiveString){
	    	var f = fTypeCast(getInnerText(n1.cells[c])).localeCompare(fTypeCast(getInnerText(n2.cells[c])));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else if(fTypeCast==compareMyDate){
	    	var f = fTypeCast(getInnerText(n1.cells[c]),getInnerText(n2.cells[c]));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else if(fTypeCast==compareSize){
	    	var f = fTypeCast(getInnerText(n1.cells[c]),getInnerText(n2.cells[c]));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else if(fTypeCast==comparePercent){
	    	var f = fTypeCast(getInnerText(n1.cells[c]),getInnerText(n2.cells[c]));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else if(fTypeCast==compareMonth){
	    	var f = fTypeCast(getInnerText(n1.cells[c]),getInnerText(n2.cells[c]));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else if(fTypeCast==compareNumber){
	    	var f = fTypeCast(getInnerText(n1.cells[c]),getInnerText(n2.cells[c]));
	    	if(d){
	    		return f * -1;
	    	}else{
	    		return f;
	    	}
	    }else{
			if (fTypeCast(getInnerText(n1.cells[c])) > fTypeCast(getInnerText(n2.cells[c])))
				return d ? -1 : +1;
			if (fTypeCast(getInnerText(n1.cells[c])) < fTypeCast(getInnerText(n2.cells[c])))
				return d ? +1 : -1;
			return 0;
	    }
	};
};
function compareNumber(n1,n2){
	if((n1==null || n1=='  ')&&(n2!=null && n2!='  ' ) ){return -1;}
	if((n2==null || n2=='  ')&&(n1!=null && n1!='  ' ) ){return 1;}
	if((n1==null || n1=='  ')&&(n2==null || n2=='  ' ) ){return 0;}
	
	var N1 = parseFloat(n1);
	var N2 = parseFloat(n2);
	if(N1>N2){
		return 1;
	}else if(N1<N2){
		return -1;
	}else{
		return 0;
	}
}
function compareMonth(m1,m2){
	//2009-08
	if((m1==null || m1=='  ')&&(m2!=null && m2!='  ' ) ){return -1;}
	if((m2==null || m2=='  ')&&(m1!=null && m1!='  ' ) ){return 1;}
	if((m1==null || m1=='  ')&&(m2==null || m2=='  ' ) ){return 0;}
	var a1 = m1.split('-');
	var a2 = m2.split('-');
	var y1 = a1[0];
	var y2 = a2[0];
	var M1 = parseInt(parseFloat(a1[1]));
	var M2 = parseInt(parseFloat(a2[1]));
	if(y1>y2){return 1;}
	if(y1<y2){return -1;}
	if(y1==y2){
		if(M1>M2){
			return 1;
		}else if(M1<M2){
			return -1;
		}else{
			return 0;
		}
	}
	
	
}
function compareSize(s1,s2){
	if((s1==null || s1=='  ')&&(s2!=null && s2!='  ' ) ){return -1;}
	if((s2==null || s2=='  ')&&(s1!=null && s1!='  ' ) ){return 1;}
	if((s1==null || s1=='  ')&&(s2==null || s2=='  ' ) ){return 0;}
	var size1 = initSize(s1);
	var size2 = initSize(s2);
    if (size1 - size2 > 0) {
        return 1;
    } else if (size1 - size2 < 0) {
        return -1;
    } else {
        return 0;
    }
	function initSize(s){
		if (s.indexOf('MB') > -1){
			return parseFloat(s)*1000;
		}else if(s.indexOf('KB')> -1){
			return parseFloat(s);
		}
	}
}

function comparePercent(s1, s2){
	if((s1==null || s1=='  ')&&(s2!=null && s2!='  ' ) ){return -1;}
	if((s2==null || s2=='  ')&&(s1!=null && s1!='  ' ) ){return 1;}
	if((s1==null || s1=='  ')&&(s2==null || s2=='  ' ) ){return 0;}
	var size1 = initPercent(s1);
	var size2 = initPercent(s2);
    if (size1 - size2 > 0) {
        return 1;
    } else if (size1 - size2 < 0) {
        return -1;
    } else {
        return 0;
    }
	function initPercent(s){
		if (s.indexOf('%') > -1){
			return parseFloat(s) * 10000;
		}
		
		return 0;
	}
}

//\u65e5\u671f\u6392\u5e8f
 function compareMyDate(d1, d2){
 	//\u6ca1\u65e5\u671f\u7684\u662f\u4e24\u4e2a\u7a7a\u683c\u90c1\u95f7
	if((d1==null || d1=='  ' || d1==' ')&&(d2!=null && d2!='  ' && d2!=' ') ){return -1;}
	if((d2==null || d2=='  ' || d2==' ')&&(d1!=null && d1!='  ' && d1!=' ') ){return 1;}
	if((d1==null || d1=='  ' || d1==' ')&&(d2==null || d2=='  ' || d2==' ') ){return 0;}
    var date1 = initDate(d1);
    var date2 = initDate(d2);
    
    if (date1 - date2 > 0) {
        return 1;
    } else if (date1 - date2 < 0) {
        return -1;
    } else {
        return 0;
    }
}
    //\u521d\u59cb\u5316\u65e5\u671f
    function initDate(d){
    	// 09/08/28 12:54
    	if (d.indexOf('/') > -1 && d.indexOf(':') > -1) {
			var sYear = parseFloat(d.substr(0, 2));
			var sMounth = parseFloat(d.substr(3, 2));
			var sDay = parseFloat(d.substr(6, 2));
			var oHH = parseFloat(d.substr(9, 2));
			var oMIN = parseFloat(d.substr(12, 2));
			var oSS = 0;
            return new Date(sYear, sMounth, sDay, oHH, oMIN, oSS);
            
    	}else if (d.indexOf('-') > -1 && d.indexOf(':') > -1) {//yyyy-mm-dd hh:mm:ss
    		d = d.trim();
			var oDateArry = d.split(' ');
			var oYMDArry = oDateArry[0].split('-');
			var oHMSArry = oDateArry[1].split(':');
			var oMM = parseInt(oYMDArry[1]);
			if(oYMDArry[1].length==2 && oYMDArry[1].substr(0,1)=='0'){
				oMM = parseInt(oYMDArry[1].substr(1,1));
			}
			var oDD = parseInt(oYMDArry[2]);
			if(oYMDArry[2].length==2 && oYMDArry[2].substr(0,1)=='0'){
				oDD = parseInt(oYMDArry[2].substr(1,1));
			}
			var oHH = parseInt(oHMSArry[0]);
			if(oHMSArry[0].length==2 && oHMSArry[0].substr(0,1)=='0'){
				oHH = parseInt(oHMSArry[0].substr(1,1));
			}
			var oMin = parseInt(oHMSArry[1]);
			if(oHMSArry[1].length==2 && oHMSArry[1].substr(0,1)=='0'){
				oMin = parseInt(oHMSArry[1].substr(1,1));
			}
			var oSS = 0;
			if (oHMSArry.length == 3  &&  oHMSArry[2].length>0) {
				oSS = parseInt(oHMSArry[2]);
				if(oHMSArry[2].length==2 && oHMSArry[2].substr(0,1)=='0'){
					oSS = parseInt(oHMSArry[2].substr(1,1));
				}
			}
			return new Date(parseInt(oYMDArry[0]), oMM - 1, oDD, oHH, oMin, oSS);
    } else if(d.indexOf('-') > -1 && d.indexOf(':') == -1) {
            //yyyy-mm-dd
            var oDateArry = d.split('-');
            var oMM = parseInt(oDateArry[1]);
			if(oDateArry[1].length==2 && oDateArry[1].substr(0,1)=='0'){
				oMM = parseInt(oDateArry[1].substr(1,1));
			}
			var oDD = parseInt(oDateArry[2]);
			if(oDateArry[2].length==2 && oDateArry[2].substr(0,1)=='0'){
				oDD = parseInt(oDateArry[2].substr(1,1));
			}
            return new Date(parseInt(oDateArry[0]), oMM - 1, oDD, 0, 0, 0);
        } else if(isChina(d)) {
            var sYear = d.substr(0, 4);
            var sMounth = null;
            var sDay = null;
            //yyyy\u5e74m\u6708d\u65e5
            if (isChina(d.substr(6, 1)) && isChina(d.substr(8, 1))) {
                sMounth = d.substr(5, 1);
                sDay = d.substr(7, 1);
            } else if(isChina(d.substr(6, 1)) && isChina(d.substr(9, 1))) {
                sMounth = d.substr(5, 1);//yyyy\u5e74m\u6708dd\u65e5
                sDay = d.substr(7, 2);
             }else if(isChina(d.substr(7, 1)) && isChina(d.substr(9, 1))){
                sMounth = d.substr(5, 2);//yyyy\u5e74mm\u6708d\u65e5
                sDay = d.substr(8, 1);
             } else if(isChina(d.substr(7, 1)) && isChina(d.substr(10, 1))) {
                    sMounth = d.substr(5, 2);//yyyy\u5e74mm\u6708dd\u65e5
                    sDay = d.substr(8, 2);
             }
            return new Date(parseInt(sYear), parseInt(sMounth) - 1, parseInt(sDay), 0, 0, 0);
         }
    
	}
	function isChina(str){var patrn = /[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi; if (!patrn.exec(str)) {return false;}else {return true;}}

	//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
	function sortColumn(e, isChangeTRColor,dragable) {
		try{
		var tmp, el;

		if (ie5)
			tmp = e.srcElement;
		else if (dom)
			tmp = e.target;
		//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
		if(dragable){
			el = getParent(tmp, "TH");
		}else{
			el = getParent(tmp, "TD");
		}
		
		
		var orderByColumn = el.orderBy;
		
		if(el == null || orderByColumn == null || orderByColumn == ""){
			sortColumnCurrentPage(e, isChangeTRColor,dragable);
		}
		else{
			sortColumnAll(el, orderByColumn,dragable);
		}
		}catch(e){}
	}

	function sortColumnAll(el, orderByColumn,dragable){
		if(!pageQueryMap) {
			var pageQueryMap = new Properties();
		}
		var oldOrderByColumn = pageQueryMap.get("orderByColumn");
		var orderByDESC = pageQueryMap.get("orderByDESC");
		
		if(orderByDESC == null){
			orderByDESC = "ASC";
		}
		else if(orderByColumn != oldOrderByColumn){
			orderByDESC = "ASC";
			pageQueryMap.put("page", 1);
		}
		else{
			orderByDESC = orderByDESC == "DESC" ? "ASC" : "DESC";
		}
		
		pageQueryMap.put("orderByColumn", orderByColumn);
		pageQueryMap.put("orderByDESC", orderByDESC);
		getPageAction(el);	
	}

	function sortColumnCurrentPage(e, isChangeTRColor,dragable) {
		var tmp, el, tHeadParent,dragable,tTable;

		if (ie5)
			tmp = e.srcElement;
		else if (dom)
			tmp = e.target;
			
		tTable = getParent(tmp, "TABLE");
		tHeadParent = getParent(tmp, "THEAD");
		
		//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
		if(dragable){
			//\u53ef\u62d6\u52a8\u5217\u8868\u70b9\u51fb\u9009\u4e2d(\u80cc\u666f\u66f4\u6539)\u5728\u540e\u53f0\u8bbe\u7f6e\uff0c\u76f4\u63a5\u8c03\u7528selectRow(tmp);
			//list.table.body.td.html.true= <td onclick="selectRow(this)"><div {0} style="text-align:{2}; width: 229px;">{1}</div></td>
			el = getParent(tmp, "TH");
		}else{
			var tFooterParent = getParent(tmp, "TFOOT");
			if(tmp.tagName == "TD" && tFooterParent == null && tHeadParent == null && isChangeTRColor == true){	//\u5982\u679c\u70b9\u51fb\u7684\u662f\u8868\u683c\u4e2d\u7684\u6570\u636e\u5355\u5143\u683c\uff0c\u5219\u9009\u62e9\u8be5\u884c
				selectRow(tmp);
			}
			el = getParent(tmp, "TD");
		}
		
		if(el == null || el.getAttribute('type') == null || el.getAttribute('type') == ""){
			return;
		}

		if (tHeadParent == null)
			return;
		
		if(!pageQueryMap) {
			var pageQueryMap = new Properties();
		}
			
		var orderByColumn = pageQueryMap.get("orderByColumn");
		if(orderByColumn){
			var orderByColumnSpanObj = document.getElementById("OrderByColumn_" + orderByColumn);
			if(orderByColumnSpanObj){
				orderByColumnSpanObj.parentNode.removeChild(orderByColumnSpanObj);
			}
		}

		if (el != null) {
			var p = el.parentNode;
			var i;

			if (el._descending)	// catch the null
				el._descending = false;
			else
				el._descending = true;

			if (tHeadParent.arrow != null) {
				//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
				if(dragable){
					tHeadParent.arrow.className='';
				}else{
					if(tHeadParent.arrow.parentNode == null){
						tHeadParent.arrow = null;
					}
					else{
						if (tHeadParent.arrow.parentNode != el) {
							tHeadParent.arrow.parentNode._descending = null;	//reset sort order
						}
						tHeadParent.arrow.parentNode.removeChild(tHeadParent.arrow);
					}
				}
			}
			
			var oDiv = el.firstChild;
			//v3x:table\u6709\u4e24\u79cd\u5c5e\u60271\uff1a\u8868\u5934\u56fa\u5b9a+\u5217\u5bbd\u62d6\u52a8\uff08div\uff092:\u8868\u683c(table)	
			if(dragable){
				if (el._descending){
					oDiv.className='sdesc';
				}
				else{
					oDiv.className='sasc';
				}
				tHeadParent.arrow=oDiv;
			}else{
				if (el._descending){
					tHeadParent.arrow = arrowDown.cloneNode(true);
				}
				else{
					tHeadParent.arrow = arrowUp.cloneNode(true);
				}
				el.appendChild(tHeadParent.arrow);
			}

			// get the index of the td
			for (i=0; i<p.cells.length; i++) {
				p.cells[i].className=" ";
				if (p.cells[i] == el&&p.cells[i].childNodes.type!="checkbox") {
				    
					p.cells[i].className="sorted";
					var ii=i;
					//break;
				}
			}

			var table = getParent(el, "TABLE");
			// can't fail

			sortTable(table,ii,el._descending, el.getAttribute("type"),dragable);
		}
	};


function getInnerText(el) {
	if (ie5) return el.innerText;	//Not needed but it is faster

	var str = "";

	for (var i=0; i<el.childNodes.length; i++) {
		switch (el.childNodes.item(i).nodeType) {
			case 1: //ELEMENT_NODE
				str += getInnerText(el.childNodes.item(i));
				break;
			case 3:	//TEXT_NODE
				str += el.childNodes.item(i).nodeValue;
				break;
		}
	}

	return str;
};

function getParent(el, pTagName) {
	if (el == null) return null;
	else if (el.nodeType == 1 && el.tagName.toLowerCase() == pTagName.toLowerCase())	// Gecko bug, supposed to be uppercase
		return el;
	else
		return getParent(el.parentNode, pTagName);
};

var currentSelectTr = null;

function clearSiblingStyle(objTr){
	var siblings = objTr.parentNode.childNodes;
	
	if(siblings != null){
		for(var i = 0; i < siblings.length; i++){
			var o = siblings[i];
			redoStyle(o);
		}
	}
};
/**
 * \u628a\u884c\u7684\u989c\u8272\u8fd8\u539f\u4e3a\u539f\u59cb\u989c\u8272
 */
function redoStyle(){
	var obj = currentSelectTr;
	if(!obj){
		return;
	}
	
	var nowClassName = obj.className;
	var oldClassName = obj.className2;
	
	if(oldClassName != null && nowClassName != oldClassName){
		obj.className = oldClassName;
	}
	
	var thisCheckbox = getCheckboxFromTr(obj);
		
	if(thisCheckbox && thisCheckbox.disabled != true){
		thisCheckbox.checked = false;
	}
	
	var children = obj.cells;
	
	for(var i = 0; i < children.length; i++) {
		var td = children.item(i);
		var cn = td.className;
		var cns = cn.split(" ");
		
		var cnnew = "";
		
		for(var j = 0; j < cns.length; j++) {
			if(cns[j] != "no-read"){
				cnnew += cns[j] + " ";
			}
		}
		
		td.className = cnnew;
	}
};

/**
 * \u628a\u884c\u7684\u989c\u8272\u6539\u4e3a\u88ab\u9009\u7684\u989c\u8272\uff0c\u6837\u5f0f\u540d\u4e3asort-select
 */
function changeSelectedStyle(obj){
	if(obj == null){
		return;
	}
	
	var nowClassName = obj.className;
	var oldClassName = obj.className2;
		
	if(oldClassName == null){ //\u7b2c\u4e00\u6b21\u70b9\u51fb
		obj.className2 = nowClassName; //\u521b\u5efa\u65b0\u7684\u6807\u7b7e\u5c5e\u6027
		if(obj.id.indexOf("off")!=-1){
			obj.className = "tr-select-offline";
		}else{
			obj.className = "sort-select";
		}
	}
	else if(nowClassName == oldClassName){ //\u5f53\u524d\u6837\u5f0f\u4e3a\u8001\u6837\u5f0f
		if(obj.id.indexOf("off")!=-1){
			obj.className = "tr-select-offline";
		}else{
			obj.className = "sort-select";
		}
	}
	else{ //\u8fd8\u539f\u4e3a\u8001\u6837\u5f0f
		obj.className = oldClassName;
	}
};

/**
 *
 */
function selectRow(currentTd){
	if(currentTd.tagName == "INPUT"){
		unselectAll();
		return;
	}
	var currentTr = getParent(currentTd, "TR");
	var currentTbody = getParent(currentTr, "tbody");
	
	var e = v3x.getEvent();
	var tmp;
	if (ie5){
		tmp = e.srcElement;
	}else if (dom){
		tmp = e.target;
	}
	if(tmp.tagName == 'INPUT' || tmp.tagName == 'SELECT'){
		return;
	}
	
	if(currentTr != null && currentTbody != null){
//		clearSiblingStyle(currentTr);
		redoStyle();
		changeSelectedStyle(currentTr);
		
		currentSelectTr = currentTr;
				
		var thisCheckbox = getCheckboxFromTr(currentTr);
		if(thisCheckbox != undefined && thisCheckbox != null) {
			noSelected(thisCheckbox.name);
			
			if(thisCheckbox.disabled != true){
				thisCheckbox.checked = true;
			}
			
			unselectAll();
		}
	}
};

/**
 * \u4eceTR\u4e2d\u627echechbox\u4ee5\u53caradio
 * @param thisTr - TR object
 * @return chechbox object
 */
function getCheckboxFromTr(thisTr) {
	if(thisTr == null || thisTr.childNodes.length == 0) {
		return null;
	}
	else {
		for(var i=0; i<thisTr.childNodes.length; i++) {
			var thisChild = thisTr.childNodes[i];
			if(thisChild.type == "checkbox" || thisChild.type == "radio") {
				return thisChild;
			}
			else {
				var tempResult = getCheckboxFromTr(thisChild);
				if(tempResult != null) {
					return tempResult;
				}
			}
		}
	}
}

function selectAll(allButton, targetName){
	var objcts = document.getElementsByName(targetName);
	
	if(objcts != null){
		for(var i = 0; i < objcts.length; i++){
			if(objcts[i].disabled == true){
				continue;
			}
			objcts[i].checked = allButton.checked;
		}
	}
};

function noSelected(checkboxName){
	var checkboxes = document.getElementsByName(checkboxName);
	if(checkboxes){
		for(var i = 0; i < checkboxes.length; i++) {
			if(checkboxes[i].disabled == true){
				continue;
			}
			checkboxes[i].checked = false;
		}
	}
};

function unselectAll(){
	var objcts = document.getElementById("allCheckbox");
	if(objcts && objcts.disabled != true){
		if(objcts.checked){
			objcts.click();
			objcts.checked = false;
		}
	}
};


/****************** \u5206\u9875 ************************/
var canDoAction = true; //\u907f\u514d\u91cd\u590d\u63d0\u4ea4-\u9501

function getPageAction(obj){
	var _pageFormMethod = pageFormMethod || "get";
	var oldForm = getForm(obj);
	var action = oldForm.attributes.getNamedItem("ACTION");
	var oldAction = action ? (action.nodeValue) : "" || "";
	//var form1 = document.createElement("<form action='" + oldAction + "' target='_self' method='" + _pageFormMethod + "'>");
	var form1 = document.createElement("form");
	form1.setAttribute("action",oldAction);
	form1.setAttribute("target","_self");
	form1.setAttribute("method",_pageFormMethod);
	if(!canDoAction){
		return;
	}

	var keys = pageQueryMap.keys();
	for(var i=0; i<keys.size(); i++){
		var key = keys.get(i);
		var value = pageQueryMap.get(key);
		if(!key || key == "pageSize"){
			continue;
		}

		if(value instanceof Array){
			for(var v = 0; v < value.length; v++) {
				//var e = document.createElement("<input type='hidden' name=\"" + key + "\">");
				var e = document.createElement("input");
				e.setAttribute("type","hidden");
				e.setAttribute("name",key);
				e.value = value[v];
				form1.appendChild(e);
			}
	    }
		else{
			//var e = document.createElement("<input type='hidden' name=\"" + key + "\">");
			var e = document.createElement("input");
			e.setAttribute("type","hidden");
			e.setAttribute("name",key);
			e.value = value;
			form1.appendChild(e);
		}
	}
	
	var v = oldForm.pageSize.value || 20;
	//var e = document.createElement("<input type='hidden' name='pageSize' value='" + v + "'>");
	var e = document.createElement("input");
	e.setAttribute("type","hidden");
	e.setAttribute("name","pageSize");
	e.setAttribute("value",v);
	form1.appendChild(e);
	
	if(!new RegExp("^-?[0-9]*$").test(v) || parseInt(v, 10) < 1){
//		form1.pageSize.value = 20;
//		form1.page.value = 1;
	}
	//window.clipboardData.setData("text", form1.outerHTML)
	document.body.appendChild(form1);
	form1.submit();
	
	canDoAction = false;
};

function enterSubmit(obj, type){
	if(v3x.getEvent().keyCode == 13){
		if(type == "pageSize"){
			pagesizeChange(obj);
		}
		else if(type == "intpage"){
			pageChange(obj);
		}
	}
};

function getForm(obj){
	return document.getElementsByName("pageSize")[0].form;
};
function pageGo(obj){
	getPageAction(obj);
};
function first(obj){
	pageQueryMap.put("page", 1);
	getPageAction(obj);
};
function pageChange(obj){
	if(!new RegExp("^-?[0-9]*$").test(obj.value)){
		return;
	}
	
	var pageCount = obj.getAttribute("pageCount");
	if(obj.value > parseInt(pageCount, 10)){
		obj.value = pageCount;
	}
	
	pageQueryMap.put("page", obj.value);
	getPageAction(obj);
};
function last(obj, lastPage){
	pageQueryMap.put("page", lastPage);
	getPageAction(obj);
};
function next(obj){
	var page = parseInt(pageQueryMap.get("page"));
	pageQueryMap.put("page", page + 1);
	
	getPageAction(obj);
};
function pagesizeChange(obj){
	var v = obj.value;
	if(!new RegExp("^-?[0-9]*$").test(v) || parseInt(v, 10) < 1){
		return;
	}

	pageQueryMap.put("pageSize", v);
	pageQueryMap.put("page", 1);
	getPageAction(obj);
};
function prev(obj){
	var page = parseInt(pageQueryMap.get("page"));
	pageQueryMap.put("page", page - 1);
	getPageAction(obj);
};

/********************************** \u8868\u5355\u9a8c\u8bc1 *****************************************/
/**
 * \u5e38\u91cf\u5b9a\u4e49
 */
var formValidate = {
	unCharactor		: "\"\\/|><:*?'&%$",
	integerDigits	:	"10",
	decimalDigits	:	"0"
}

/**
 * \u8868\u5355\u9a8c\u8bc1
 */
V3X.prototype.checkFormAdvanceAttribute="";
function checkForm(formObj){	
	var elements = formObj.elements;
	
	var clearValueElements = [];

	if(elements != null){
		for(var i = 0; i < elements.length; i++){
			var e = elements[i];
			var clearValue = e.getAttribute("clearValue");
			
			if(clearValue == "true"){
				clearValueElements[clearValueElements.length] = e;
				continue;
			}
			V3X.checkFormAdvanceAttribute = e.getAttribute("advance");
			var validateAtt = e.getAttribute("validate");
			if(validateAtt != null && validateAtt != "" && validateAtt != "undefined"){
				var validateFuns = validateAtt.split(",");
				
				for(var f = 0; f < validateFuns.length; f++){
					var fun = validateFuns[f];
					
					if(fun){
						var result = eval(fun + "(e)");
					
						if(!result){return false;}
					}
				}
			}
		}
	}
	
	for(var j = 0; j < clearValueElements.length; j++) {
		clearDefaultValueWhenSubmit(clearValueElements[j]);
	}
	
	return true;
};

/**
 * \u6267\u884c\u6b63\u5219\u8868\u8fbe\u5f0f
 */
function testRegExp(text, re) {
	return new RegExp(re).test(text);
};

/**
 * \u5728\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u6e05\u9664\u6389\u9ed8\u8ba4\u503c
 */
function clearDefaultValueWhenSubmit(element){
	var defaultValue = getDefaultValue(element);
	
	var v = element.value;
	
	if(v == defaultValue){
		element.value = "";
	}
};

/**
 * \u6253\u5370\u51fa\u63d0\u793a\u6d88\u606f\uff0c\u5e76\u805a\u7126
 */
function writeValidateInfo(element, message){
	alert(message);

	var onAfterAlert = element.getAttribute("onAfterAlert");
	if(onAfterAlert){
		try{
			eval(onAfterAlert);
		}
		catch(e){
		}
	}
	else{
		try{
			element.focus();
			element.select();
        }
		catch(e){
		}
	}
};

function notSpecChar(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	if(value==_('V3XLang.default_subject_value')){
		value="";
	}
	//\u4fee\u6539[]\u4e4b\u95f4\u7684\u5185\u5bb9\uff0c\u5176\u5b83\u90e8\u5206\u4e0d\u8bb8\u4fee\u6539
	if(/^[^\|\\"'<>]*$/.test(value)){
		return true;
	}else{
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_specialCharacter", inputName));
		return false;
	}
} 

function notSpecCharWithoutApos(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	//\u4fee\u6539[]\u4e4b\u95f4\u7684\u5185\u5bb9\uff0c\u5176\u5b83\u90e8\u5206\u4e0d\u8bb8\u4fee\u6539
	if(/^[^\|\\\/"<>]*$/.test(value)){
		return true;
	}else{
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_specialCharacter_withoutApos", inputName));
		return false;
	}
} 
/**
 * \u9a8c\u8bc1\u662f\u5426\u4e3a\u7a7a\uff0c\u4e0d\u5141\u8bb8\u7a7a\u683c
 */
function notNull(element){
	var value = element.value;
	value = value.replace(/[\r\n]/g, "");
	var inputName = element.getAttribute("inputName");
	
	if(value == null || value == "" || value.trim() == ""){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_notNull", inputName));
		return false;
	}
	
	var maxLength = element.getAttribute("maxSize");
	
	if(maxLength && value.length > maxLength){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_maxLength", inputName, maxLength, value.length));
		return false;
	}
	
	return true;
};

/**
 * \u68c0\u6d4b\u957f\u5ea6
 */
function maxLength(element){
	var value = element.value;
	if(!value){
		return true;
	}
	
	var inputName = element.getAttribute("inputName");
	
	var maxLength = element.getAttribute("maxSize");
	
	if(maxLength && value.length > maxLength){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_maxLength", inputName, maxLength, value.length));
		return false;
	}
	
	return true;
};
/**
 *  \u68c0\u6d4b\u6700\u5c0f\u957f\u5ea6
 */
function minLength(element){
	var value = element.value;
	if(!value){
		return true;
	}
	
	var inputName = element.getAttribute("inputName");
	
	var minLength = element.getAttribute("minLength");
	
	if(minLength && value.length < minLength){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_minLength", inputName, minLength, value.length));
		return false;
	}
	
	return true;
};

/**
 * \u662f\u5426\u4e3a\u6570\u5b57
 */
function isNumber(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var integerDigits = element.getAttribute("integerDigits") || formValidate.integerDigits;
	var decimalDigits = element.getAttribute("decimalDigits") || formValidate.decimalDigits;
	var integerMax = element.getAttribute("integerMax");
	var integerMin = element.getAttribute("integerMin");
	
	if(value == "0"){
		return true;
	}

	if(value == "."){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isNumber", inputName));
		return false;
	}
	if(!testRegExp(value, "^-?[0-9]{0,"+integerDigits+"}\\.?[0-9]{0,"+decimalDigits+"}$")){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isNumber", inputName));
		return false;
	}

	if(integerMax && parseInt(value) > integerMax) {
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_too_max", inputName, integerMax, value));
		return false;
	}
	
	if(integerMin && parseInt(value) < integerMin) {
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_too_min", inputName, integerMin, value));
		return false;
	}
	
	return true;
};
/**
 * \u6821\u9a8c\u8f93\u5165\u7684\u6570\u5b57\u662f\u5426\u4e3a\u6b63\u6570\uff0c\u5fc5\u987b\u5927\u4e8e0
 */
function positive(element) {
	var str = element.value.trim();
	if(str != '') {
		var value = parseFloat(element.value.trim());
		var inputName = element.getAttribute("inputName");
		if(value <= 0) {
			writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_positive", inputName));
			return false;
		}
	}
	return true;
}
/**
 * \u6821\u9a8c\u8f93\u5165\u7684\u767e\u5206\u6bd4\uff0c\u5fc5\u987b\u57280~100\u4e4b\u95f4
 */
function percent(element) {
	var str = element.value.trim();
	if(str != '') {
		var value = parseFloat(element.value.trim());
		var inputName = element.getAttribute("inputName");
		if(value < 0 || value > 100) {
			writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_percent", inputName, str));
			return false;
		}
	}
	return true;
}
/**
 * 
 */
function notNum(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var integerDigits = element.getAttribute("integerDigits") || formValidate.integerDigits;
	var decimalDigits = element.getAttribute("decimalDigits") || formValidate.decimalDigits;
	
	if(value == "0"){
		return true;
	}
	if(testRegExp(value, "^-?[0-9]{0,"+integerDigits+"}\\.?[0-9]{0,"+decimalDigits+"}$")){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isNotNumber", inputName));
		return false;
	}
	
	return true;
	
	
}
/**
 * \u68c0\u6d4b\u662f\u5426\u662f\u90ae\u7bb1
 */
function isEmail(element){
	var value = element.value;
	if(!value){
		return true;
	}
	
	var inputName = element.getAttribute("inputName");
	
	if(value.indexOf("@") == -1 || value.indexOf(".") == -1){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isEmail", inputName));
		return false;
	}
	
	return true;
};

/**
 * \u9a8c\u8bc1\u662f\u5426\u4e3a\u7a7a\uff0c\u5141\u8bb8\u7a7a\u683c
 */
function notNullWithoutTrim(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	if(value == null || value == ""){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_notNull", inputName));
		return false;
	}
	
	var maxLength = element.getAttribute("maxLength");
	if(maxLength && value.length > maxLength){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_maxLength", inputName, maxLength));
		return false;
	}
	
	return true;
};

/**
 * \u9a8c\u8bc1\u662f\u5426\u4e3a\u6574\u6570\uff0c\u5e76\u9a8c\u8bc1max\u548cmin
 */
function isInteger(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var max = element.getAttribute("max");
	var min = element.getAttribute("min");
		
	if(value != "0" && (isNaN(value) || value.indexOf("0") == 0 || !testRegExp(value, "^-?[0-9]*$"))){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isInteger", inputName));
		return false;
	}
	
	if(max != null && max != "" && parseInt(value) > parseInt(max)){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isInteger_max", inputName, max));
		return false;
	}
	
	if(min != null && min != "" && parseInt(value) < parseInt(min)){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isInteger_min", inputName, min));
		return false;
	}

	return true;
};

/**
 * \u662f\u5426\u4e3a\u6b63\u5e38\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u5141\u8bb8\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\uff1a/ character
 */
function isWord(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var character = element.getAttribute("character") || formValidate.unCharactor;

	var _c = "";
	for(var i = 0; i < character.length; i++){
		if(value.indexOf(character.charAt(i)) > -1){
			_c += character.charAt(i);
		}
	}
	
	if(_c.length > 0) {
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isWord", inputName, _c, character));
		return false;
	}
	
	return true;
};

/**
 * \u662f\u5426\u662f\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf
 */
function isCriterionWord(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	if(!testRegExp(value, '^[\\w-]+$')){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isCriterionWord", inputName));
		return false;
	}
	
	return true;
};
/**
 * \u5224\u65ad\u662f\u5426\u7b26\u5408url\u683c\u5f0f
 */
function isUrl(element)
{
	var value = element.value;
	if(!value){
		return true;
	}
	var inputName = element.getAttribute("inputName");
	//\u4e4b\u524d\uff1a^http://{1}([\w-]+\.)+[\w-]+     \u5339\u914dhttp://www.********
	//     ^http://{1}([\\w-]+\.)+[\\w-]+   \u5339\u914dhttp://***********
	if(!testRegExp(value, "^http://{1}([\\w-]+\.)+[\\w-]+")){
		writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isUrl", inputName));
		return false;
	}
	return true;
}
/**
 * \u4ee5\u6307\u5b9a\u6587\u672c\u5f00\u5934
 */
function startsWith(element){
	if(typeof(element) =="object"){
		var value = element.value;
		var inputName = element.getAttribute("inputName");
		
		var prefix = element.getAttribute("prefix");
		
		if(value.indexOf(prefix) != 0){ // prefix\u662f\u6269\u5c55\u7684\u5c5e\u6027
			writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_startsWith", inputName, prefix));
			return false;
		}
	}  
    return true;
};

/**
 * \u5386\u53f2\u539f\u56e0,\u62fc\u5199\u9519\u8bef,\u5e9f\u5f03,\u4f46\u80fd\u6b63\u5e38\u8fd0\u884c,\u8bf7\u7528isDefaultValue
 */
function isDeaultValue(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var deaultValue = getDefaultValue(element);
	
	if(value == deaultValue){
    	writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_notNull", inputName));
        return false;
	}
	
	return true;
};

function isDefaultValue(element){
	var value = element.value;
	var inputName = element.getAttribute("inputName");
	
	var defaultValue = getDefaultValue(element);
	
	if(value == defaultValue){
    	writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_notNull", inputName));
        return false;
	}
	
	return true;
};

/*********************************  \u65e5\u671f\u9009\u62e9\u5668 *********************************************/
var __addDataEventObject = null;

/**
 * e.g whenstart('${pageContext.request.contextPath}', this, 575, 140);
 * 
 * @param contextPath \u8ddf\u8def\u5f84 ${pageContext.request.contextPath}
 * @param whoClick \u8981\u8d4b\u503c\u7684Object\uff0c\u5982\u679c\u4e3anull\uff0c\u5219\u8fd4\u56de\u65e5\u671f\u6570\u636e
 * @param myLeft \u8ddd\u5c4f\u5e55\u5de6\u9762\u8ddd\u79bb(\u5e9f\u5f03\uff0c\u53bb\u9f20\u6807\u70b9\u51fb\u7684\u4f4d\u7f6e) 
 * @param myTop \u8ddd\u5c4f\u5e55\u4e0a\u9762\u8ddd\u79bb(\u5e9f\u5f03\uff0c\u53bb\u9f20\u6807\u70b9\u51fb\u7684\u4f4d\u7f6e) 
 * @param type \u9009\u62e9\u7c7b\u578b date datetime \u9ed8\u8ba4 date
 * @param allowEmpty \u662f\u5426\u5141\u8bb8\u7a7a
 * @param
 */
function whenstart(contextPath, whoClick, myLeft, myTop, type, allowEmpty, width, height){
	type = type || "date";
	if(allowEmpty == null){
		allowEmpty = true;
	}
	
	__addDataEventObject = whoClick;
	var evt = v3x.getEvent();	
	if(!v3x.getBrowserFlag('needModalWindow')){
	    var date_win = new MxtWindow({
	        id: 'date_win',
	        title: 'date',
	        url: contextPath + "/common/js/addDate/date.jsp?type=" + type + "&allowEmpty=" + allowEmpty,
	        height: height || 300,
	        width: width || 300,
	        relativeElement:whoClick,
			type:'window',//\u7c7b\u578bwindow\u548cpanel\u4e3apanel\u7684\u65f6\u5019title\u4e0d\u663e\u793a
			isDrag:false,//\u662f\u5426\u5141\u8bb8\u62d6\u52a8
	        buttons: [{
				id:'btn1',
	            text: 'Ok',
	            handler: function(){
	        		var rv = date_win.getReturnValue();
	        		if(!whoClick && rv){
	        			return rv;
	        		}
	    			date_win.close();
	        	}
	        }, {
				id:'btn2',
	            text: 'Close',
	            handler: function(){
	        		date_win.close();
	            }
	        }]
	    
	    });
	}else{
		var rv = v3x.openWindow({
	        url: contextPath + "/common/js/addDate/date.jsp?type=" + type + "&allowEmpty=" + allowEmpty,
	        height: 230,
	        width: 250,
	        'top': evt.screenY + 20,
	        left: evt.screenX - 50
		});
		if (rv==null)
			rv="";
		if(!whoClick && rv){
			return rv;
		}
		
		return rv;	
	}
	

}

//\u529f\u80fd:\u5224\u65ad\u662f\u5426\u4e3a\u5408\u6cd5\u7684\u65e5\u671f\u5b57\u7b26\u4e32
//\u53c2\u6570:\u5fc5\u987b\u662f\u5e74\u6708\u65e5\u683c\u5f0f\uff0c\u5e74\u8981\u6c42\u56db\u4f4d\uff0c\u6708\u65e5\u53ef\u4ee5\u662f\u957f\u7c7b\u578b\u6216\u8005\u77ed\u7c7b\u578b\uff0c\u5fc5\u987b\u4ee5'-'\u6216\u8005'/'\u4f5c\u4e3a\u5206\u9694\u7b26
//     isSave\u4e3atrue\u65f6\u5408\u6cd5\u65e5\u671f\u4fdd\u5b58\u5230\u5f53\u524d\u65e5\u671f\u5bf9\u8c61
Date.prototype.isDate=function(szDate,isSave)
{
    var re,regu;
    var splitChar,Year,Month,Day;
    var szArry;
    var strObj=new String(szDate);
	if(strObj.length<8 || strObj.length>10) return false;//\u5224\u65ad\u65e5\u671f\u7684\u957f\u5ea6\uff0c\u5b8c\u6574\u7684\u5e74\uff0c\u957f\u77ed\u65e5\u671f\u683c\u5f0f
	regu="^([0-9]){4}(-|/)([0-9]){1,2}(-|/)([0-9]){1,2}$";//\u65e5\u671f\u6a21\u677f\u6821\u9a8c(\u4ee5\u2018\uff0d\u2019\u6216\u8005\u2018/\u2019\u5206\u5272\u7684\u65e5\u671f)
	re=new RegExp(regu);
	if(strObj.search(re)==-1) return false;
	splitChar=strObj.charAt(4);//\u5e74\u5fc5\u987b\u8f93\u5165\u56db\u4f4d\u6570\u5b57
	szArry=strObj.split(splitChar);
	if(szArry.length!=3) return false;
	Year=parseInt(szArry[0],10);
	Month=parseInt(szArry[1],10);
	Day=parseInt(szArry[2],10);
	if(Year<1900 || Year>2500) return false;
	if(Month<1 || Month>12) return false;//\u6708\u5fc5\u987b\u5728\uff11\uff0d\uff0d\uff11\uff12\u4e4b\u95f4
	if(Day<1 || Day>31) return false;//\u65e5\u5fc5\u987b\u5728\uff11\uff0d\uff13\uff11\u4e4b\u95f4
	switch(Month)
	{
		case 4:
		case 6:
		case 9:
		case 11:
			if(Day>30) return false;
			break;
		case 2:
			if((Year%4==0 && Year%100!=0) || Year%400==0)//\u6da6\u5e742\u6708\u4efd29\u5929
			{
				if(Day>29) return false;
			}
			else
			{
				if(Day>28) return false;
			}
			break;
		default: break;
	}
	if(isSave)
	{
	  /**
	   * \u8bbe\u503c\u987a\u5e8f\u6539\u4e3a\uff1a\u5148\u8bbe\u5b9a\u65e5\u3001\u518d\u8bbe\u5b9a\u6708\u3001\u518d\u8bbe\u5b9a\u5e74\uff0c\u907f\u514d\u51fa\u73b0\u5982\u4e0bBug\uff1a
	   * \u65e5\u671f\u53d8\u91cf2010-01-30\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u53c2\u6570\u4e3a('2010-02-01', true)\u540e\u65e5\u671f\u53d8\u91cf\u4f1a\u53d8\u4e3a2010-03-01(\u5e94\u8be5\u4e3a2010-02-01)
	   * \u56e0\u4e3a\u5148\u8bbe\u5b9a\u6708\uff0c\u518d\u8bbe\u5b9a\u65e5\uff0c\u6b64\u65f6\u8be5\u503c\u4e3a2010-02-30\uff0c\u8d85\u51fa2\u6708\u5929\u6570\uff0c\u6b64\u65f6\u7cfb\u7edf\u81ea\u52a8\u5c06\u5176\u6708\u4efd\u6539\u4e3a3\u6708
	   */
	  this.setDate(Day);
	  this.setMonth(Month-1);
	  this.setYear(Year);
	}
	return true;
}

/**
 * \u5c06\u65e5\u671f\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u65e5\u671f\u5bf9\u8c61
 */
function parseDate(dateStr){
	var ds = dateStr.split("-");
	var y = parseInt(ds[0], 10);
	var m = parseInt(ds[1], 10) - 1;
	var d = parseInt(ds[2], 10);
	
	return new Date(y, m, d);
}
//\u529f\u80fd:\u5f97\u5230\u8f93\u5165\u65e5\u671f\u524d\u51e0\u5929\u6216\u8005\u540e\u51e0\u5929\u7684\u65e5\u671f

Date.prototype.dateAdd=function(curDateStr,iPassNum)
{
  var dateObj;
  var sNewDate=curDateStr;
  var y,m,d;
  var sDate;
  var bUpChange=false;
  var splitChar;
  var szArry;
  var strObj;
  if(this.isDate(curDateStr,true)==false)
  {
    //alert("\u5f53\u524d\u65e5\u671f\u9519\u8bef!");
    return curDateStr;
  }
  strObj=new String(curDateStr);
  splitChar=strObj.charAt(4);//\u5e74\u5fc5\u987b\u8f93\u5165\u56db\u4f4d\u6570\u5b57
  szArry=strObj.split(splitChar);
  y=parseInt(szArry[0],10);
  m=parseInt(szArry[1],10);
  d=parseInt(szArry[2],10);

  while(iPassNum!=0)
  {
    //\u8bbe\u7f6e\u65e5\u671f
    if(iPassNum>0) d++;
    else d--;
    if(d<=0 || d>31)
    {
       bUpChange=true;
       if(d<=0) d=31;
       else d=1;
    }
    else
    {
      bUpChange=false;
    }
    //\u8bbe\u7f6e\u6708
    if(bUpChange)
    {
      if(iPassNum>0) m++;
      else m--;
      if(m<=0 || m>12)
      {
        bUpChange=true;
        if(m<=0) m=12;
        else m=1;
      }
      else
      {
        bUpChange=false;
      }
    }
    //\u8bbe\u7f6e\u5e74
    if(bUpChange)
    {
      if(iPassNum>0) y++;
      else y--;
    }
    sNewDate=y+"-"+m+"-"+d;
    if(this.isDate(sNewDate,false))
    {
      if(iPassNum>0) iPassNum--;
      else iPassNum++;
    }
  }
  return sNewDate;
}
//\u529f\u80fd:\u5f97\u5230\u8f93\u5165\u65e5\u671f\u6240\u5728\u7684\u661f\u671f\u7684\u5f00\u59cb\u65e5\u671f(\u661f\u671f\u4e00)\u548c\u7ed3\u675f\u65e5\u671f(\u661f\u671f\u4e94)
Date.prototype.getWeekStart=function(dateStr)
{
  this.isDate(dateStr,true);
  var iWeek=this.getDay();

  //\u4e00\u5468\u7684\u7b2c\u4e00\u5929\u8fd9\u91cc\u5b9a\u4e3a\u5468\u65e5
  var iPassNum=iWeek;
  if(iPassNum!=0) iPassNum=-iPassNum;
  return formatDate(this.dateAdd(dateStr,iPassNum));
}

Date.prototype.getWeekEnd=function(dateStr)
{
  this.isDate(dateStr,true);
  var iWeek=this.getDay();
  //alert(dateStr+"|||"+this.getYear()+"-"+m+"-"+this.getDate());
  //alert("iWeek:"+iWeek);
  //if(iWeek==0) iWeek=7;
  var iPassNum=6-iWeek;
  return formatDate(this.dateAdd(dateStr,iPassNum));
}

//\u529f\u80fd:\u5f97\u5230\u8f93\u5165\u65e5\u671f\u6240\u5728\u7684\u6708\u4efd\u7684\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f
Date.prototype.getMonthStart=function(dateStr)
{
  this.isDate(dateStr,true);
	dateStr=this.getFullYear()+"-"+(this.getMonth()+1)+"-1";
  return formatDate(dateStr);
}
Date.prototype.getMonthEnd=function(dateStr)
{
  this.isDate(dateStr,true);
	var months=[31,28,31,30,31,30,31,31,30,31,30,31];
  //this.isDate(dateStr,true);
	var iYear=this.getFullYear();
  var iMonth=this.getMonth()+1;

  var iDay=months[this.getMonth()];

	if(iYear%4==0 && iMonth==2){
		iDay++;
	}
	dateStr=iYear+"-"+iMonth+"-"+iDay;
  return formatDate(dateStr);
}
//\u529f\u80fd:\u5f97\u5230\u8f93\u5165\u65e5\u671f\u6240\u5728\u7684\u5b63\u5ea6\u7684\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f
Date.prototype.getSeasonStart=function(dateStr)
{
	var a=[1,1,1,4,4,4,7,7,7,10,10,10];
  this.isDate(dateStr,true);
	dateStr=this.getFullYear()+"-"+a[this.getMonth()]+"-1";
  return formatDate(dateStr);
}
Date.prototype.getSeasonEnd=function(dateStr)
{
  this.isDate(dateStr,true);
	var a=[3,3,3,6,6,6,9,9,9,12,12,12];
	var m=[31,31,31,30,30,30,30,30,30,31,31,31];
  this.isDate(dateStr,true);
	dateStr=this.getFullYear()+"-"+a[this.getMonth()]+"-"+m[this.getMonth()];
  return formatDate(dateStr);
}
//\u5f97\u5230\u8fd9\u4e2a\u6708\u7684\u7b2c\u51e0\u5468
Date.prototype.getWeekOfMonth = function(){
	var w = this.getDay();
    var d = this.getDate(); 
	return Math.ceil((d + 6 - w)/7 );
}
function formatDate(dateStr){
	var d = dateStr.split("-");
	var month = parseInt(d[1], 10);
	var date = parseInt(d[2], 10);
	
	return d[0] + "-" + (month < 10 ? "0" + month : month) + "-" + (date < 10 ? "0" + date : date);
}

/**
 * \u65e5\u671f\u683c\u5f0f\u5316
 */
Date.prototype.format = function(pattern) {
	var hour = this.getHours();
	var o = {
		"M+" : this.getMonth() + 1, //month
		"d+" : this.getDate(),    //day
		"H+" : hour,   //hour
		"h+" : (hour > 12 ? hour - 12 : hour),   //hour
		"m+" : this.getMinutes(), //minute
		"s+" : this.getSeconds(), //second
		"q+" : Math.floor((this.getMonth()+3)/3),  //quarter
		"S" : this.getMilliseconds() //millisecond
	}
	
	if(/(y+)/.test(pattern)){
		pattern = pattern.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
	}
	
	for(var k in o)if(new RegExp("("+ k +")").test(pattern)){
		pattern = pattern.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
	}
  
	return pattern;
}

/**
 * \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u65e5\u671f\u7684\u524d\u540e\uff0c\u4e0d\u6bd4\u8f83\u65f6\u95f4
 * 
 * @param dateStr1 \u65e5\u671f1 \u5b57\u7b26\u4e32
 * @param dateStr2 \u65e5\u671f2 \u5b57\u7b26\u4e32
 * @return \u8d1f\u6574\u6570\u3001\u96f6\u6216\u6b63\u6574\u6570\uff0c\u6839\u636e\u6b64\u5bf9\u8c61\u662f\u5c0f\u4e8e\u3001\u7b49\u4e8e\u8fd8\u662f\u5927\u4e8e
 */
function compareDate(dateStr1, dateStr2){
	return Date.parse(dateStr1.replace(/\-/g, '/')) - Date.parse(dateStr2.replace(/\-/g, '/'));
}

/*************************************\u4ee5\u4e0b\u4e3a\u65e5\u671f\u683c\u5f0f\u8f6c\u6362\u51fd\u6570*******************************/

/*
\u529f\u80fd:YYYY-MM-DD \u6570\u5b57\u65e5\u671f\u8f6c\u5316\u4e3a\u6c49\u5b57
\u4f8b:2008-3-7 -> \u4e8c\u96f6\u96f6\u516b\u5e74\u4e09\u6708\u4e03\u65e5
\u8c03\u7528:date2chinese1("2008-3-7") 

date2chinese0("2008-5-8"); \uff0d\uff0d\u300b \u4e8c\u3007\u3007\u516b\u5e74\u4e09\u6708\u4e03\u65e5

date2chinese("2008-05-8"); \uff0d\uff0d\u300b 2008\u5e745\u67088\u65e5


*/
var chinese=["\u96f6","\u4e00","\u4e8c","\u4e09","\u56db","\u4e94","\u516d","\u4e03","\u516b","\u4e5d"];
var len = ["\u5341"];
var ydm =["\u5e74","\u6708","\u65e5"];
function num2chinese(s)
{

//\u5c06\u5355\u4e2a\u6570\u5b57\u8f6c\u6210\u4e2d\u6587.
s=""+s;
slen = s.length;
var result="";
for(var i=0;i<slen;i++)
{
result+=chinese[s.charAt(i)];
}
return result;
}


function n2c(s)
{ 
//\u5bf9\u7279\u6b8a\u60c5\u51b5\u8fdb\u884c\u5904\u7406.
s=""+s;
var result="";
if(s.length==2)
{
if(s.charAt(0)=="1")
{
if(s.charAt(1)=="0")return len[0];
return len[0]+chinese[s.charAt(1)];
}
if(s.charAt(1)=="0")return chinese[s.charAt(0)]+len[0];
return chinese[s.charAt(0)]+len[0]+chinese[s.charAt(1)];
}
return num2chinese(s)
}

function date2chinese0(s)
{
  var ns=date2chinese(s);
  ns=ns.replace(/\u96f6/g, "\u3007");
  return ns;
}

function date2chinese1(s)
{
  var str;
  var ns=s.split("-");  
  if(ns.length!=3){ns=s.split("/");}
  if(ns.length!=3){return s;}
  if(ns[1].charAt(0)=="0"){ns[1]=ns[1].substr(1);}
  if(ns[2].charAt(0)=="0"){ns[2]=ns[2].substr(1);}
  str=ns[0]+"\u5e74"+ns[1]+"\u6708"+ns[2]+"\u65e5";
  return str;
}

function date2chinese(s)
{
//\u9a8c\u8bc1\u8f93\u5165\u7684\u65e5\u671f\u683c\u5f0f.\u5e76\u63d0\u53d6\u76f8\u5173\u6570\u5b57.
var datePat = /^(\d{2}|\d{4})(\/|-)(\d{1,2})(\2)(\d{1,2})$/; 
var matchArray = s.match(datePat); 
var ok="";
if (matchArray == null) return false;
for(var i=1;i<matchArray.length;i=i+2)
{
ok+=n2c(matchArray[i]-0)+ydm[(i-1)/2];
}
return ok;
}
 
/**************************************************   \u6253\u5370   **************************************************/
var plist = null;//\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff08\u6253\u5370\u5185\u5bb9\u5bf9\u8c61\u5217\u8868\uff09
var styleData = null;//\u5b9a\u4e49\u6837\u5f0f\u8868\u5168\u5c40\u53d8\u91cf
var printDefaultSelect = null;
var notPrintDefaultSelect = null;
/**
 * \u521d\u59cb\u5316\u6253\u5370\u6570\u636e
 * printFragmentList -- \u6253\u5370\u5185\u5bb9\u5bf9\u8c61\u5217\u8868
 * styleDatas -- \u6253\u5370\u6837\u5f0f
 */
function  printList(printFragmentList,styleDatas){
	if(!printFragmentList) {return;}
	plist = printFragmentList;
    styleData = styleDatas;
    if(arguments[2] != null){printDefaultSelect = arguments[2]}else{printDefaultSelect = null;}
    if(arguments[3] != null){notPrintDefaultSelect = arguments[3]}else{notPrintDefaultSelect = null;}
	printButton();
}

/**
 * \u5f39\u51fa\u6253\u5370\u5bf9\u8bdd\u6846
 */
function printButton(){
   v3x.openWindow({
		url : v3x.baseURL + "/apps_res/print/print.jsp",
		dialogType : "1",
		workSpace : true,
		resizable : true,
		scrollbars: false
	});
}

/**
 * \u6253\u5370\u6309\u94ae\u754c\u9762
 * \u5f39\u51fa\u6253\u5370\u9875\u9762onload\u6b64\u65b9\u6cd5
 */
   function printLoad(){
   	try{
   	   var obj  = v3x.getParentWindow(); 
   	   var context = document.getElementById("context");
	   var tlist = obj.plist;//\u83b7\u53d6\u6253\u5370\u5185\u5bb9
	   var tlength = tlist.size();
	   for(var i=0; i<tlength; i++){
	 	    var s = tlist.get(i);     
	        context.innerHTML += "<p>"+s.dataHtml+"</p>";
	   }
     
	   var klist = obj.styleData;//\u83b7\u53d6\u6837\u5f0f\u8868\u5217\u8868    
	   setStyle(klist) 
	   var checkOption = document.getElementById("checkOption");
	   var nlist  = obj.plist;
	   var nlength = tlist.size();
	   var flag = 0;
	  // disabledLink();//\u8fd9\u91cc\u5199\u8fd9\u4e2a\u5e72\u4ec0\u4e48\uff1f
	   //\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u7684\u65f6\u5019,\u5c31\u6ca1\u5fc5\u8981\u51fa\u73b0\u4e86,\u4e5f\u6ca1\u5fc5\u8981\u51fa\u73b0\u5168\u90e8\u9009\u9879
	  if(nlength<=1){disabledLink();return;}//\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u4e5f\u5e94\u8be5\u5c06\u5185\u5bb9\u5185\u7684\u53ef\u9009\u4e2d\u52a8\u4f5c\u7684\u5143\u7d20\u7ed9\u7981\u7528\u6389
	   for(var i=0; i<nlength; i++){
	 	    var s = nlist.get(i);    
	 	    if(s.dataName != null && s.dataName != ""){
	            checkOption.innerHTML +="<label for='dataNameBox"+i+"'><input type=checkbox checked name='dataNameBoxes' id=dataNameBox"+i+" onclick='printMain(this)'><font style='font-size:12px' color='black'>"+s.dataName+"</font></label>&nbsp;&nbsp;";
	 	        flag ++;
	 	    }
	   } 
	   if(flag >0)//\u5f53\u6709\u591a\u4e2a\u5907\u9009\u9879\u65f6\u663e\u793a
	    	checkOption.innerHTML +="<font style='font-size:12px' color='black'><label for='printall'><input type=checkbox id ='printall' checked name=cboxs onclick=printAll(this)>" + _("printLang.print_all") + "</label></font>";
	    
	    if(obj.notPrintDefaultSelect != null){
		   	for(var i = 0; i < obj.notPrintDefaultSelect.length; i ++){
		   		if(document.getElementById("dataNameBox"+obj.notPrintDefaultSelect[i])!=null){
					document.getElementById("dataNameBox"+obj.notPrintDefaultSelect[i]).checked = false;
				}
		   	}
	    }
	    
	    document.close();
	    //\u8868\u5355\u6253\u5370\u7b7e\u7ae0\u65f6\u4e0d\u663e\u793a\u7b7e\u7ae0\u5185\u5bb9\uff0c\u67e5\u770b\u6e90\u6587\u4ef6\u65f6\u53ef\u4ee5\u663e\u793a\uff0c\u4f46\u9875\u9762\u6ca1\u6709\u76f8\u5e94\u7684\u503c\uff0c\u91cd\u65b0\u52a0\u8f7d\u4e00\u6b21context\u5c31\u53ef\u4ee5\u663e\u793a\uff0c\u5728\u6ca1\u6709\u627e\u5230\u66f4\u597d\u65b9\u6cd5\u4e4b\u524d\uff0c\u6682\u65f6\u8fd9\u4e48\u89e3\u51b3\u3002
	    var context = document.getElementById("context");
	    //context.innerHTML="";
	    creatDataHtml(tlist,context);
	    //\u6709HTML\u7b7e\u7ae0\u7684\u65f6\u5019\u4e0d\u80fddisable,\u5426\u5219\u7b7e\u7ae0\u4f1a\u5931\u6548
	    var div = document.getElementById("iSignatureHtmlDiv");
	    if(!div){
	    	disabledLink();
	    }
   	}catch(e){}
}
	
   /**
* \u54cd\u5e94checked\u4e8b\u4ef6 
*/
   function printMain(e){
   	    var  obj = v3x.getParentWindow(); 
        var tlist  = obj.plist;
	    var context = document.getElementById("context");
    creatDataHtml(tlist,context);
 	checkCount(e,tlist);
 	disabledLink();
}
function cleanSpecial(str){
	var position = str.indexOf("<DIV>");
	if(position == -1){
		return str;
	}
	var leftstr = str.substr(0,position-1);
	var rightstr = str.substr(position);
	var nextposition = rightstr.indexOf("</DIV>");
	var laststr = rightstr.substr(nextposition+6);
	return cleanSpecial(leftstr+laststr);
}
/**
 * \u521b\u5efaHtml\u7247\u65ad
 */
function  creatDataHtml(tlist,context){
	var tlength = tlist.size();
	var html = new StringBuffer();
	html.append("");
    for(var i=0; i<tlength; i++){
 	    var s = tlist.get(i);
 	    if(s.dataName != null && s.dataName != ""){
     	    var thisCheckBox = document.getElementById("dataNameBox"+i);//\u53d6\u5f97\u6bcf\u4e00\u4e2a\u6309\u94ae
     	    if(thisCheckBox.checked){//\u5224\u65ad\u5f53\u524d\u6309\u94ae\u662f\u5426\u9009\u4e2d   	
	    	   html.append("<p>"+s.dataHtml+"</p>");
	        }else{
	        	//\u6709\u4e00\u4e2a\u6309\u94ae\u6ca1\u6709\u9009  \u5219\u5168\u90e8\u6253\u5370\u6309\u94ae\u4e0d\u80fd\u9009\u4e2d
	        	var thisAllCheckBox =document.getElementById("printall");
	        	thisAllCheckBox.checked = false;
	        }
	    }
	    //\u7531\u4e8e\u6b63\u6587\u4f20\u5165\u4e86\u7a7a\u503c\uff0c\u6240\u4ee5\u505a\u5224\u65ad
	    if(s.dataName == ""){
	    	html.append("<p>"+s.dataHtml+"</p>");	
	    }
 	}
 	context.innerHTML = html.toString(); 
}
 /**
  * \u68c0\u67e5\u6309\u94aechecked\u4e2a\u6570\u662f\u5426\u5408\u6cd5
  */
function  checkCount(e,tlist){
	var tlistSize = tlist.size();
	  if(e.checked == false){
 		var count= 0;
 		for(var i =0;i<tlistSize;i++){
 	        var s = tlist.get(i);
 	        if(s.dataName !=null && s.dataName != ""){
     	        var thisCheckBox = document.getElementById("dataNameBox"+i);//\u53d6\u5f97\u6bcf\u4e00\u4e2a\u6309\u94ae
     	         if(thisCheckBox.checked==false){//\u5224\u65ad\u5f53\u524d\u6309\u94ae\u662f\u5426\u9009\u4e2d  
     	              count ++;	
     	         }
     	    }
 		}
 		if(count == tlistSize){
 			alert(_('printLang.print_least_select_one'));
 			if(e.id=='printall'){
 				var obj  = parent.v3x.getParentWindow();
 				if(obj.printDefaultSelect!=null){
 					if(document.getElementById("dataNameBox"+obj.printDefaultSelect[0])!=null){
 						document.getElementById("dataNameBox"+obj.printDefaultSelect[0]).checked = true;
 					}else{
 						document.getElementById("dataNameBox0").checked = true;
 					}
 				}else{
 					document.getElementById("dataNameBox0").checked = true;
 				}
 				
 			}else{
 				e.checked = true;
 			}
 			printMain(e);
 			return false;
 		}
 	}   
}
/**
 * \u6253\u5370\u5bf9\u8c61
 */
function PrintFragment(dataName,dataHtml){
	this.dataName = dataName;//\u6309\u94ae\u540d\u79f0
	this.dataHtml  = dataHtml;//\u4ee3\u7801\u7247\u65ad	
}

/**
 * \u53d6\u6d88\u94fe\u63a5\u53ca\u4e0d\u9700\u8981\u7684\u4e8b\u4ef6
 * [ 310SP1\u5c06TextInput\u548cTextArea\u6062\u590d\uff0c\u7f6e\u4e3adiasble\uff0c\u4e0d\u7528SPAN\u66ff\u6362\uff0c\u907f\u514d\u5404\u79cd\u5e03\u5c40\u95ee\u9898\u3002
 * \u7528SPAN\u66ff\u6362\u5177\u4f53\u539f\u56e0\u65e0\u6cd5\u67e5\u660e\uff0c\u53ef\u80fd\u6709\u6253\u5370\u9690\u60a3\u3002] Mazc 2009-12-08
 */
function disabledLink(){
	var aaa = document.body.getElementsByTagName("a");
	var sk = document.body.getElementsByTagName("span");
	var uuu = document.body.getElementsByTagName("u");
	var tables = document.body.getElementsByTagName("table");
	var inputs = document.body.getElementsByTagName("INPUT");
	var imgs = document.body.getElementsByTagName("img");
	var selects=document.body.getElementsByTagName("select");
	var textareas=document.body.getElementsByTagName("TEXTAREA");
	var tds = document.body.getElementsByTagName("td");
	var objects = document.body.getElementsByTagName("OBJECT");
	var hidenBoderStyle = "border-left:0px;border-top:0px;border-right:0px;border-bottom:0px solid #ff0000";
	   for(var i=0;i<aaa.length;i++){
	   	  aaa[i].target="_self";
	      aaa[i].style.color = "#000000";
	      aaa[i].onclick="";
		  aaa[i].href="###";
		  //aaa[i].style.display = "none";
		  aaa[i].style.textDecoration="none";
		  aaa[i].style.cursor="default";
	   }
	   for(var i=0;i<sk.length;i++){
		   var styleText = sk[i].style.cssText;
//		   if(styleText == ""){
//			   styleText = hidenBoderStyle;
//		   }else{
//			   styleText = styleText + ";" + hidenBoderStyle;
//		   }
		   sk[i].style.cssText = styleText;
		   sk[i].onmouseout = "";
		   sk[i].onmouseover = "";
		   sk[i].onclick="";
	   }
	   for(var i=0;i<uuu.length;i++){
	      uuu[i].onclick= function(){
	      	alert(_('printLang.print_preview_link_alert'));
	      }
	   }
	   for(var i=0;i<tables.length;i++){
		  tables[i].onclick="";
	   }
	   
	   for(var i = inputs.length -1; i >= 0;i--){
	   	 if(inputs[i].type == 'checkbox'){
	   	  	if(inputs[i].parentNode.parentNode.id == "checkOption" || inputs[i].id == "printall") {//\u4fdd\u7559\u4e0a\u65b9\u53ef\u9009\u7684\u6309\u94ae
	   	  		continue;
	   	  	}
	   	  }
		  else if(inputs[i].type=="text"){
		  	if(inputs[i].id != "print8" && inputs[i].style.display!='none'){
		  		var styleText = inputs[i].style.cssText;
		  		var breakStyle="WORD-WRAP: break-word;TABLE-LAYOUT: fixed;word-break:break-all";
			    if(styleText == ""){
					styleText = breakStyle;
				}else{
					styleText = styleText + ";" + breakStyle;
				}
		  		inputs[i].outerHTML= "<span id=\""+inputs[i].id+"\" class=\"" + inputs[i].className +  "\" style=\"" + styleText +  "\">" + inputs[i].value.escapeSameWidthSpace() + "</span>" ;
		  		continue;
		  	}  
		  }
		  var isStr = "print1 print2 print3 print4 print5 print6 print7 print8 dataNameBox0 dataNameBox1 dataNameBox2 dataNameBox3 dataNameBox4 dataNameBox5 printall";
		  if(isStr.indexOf(inputs[i].id)==-1){
			  inputs[i].disabled = "";
			  inputs[i].onkeypress="";
			  inputs[i].onchange="";
			  inputs[i].onclick="";
			  inputs[i].onmouseout = "";
			  inputs[i].onmouseover = "";
			  inputs[i].onfocus="" ;
			  inputs[i].onblur="" ;	
			  if(!v3x.isMSIE){
			  	 inputs[i].disabled = "disabled";
			  }
		  }
	  }
		//\u5982\u679c\u6253\u5370\u5185\u5bb9\u4e3a\u8868\u5355\u65f6\uff0c\u53bb\u6389\u8868\u5355\u4e2d\u63a7\u4ef6\u7684\u56fe\u7247
	  for(var i=0;i<imgs.length;i++){
		  imgs[i].onkeypress="";
		  imgs[i].onchange="";
		  imgs[i].onclick="";
		  imgs[i].style.cursor="default";
		  imgs[i].alt = "" ;
		  imgs[i].title = "" ;
		  var imgsrc = imgs[i].src.toString();
	
		  if(imgsrc.indexOf("form/image/selecetUser.gif") !=-1 || imgsrc.indexOf("form/image/date.gif") !=-1 || imgsrc.indexOf("form/image/add.gif") !=-1 
		  		|| imgsrc.indexOf("form/image/addEmpty.gif") !=-1 || imgsrc.indexOf("form/image/delete.gif") !=-1 || imgsrc.indexOf("handwrite.gif") !=-1  
		  		|| imgsrc.indexOf("seeyon/apps_res/v3xmain/images/message/16/attachment.gif")!= -1 || imgsrc.indexOf("seeyon/apps_res/form/image/quoteform.gif")!=-1 
		  		|| imgsrc.indexOf("form/image/deeSelect.png")!= -1 || imgsrc.indexOf("form/image/deeSearch.png")!= -1){
		  	 imgs[i].outerHTML = "&nbsp;&nbsp;&nbsp;";
		  	 i--;
		  }
		  //\u7b7e\u7ae0\u5728\u6253\u5370\u65f6\u4e0d\u80fd\u4fee\u6539
		 if(imgsrc.indexOf("handwrite.gif") !=-1){		 	
		   	 for(var a=0;a<objects.length;a++){
		   	 if(objects[a].innerHTML.indexOf("Enabled")!=-1) 
		   	    objects[a].Enabled = false;
		   }
		  }	     
		}
		for(var j = selects.length -1; j >= 0; j--)
		{
			var styleText = selects[j].style.cssText;
			try{
				var childs = selects[j].parentNode.childNodes;
				for(var c=0;c<childs.length;c++){
					//\u9488\u5bf9\u8868\u5355\u4e2d \u7528input\u6a21\u62df\u4e0b\u62c9\u6846\u5bfc\u81f4\u7236\u8282\u70b9\u9690\u85cf\u7684\u95ee\u9898
					//\u7528input\u6a21\u62df\u6846\u7684\u6837\u5f0f
					if(childs[c].id == selects[j].id+"_autocomplete"){
						styleText = childs[c].style.cssText;
						break;
					}
				}
			}catch(e){}
			selects[j].parentNode.outerHTML= "<span class=\"" + selects[j].className + "\" style=\"" + styleText +  "\">" + selects[j].options[selects[j].selectedIndex].text + "</span>" ;
		}
		for(var i=0;i<textareas.length;i++)
		{
			try{
				var disBorderStyle="overflow-y:visible;overflow-x:visible;";
			  var styleText = textareas[i].style.cssText;
			  if(styleText == ""){
				styleText = disBorderStyle;
			  }else{
				styleText = styleText + ";" + disBorderStyle;
			  }
			  var _wwwww = parseInt(textareas[i].clientWidth);
			  if(_wwwww-35>0){
			  	styleText+="width:"+(_wwwww-35)+"px;"
			  }
			  textareas[i].style.cssText = styleText;
			  textareas[i].onclick="";
			  textareas[i].onkeypress="";
			  textareas[i].onchange="";
			  textareas[i].onmouseout = "";
			  textareas[i].onmouseover = "";
			  textareas[i].onfocus="" ;
			  textareas[i].onblur="" ;	
			}catch(e){}
			textareas[i].readOnly = "readOnly";
		}
		for(var i=0;i<tds.length;i++){
		   tds[i].onclick="";
	   }
	}

   /**
* \u6253\u5370\u5185\u5bb9\u754c\u9762
*/
  function printInnerLoad(){
  	   var context = document.getElementById("context");
   var obj  = parent.v3x.getParentWindow();
   var tlist = obj.plist;//\u83b7\u53d6\u6253\u5370\u5185\u5bb9
   var tlength = tlist.size();
   for(var i =0;i<tlength;i++){
 	    var s = tlist.get(i);     
        context.innerHTML += "<p>"+s.dataHtml+"</p>";
   }
   var klist = obj.styleData;//\u83b7\u53d6\u6837\u5f0f\u8868\u5217\u8868
       if(!klist){
           setStyle(klist) ;
       }
  }

/**
 * \u8bbe\u7f6e\u6837\u5f0f\u8868
 */
function setStyle(klist){
	if(klist.size() > 0){
		var linkList = document.getElementById("linkList");
		for(var j = 0; j < klist.size(); j++){//\u5f15\u5165\u6837\u5f0f\u8868
			var linkChild = document.createElement("link");
            linkChild.setAttribute("rel", "stylesheet");
            linkChild.setAttribute("href", klist.get(j));
            linkChild.setAttribute("type", "text/css");
            linkList.appendChild(linkChild);
		}
	}
}

  /**
   * \u9009\u62e9\u6253\u5370\u5168\u90e8
   */
function printAll(e){
	var boxs = document.getElementsByName("dataNameBoxes");
	if(e.checked){
		for(var j=0;j<boxs.length;j++){
			boxs[j].checked = true;
		}
		printMain(e);
	}else{
		for(var j=0;j<boxs.length;j++){
			boxs[j].checked = false;
		}
		printMain(e);
	}
}
  
function onbeforeprint(){
	document.getElementById("checkOption").style.display="none";
}
  
function onafterprint(){
	document.getElementById("checkOption").style.display="";
}


/****************************************/
/************** \u6b63\u6587\u7c7b\u578b\u5207\u6362 **************/
/****************************************/
/**
 * \u9009\u62e9\u7c7b\u578b\u4e8b\u4ef6
 */
function chanageBodyType(bodyType, isRevertContent) {
    var bodyTypeObj = document.getElementById("bodyType");
    if (bodyTypeObj && bodyTypeObj.value == bodyType) {
        return true;
    }
    
    if (myBar) {
    	if (bodyType == "HTML") {
    		myBar.enabled("preview");
    	} else {
    		myBar.disabled("preview");
    	}
    }
    
    //\u3010\u516c\u6587\u3011\u6e05\u7a7aoffice\u7684id.\u5148\u4fdd\u5b58Office,\u7136\u540e\u5207\u6362\u5230HTML\uff0ccontent\u8fd9\u4e2aDiv\u4e2d\u4f1a\u4fdd\u5b58OFFICE \u6b63\u6587\u7684ID
    var appName=document.getElementById("appName");
    if(appName && appName.value=='4' && bodyType=='HTML'){
		var contentObj=document.getElementById("content");
		if(contentObj)
		{
			contentObj.value="";
		}
    }
    
    if (confirm(v3x.getMessage("V3XLang.common_confirmChangBodyType"))) {
    	var changePdf = document.getElementById("changePdf");
    	if(changePdf){
	    	if(bodyType == "OfficeWord" || bodyType == "WpsWord"){
	    		changePdf.style.display = "";
	    	}else{
	    		changePdf.style.display = "none";
	    	}
    	}
        showEditor(bodyType, true);
        return true;
    }

    return false;
}

function getA8Top(){
  try {
    var A8TopWindow =  getA8ParentWindow(window);
    if(A8TopWindow){
      return A8TopWindow;
    }else{
      return top;
    }
  }
  catch (e) {
    return top;
  }
}
function getA8ParentWindow(win){
	var currentWin = win;
	for(var i = 0; i < 20; i++){
		if(typeof currentWin.isCtpTop != 'undefined' && currentWin.isCtpTop){
			return currentWin;
		}
		else{
			currentWin = currentWin.parent;
		}
	}
}
function initCkEditor(){
	var t = null;
	if(document.readyState != "complete"){
		t = setTimeout("initCkEditor()",5);
		return;
	}
	if(t!=null){
		clearTimeout(t);
	}
	// for \u516c\u6587\uff0c\u5411\u4e0a\u67e5\u4e24\u5c42\uff0c\u786e\u5b9a\u5f53\u524ddiv\u662f\u5426\u88ab\u9690\u85cf
	var p = document.getElementById('content').parentElement;
	var isHide = p.style.display == 'none';
	isHide = isHide ? isHide :  p.parentElement.style.display == 'none';
	// \u9875\u9762\u5b9a\u4e49\u4e86editorStartupFocus\u53d8\u91cf\uff0c\u5219\u4ee5\u4e4b\u63a7\u5236\u7f16\u8f91\u5668\u662f\u5426\u8bbe\u7f6e\u7126\u70b9
	var f = (typeof(editorStartupFocus) == 'undefined') ? false : editorStartupFocus;
	CKEDITOR.replace('content',{
	  toolbar:oFCKeditor.ToolbarSet,
	  height : '100%',
	  startupFocus : !isHide && f,
	  on : {
	      instanceReady : function( ev ) { 
	          var input = document.getElementById('content');
	          function getTop(e){
	            var offset=e.offsetTop;
	            if(e.offsetParent!=null)offset += getTop(e.offsetParent);
	            return offset;
	          }
	          function resizeEditor(){
	              if(!CKEDITOR.instances['content']) return;
	              if(CKEDITOR.instances['content'].ui.space( 'contents' )==null) return;
	              var height = document.documentElement.clientHeight - getTop(CKEDITOR.instances['content'].ui.space( 'contents' ).$) - 5;
	              height = height<0 ? 0 : height;
	              CKEDITOR.instances['content'].ui.space( 'contents' ).setStyle( 'height', height +'px' );
	              document.getElementById("RTEEditorDiv").style.display="block";
	          }
	          resizeEditor();
	          window.onresize = function(event) {
	              resizeEditor();
	          }
	        // \u4e3a\u4e86\u907f\u514donbeforeunload\u5f39\u51fa\u63d0\u793a\uff0c\u5fc5\u987b\u5bf9a\u4f5c\u7279\u6b8a\u5904\u7406
	        if(v3x && v3x.isMSIE){
				ev.editor.on('dialogShow', 
						function(dialogShowEvent){
							var allHref = dialogShowEvent.data._.element.$.getElementsByTagName('a');
							for (var i = 0; i < allHref.length; i++) {
								var href = allHref[i].getAttribute('href');
								if(href && href.indexOf('void(0)')>-1){
									allHref[i].removeAttribute('href');
								}
							};

				});      
			}                
	      }
	  }
	});		    
}
/**
 * \u663e\u793a\u7f16\u8f91\u5668
 */
function showEditor(flag, isRevertContent) {
	//\u662f\u5426\u8fd8\u539f\u6b63\u6587\uff0c\u9ed8\u8ba4\u4e3atrue
	if(isRevertContent == null||isRevertContent == undefined)
		isRevertContent =  true;

	  // \u4f7f\u7528CkEditor\u8981\u5148\u6e05\u9664\uff0c\u5426\u5219\u65b0\u5efa\u5b9e\u4f8b\u4f1a\u62a5\u9519
	  function destroyCKEditor(){
      if(CKEDITOR.instances['content']){
        CKEDITOR.instances['content'].destroy();
        document.getElementById('content').style.height = '0px';
        document.getElementById("RTEEditorDiv").style.display="none";
      }
	  }
    if (!v3x.useFckEditor) {
      destroyCKEditor(); 
      // \u65b0\u5efa\u516c\u544a\u5207\u6362\u516c\u544a\u683c\u5f0f\u4e3aWord\u65f6\u9700\u8981\u8c03\u6574
      if(flag != 'HTML'){
        document.getElementById('content').style.height = '0px';
        document.getElementById("RTEEditorDiv").style.display="none";
      }
    }   	
    if (flag == 'HTML') {
        removeOfficeDiv(isRevertContent);
    		if(v3x.useFckEditor){
                oFCKeditor.ReplaceTextarea();
    		}else{

    			initCkEditor();
    		}
    }
    else if (flag == 'OfficeWord') {
      if(v3x.useFckEditor) oFCKeditor.remove();

        showOfficeDiv("doc");
    }
    else if (flag == 'OfficeExcel') {
      if(v3x.useFckEditor) oFCKeditor.remove();

        showOfficeDiv("xls");
    }
    else if (flag == 'WpsWord') {
      if(v3x.useFckEditor) oFCKeditor.remove();

        showOfficeDiv("wps");
    }
    else if (flag == 'WpsExcel') {
      if(v3x.useFckEditor) oFCKeditor.remove();

        showOfficeDiv("et");
    }
    else if(flag == 'Pdf'){
      if(v3x.useFckEditor) oFCKeditor.remove();
        showPdfDiv("pdf");
    }
    var bodyTypeObj = document.getElementById("bodyType");
    if (bodyTypeObj) {
    	setContentTypeState(bodyTypeObj.value,flag);
        bodyTypeObj.value = flag;
    }
    //\u516c\u544a\u65b0\u95fb\u9884\u89c8\u5c4f\u853d\uff08\u5982\u679c\u662fWORD\u6216\u8005EXCEL\uff09
    try{
	    var bulBottPre = document.getElementById("bulBottPre").value;
	    if (bulBottPre && bulBottPre=='1' ) {
	    	if(flag == 'HTML'){
	    		myBar.enabled('preview');
	    	}else{
	    		myBar.disabled('preview');
	    	}
	    	//\u5982\u679c\u662fWpsWord\u5c4f\u853d\u8f6cpdf\u6309\u94ae
	    	var changePdf = document.getElementById("changePdf");
	    	var bodytype = document.getElementById("bodyType");
	    	if(changePdf && bodytype && bodytype.value == 'WpsWord'){
	    		changePdf.style.display = "none";
	    	}
	    }
    }catch (e) {
	}
}
function initContentTypeState(){
	try{
		bodyType=document.getElementById("bodyType").value;
		bodyTypeSelector.disabled("menu_bodytype_"+bodyType);					
	}
	catch(e){		
	}	
}

function setContentTypeState(bodyTypeFrom,bodyTypeTo){
	try{
		if(bodyTypeFrom==bodyTypeTo)		{
			bodyTypeSelector.disabled("menu_bodytype_"+bodyTypeTo);			
		}
		else		{
			bodyTypeSelector.disabled("menu_bodytype_"+bodyTypeTo);	
			bodyTypeSelector.enabled("menu_bodytype_"+bodyTypeFrom);		
		}		
	}
	catch(e){		
	}
}

/****************************************/
/************ \u5217\u8868\u9875\u9762\u7684\u7cbe\u786e\u67e5\u627e ***********/
/****************************************/
function showNextCondition(conditionObject) {
	if(!conditionObject)
		return;
    var options = conditionObject.options;
	
    for (var i = 0; i < options.length; i++) {
        var d = document.getElementById(options[i].value + "Div");
        if (d) {
            d.style.display = "none";
        }
    }
if(!document.getElementById(conditionObject.value + "Div")) return;
    document.getElementById(conditionObject.value + "Div").style.display = "block";
}

/**
 * \u5f53\u4f7f\u7528\u5230\u641c\u7d22\u65f6\uff0c\u663e\u793a\u524d\u7aef
 */
function showCondition(conditionValue, textfieldValue, textfield1Value) {
	
    if (!conditionValue) {
        return;
    }
    var conditionObj = document.getElementById("condition")

    selectUtil(conditionObj, conditionValue); //\u9009\u62e9\u6761\u4ef6
    showNextCondition(conditionObj); //\u663e\u793a\u6761\u4ef6\u503c\u533a\ufffd?

    var theDiv = document.getElementById(conditionValue + "Div");

    if (theDiv) {
        var nodes = theDiv.childNodes;

        if (nodes) {
            for (var j = 0; j < nodes.length; j++) {
                var node = nodes.item(j);
                if (node.tagName == "INPUT") {
                    eval("node.value = " + node.name + "Value;")
                }
                else if (node.tagName == "SELECT") {
                    eval("selectUtil(node, " + node.name + "Value)")
                }
            }
        }
    }
}


/**
 * \u6839\u636e\u540e\u7aef\u7684\u503c\uff0c\u5c06\u4e0b\u62c9\u6309\u94ae\u5bf9\u5e94\u7684\u9879\u7f6e\u4e8e\u9009\u4e2d\u72b6\ufffd?
 */
function selectUtil(selectObj, selectedValue) {
    if (!selectObj) {
        return false;
    }

    var ops = selectObj.options;

    for (var i = ops.length - 1; i >= 0; i--) {
        if (ops[i].value == selectedValue) {
            selectObj.selectedIndex = i;
            return true;
        }
    }

    return false;
}

/**
 * \u8c03\u7528\u8be5\u65b9\u6cd5\u4e4b\u524d,\u8bf7\u5148\u628a\u5f53\u524d\u9875\u9762\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u7684\u9009\u62e9\u6846\u547d\u540d\u4e3astartdate\u548cenddate
 * @return {Boolean}
 */
function dateCheck()
{
	var startdate=document.getElementById('startdate').value;
	var enddate=document.getElementById('enddate').value;
	if(compareDate(startdate,enddate)>0)
	{
		window.alert(v3x.getMessage("V3XLang.calendar_endTime_startTime"));
		return false;	
	}
	doSearch();
}
var SearchEnter = {
	submitCount : 0
}
/**
 * \u641c\u7d22\u6309\u94ae\u4e8b\u4ef6
 */
function doSearch() {
    var theForm = document.getElementsByName("searchForm")[0];
    var searchDate = document.getElementById('createDateDiv');
    
    if (theForm) {
    	//FIXME \u9632\u6b62\u5728\u9009\u62e9\u6761\u4ef6\u65f6\u5019\u6309\u4f4f\u56de\u8f66\uff0c\u72c2\u53d1\u8bf7\u6c42\u3002
	    if(SearchEnter.submitCount > 2){
	    	return;
	    }
	    var options = theForm.condition.options;
		
	    for (var i = 0; i < options.length; i++) {
	        if (theForm.condition.value == options[i].value){
				var passCheck = true;
				if('createDate'==theForm.condition.value){
					var searchDateDiv = document.getElementById(options[i].value + "Div");
					//\u52a0\u5165\u5bf9\u641c\u7d22\u65f6\uff0c\u65f6\u95f4\u7684check
				    var seachDateChildNods ;
				    if(searchDateDiv!=null){
				    	seachDateChildNods = searchDateDiv.childNodes;
				    }
				    var timeChildNodes = new Array();
					if(seachDateChildNods!=null){
						seachDateChildNods = searchDate.childNodes;
						for(var j=0;j<seachDateChildNods.length;j++){
							var tempChildNode = seachDateChildNods[j];
							if(tempChildNode.type=="text"){
								timeChildNodes.push(tempChildNode);
							}
						}
					}
					if((timeChildNodes.length>0)&&(timeChildNodes.length<3)){
						var beginTimeStr = timeChildNodes[0].value;
						var beginTimeStrs = beginTimeStr.split("-");
						var beginTimeDate = new Date();
						beginTimeDate.setFullYear(beginTimeStrs[0],beginTimeStrs[1]-1,beginTimeStrs[2]);
						var endTimeStr = timeChildNodes[1].value;
						var endTimeStrs = endTimeStr.split("-");
						var endTimeDate = new Date();
						endTimeDate.setFullYear(endTimeStrs[0],endTimeStrs[1]-1,endTimeStrs[2]);
						if(endTimeDate<beginTimeDate){
							passCheck = false;
						}
					}
				}
				if(passCheck){
					continue;
				}else{
					window.alert(v3x.getMessage("V3XLang.calendar_endTime_startTime"));
					return;
				}
			} 
	
	        var d = document.getElementById(options[i].value + "Div");
	        if (d) {
	            d.innerHTML = "";
	        }
	    }
	    theForm.target = theForm.target || "_self";
	    SearchEnter.submitCount ++;
        theForm.submit();
    }
}

function doSearchEnter(){
	var evt = v3x.getEvent();
    if(evt.keyCode == 13){
    	doSearch();
    }
}

/**
 * \u5f39\u51fa\u7a97\u53e3\u7684\u5173\u95ed\u65f6\u95f4
 * <body onkeypress="listenerKeyESC()">
 */
function listenerKeyESC(){
	var evt = v3x.getEvent();
	if(evt.keyCode == 27){
		window.close();
	}
}

/**
 * \u68c0\u6d4bcheckbox\u662f\u5426\u88ab\u9009\u62e9
 * @return 0 - \u8868\u793a\u9009\u62e9  \u5426\u5219\u8fd4\u56de\u9009\u62e9\u7684\u4e2a\u6570
 */
function validateCheckbox(checkboxName){
	checkboxName = checkboxName || "id";
	var id_checkbox = document.getElementsByName(checkboxName);
    if (!id_checkbox) {
        return 0;
    }

    var selectedCount = 0;
    var len = id_checkbox.length;
    for (var i = 0; i < len; i++) {
        if (id_checkbox[i].checked) {
            selectedCount++;
        }
    }
    
    return selectedCount;
}

/**
 * \u53d6checkbox\u7684\u7b2c\u4e00\u4e2a\u9009\u62e9\u503c
 */
function getCheckboxSingleValue(checkboxName){
	var o = getCheckboxSingleObject(checkboxName);
    
    return o == null ? null : o.value;
}

/**
 * \u53d6checkbox\u7684\u7b2c\u4e00\u4e2a\u9009\u62e9\u5bf9\u8c61
 */
function getCheckboxSingleObject(checkboxName){
	checkboxName = checkboxName || "id";
	var id_checkbox = document.getElementsByName(checkboxName);
    if (!id_checkbox) {
        return 0;
    }

    var selectedCount = 0;
    var len = id_checkbox.length;
    for (var i = 0; i < len; i++) {
        if (id_checkbox[i].checked) {
            return id_checkbox[i];
        }
    }
    
    return null;
}

/*****************************************
 * \u632f\u8361\u56de\u590d
 */
var currentOpinionId = "";

function hiddenReplyDiv(){
	var obj_ = document.getElementById("replyDiv" + currentOpinionId);
	if(obj_){
		obj_.innerHTML = "";
		obj_.style.display = "none";
	}
	fileUploadAttachments.clear();
}
function reply(opinionId, writeMemberId, isUploadAtt, isUploadDoc,isHidden,writeMemberName,affairId,writeMemberId){
//\u6dfb\u52a0\u9644\u8a00\u6216\u56de\u590d\u610f\u89c1\u65f6\u8f93\u5165\u5185\u5bb9\u540e\u518d\u6b21\u70b9\u56de\u590d,\u6b64\u65f6\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c
	var obj_ = document.getElementById("replyDiv" + currentOpinionId);
	if(obj_ && obj_.innerHTML != ""){
		return;
	}
	hiddenReplyDiv();
	opinionId5 = opinionId;
	var uploadAttachmentSpan = document.getElementById("uploadAttachmentSpan");
	if(uploadAttachmentSpan!=null){
		uploadAttachmentSpan.style.display = (isUploadAtt == true ? "" : "none");
	}
	//\u4f1a\u8bae\u91cc\u6ca1\u5173\u8054\u6587\u6863
	var myDocumentSpanObj = document.getElementById("myDocumentSpan");
	if(myDocumentSpanObj){
		myDocumentSpanObj.style.display = (isUploadDoc == true ? "" : "none");
	}
	var obj = document.getElementById("replyDiv" + opinionId);
	if(obj){
		obj.innerHTML = document.getElementById("replyCommentHTML").innerHTML;
		obj.style.display = "";
		var replyObj = document.getElementById("reply-table");
		if(replyObj!=null){
		 	replyObj.style.display='';//\u6253\u5370\u7684\u65f6\u5019\u5c06\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u4e0d\u53ef\u89c1\u4e86\u3002
		}
		var theForm = document.getElementsByName("repform")[0];
		theForm.isHidden.id = "isHidden";
		try{
			theForm.isSendMessage.id = "isSendMessage";
		}
		catch(e){
		}
		if(isHidden){
			 document.getElementById("isHiddenDiv").style.display = "none";
		}
		//\u7126\u70b9\u4e0b\u79fb\u663e\u793a\u51fa\u56de\u590d\u6309\u94ae
		if(theForm.b11) {
			theForm.b11.focus();
		}
		theForm.content.focus();
		theForm.opinionId.value = opinionId;
		if(writeMemberId){
			theForm.memberId.value = writeMemberId;
		}
		// \u81ea\u5df1\u56de\u590d\u81ea\u5df1\u65f6\u8fc7\u6ee4\u81ea\u5df1\u540d\u5b57         affairMemberId.value \u4e8b\u9879\u6240\u5c5e\u4ebaid 	writeMemberId\u88ab\u56de\u590d\u4ebaid
		var affairMemberId = document.getElementById("affairMemberId");
		var sendMessagePeopleSpan = document.getElementById("sendMessagePeopleSpan");
//		if (affairMemberId && affairMemberId.value != writeMemberId) {
		if (affairMemberId) {
			if(writeMemberName){
				var sendMessagePeopleInput  = document.getElementById("pushMessageMemberNames");
				if(sendMessagePeopleInput && currentUserId != writeMemberId){
					sendMessagePeopleInput.value = writeMemberName;
				} 
				if (sendMessagePeopleInput && currentUserId == writeMemberId) {
					theForm.isSendMessage.checked=false;
					sendMessagePeopleSpan.style.display="none";
				}
			}
			if(affairId){
				//\u8bbe\u7f6e\u6d88\u606f\u63a8\u9001\u7684\u9ed8\u8ba4\u503c
				var pushMessageMemberIds = document.getElementById("pushMessageMemberIds");
				if(pushMessageMemberIds){
					pushMessageMemberIds.value = affairId+","+writeMemberId;
				}
				//\u88ab\u56de\u590d\u610f\u89c1\u7684AFFAIRID
				var replyedAffairId = document.getElementById("replyedAffairId");
				if(replyedAffairId){
					replyedAffairId.value = affairId;
				}
			}
		} else {
			if(theForm.isSendMessage)
			    theForm.isSendMessage.checked=false;
			if(sendMessagePeopleSpan)
				sendMessagePeopleSpan.style.display="none";
		}
	}
	currentOpinionId = opinionId;
}

function checkReplyForm(f){
//	f.opinionId.value = currentOpinionId;
	if(checkForm(f)){
		return true;
	}
	
	return false;
}

/**
 * \u5bf9\u6807\u9898\u9ed8\u8ba4\u503c\u7684\u5207\u6362
 * @param isShowBlack \u53bb\u6389\u4e3a\u9ed8\u8ba4\u503c\uff0c\u663e\u793a\u7a7a\u767d\uff0c\u7528\u5728onFocus
 */
function checkDefSubject(obj, isShowBlack) {
	var dv = getDefaultValue(obj);
    if (isShowBlack && obj.value == dv) {
            obj.value = "";
    }
    else if (!obj.value) {
            obj.value = dv;
    }
}

/**
 * \u4eceinput\u4e2d\u8bfb\u53d6\u5c5e\u6027\u4e3adefaultValue\u7684\u503c
 */
function getDefaultValue(obj){
	if(!obj){
		return null;
	}
    var def = obj.attributes.getNamedItem("defaultValue");
    if(!def){
    	def = obj.attributes.getNamedItem("deaultValue"); //\u517c\u5bb9\u4ee5\u524d\u9519\u8bef\u7684\u5199\u6cd5
    }
    
    if(def){
    	return def.nodeValue;
    }
    
    return null;
}

/***********************************************
 * \u5904\u7406\u754c\u9762\u7684\u6309\u94ae\u5207\u6362
 */
function Panel(id, label, onclick) {
    this.id = id;
    this.label = label;
    this.onclick = onclick || "";
}

Panel.prototype.toString = function() {
    //return "<div id='button" + this.id + "' onClick=\"changeLocation('" + this.id + "');" + this.onclick + "\" class=\"sign-button\">" + this.label + "</div>" +
    //       "<div class=\"sign-button-line\"></div>";
    return "<div id='button-L" + this.id + "' class=\"sign-button-L\"></div><div id='button" + this.id + "' onClick=\"changeLocation('" + this.id + "');" + this.onclick + "\" class=\"sign-button-M\">" + this.label + "</div>" +
    		"<div id='button-R" + this.id + "' class=\"sign-button-R\"></div><div class=\"sign-button-line\"></div>";
}

Panel.prototype.toMinString = function(){
	return "<div class=\"sign-min-label\" onclick=\"changeLocation('" + this.id + "');"+this.onclick+"\" title=\"" + this.label + "\">" + this.label + "</div><div class=\"separatorDIV\"></div>"
}

function showPanels(isShowHiddenButton) {
	if(isShowHiddenButton != false){
		document.write('<div id="hiddenPrecessAreaDiv" onclick="hiddenPrecessArea()" title="' + v3x.getMessage("V3XLang.common_hiddenPrecessArea") + '"></div>');
	}
	
    for (var i = 0; i < panels.size(); i++) {
        document.write(panels.get(i).toString());
    }
    document.close();
}

function showMinPanels(){
    for (var i = 0; i < panels.size(); i++) {
        document.write(panels.get(i).toMinString());
    }
    document.close();
	setNoOrResize(true);
}
function setNoOrResize(state){
	try{
    var oNoResize = parent.document.getElementById('detailRightFrame');
    if(oNoResize){
    	oNoResize.noResize = state;
    }else{
    	return;
    }
	}catch(e){}
}
function changeLocation(id) {
	
    for (var i = 0; i < panels.size(); i++) {
        var id_ = panels.get(i).id;
        if (id_ == id) continue;
        document.getElementById('button-L' + id_).className = "sign-button-L";
        document.getElementById('button' + id_).className = "sign-button-M";
        document.getElementById('button-R' + id_).className = "sign-button-R";
        var o = document.getElementById(id_ + "TR");
        if (o) {
            o.style.display = "none";
        }
    }

    var bObj = document.getElementById("button" + id);
    if(bObj){
    	document.getElementById('button-L' + id).className = "sign-button-L-sel";
    	bObj.className = "sign-button-M-sel";
    	document.getElementById('button-R' + id).className = "sign-button-R-sel";
    }
    
    var trObj = document.getElementById(id + "TR");
    if(trObj){
    	trObj.style.display = "";
    }
    setNoOrResize(false);
}

function showPrecessArea(width) {
	try{
		parent.detailMainFrame.contentIframe.SeeyonForm_HideArrow();
	}catch(e){}
	width = width || "32%";
	try{
	    parent.document.getElementById("zy").cols = "*," + width;
	}	
	catch(e){		
	}
	var obj = document.getElementById('signAreaTable');
	if(obj){
	    obj.style.display = "";
	}
    var _signMinDiv = document.getElementById('signMinDiv');
    if(_signMinDiv){
    	_signMinDiv.style.display = "none";
    	_signMinDiv.style.height = "0px";
    }
}

function hiddenPrecessArea() {
	try{
		parent.detailMainFrame.contentIframe.SeeyonForm_HideArrow();
	}catch(e){}	
	
	try{
    	parent.document.getElementById("zy").cols = "*,45";
	}
	catch(e){
	}
    var obj = document.getElementById('signAreaTable');
    if(obj){
    	obj.style.display = "none";
    }
    
    var _signMinDiv = document.getElementById('signMinDiv');
    if(_signMinDiv){
    	_signMinDiv.style.display = "";
    	_signMinDiv.style.height = "100%";
    }
    setNoOrResize(true);
}
/**
 * \u5237\u65b0\u5f53\u524d\u9875\u9762
 */
function refreshIt() {
    location.reload(true);
}

/**
 * \u5237\u65b0\u5f53\u524d\u5de5\u4f5c\u533a
 */
function refreshWorkSpace() {
	var _nowSelectId = getA8Top().reFlesh();
}

/**
 * \u9875\u9762\u56de\u9000
 */
function locationBack() {
    history.back();
}
/**
 * \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210HTML\u4ee3\u7801
 */
function escapeStringToHTML(str, isEscapeSpace){
	if(!str){
		return "";
	}
	
	str = str.replace(/&/g, "&amp;");
	str = str.replace(/</g, "&lt;");
	str = str.replace(/>/g, "&gt;");
	str = str.replace(/\r/g, ""); 
	str = str.replace(/\n/g, "<br/>"); 
	str = str.replace(/\'/g, "&#039;");
	str = str.replace(/"/g, "&#034;");
	
	if(typeof(isEscapeSpace) != 'undefined' && (isEscapeSpace == true || isEscapeSpace == "true")){
		str = str.replace(/ /g, "&nbsp;");
	}
	
	return str;
}

function escapeStringToJavascript(str){
	if(!str){
		return str;
	}
	
	str = str.replace(/\\/g, "\\\\");
	str = str.replace(/\r/g, "");
	str = str.replace(/\n/g, "");
	str = str.replace(/\'/g, "\\\'");
	str = str.replace(/"/g, "\\\"");
	
	return str;
}

/**
 * \u83b7\u53d6QueryString\u53c2\u6570
 */
function getParameter(name1){
	var queryString = document.location.search;
	
	if(queryString){
		queryString = queryString.substring(1);
		
		var params = queryString.split("&");
		
		for(var i = 0; i < params.length; i++) {
			var items = params[i].split("=");
			
			if(name1 == items[0]){
				return items[1];
			}
		}
	}
}

/**
 * \u7ed9\u9009\u62e9\u5217\u8868\u8bbe\u7f6e\u9009\u62e9\u9879
 * @param selectId \u9009\u62e9\u5217\u8868\u7684Id
 * @param value \u9009\u62e9\u7684\u503c
 */
function setSelectValue(selectId, value){
	var object = document.getElementById(selectId);
	if(!object){
		return;
	}
	
	var os = object.options;
	if(!os){
		return;
	}
	
	for(var i = 0; i < os.length; i++){
		var o = os[i];
		if(o.value == value){
			o.selected = true;				
			break;
		}
	}
}

var sxUpConstants = {
	status_0 : "0,*",
	status_1 : "35%,*"
}
var sxDownConstants = {
	status_0 : "*,9",
	status_1 : "35%,*"
}
var sxMiddleConstants = {
	status_0 : "35%,*",
	status_1 : "35%,*"
}
var indexFlag = 0;
function previewFrame(direction){
	if(!direction) return;
	var obj = parent.parent.document.getElementById('sx');
	if(obj == null){
		obj = parent.document.getElementById('sx');;
	}
	
	if(obj == null){
		return;
	}
	
	if(indexFlag > 1){
		indexFlag = 0;
	}
		
	var status = eval("sx" + direction + "Constants.status_" + indexFlag);
	obj.rows = status;
	
	if(direction != "Middle"){
		indexFlag++;
	}
}

function checkImageSize(img){
	if(img.width > 540){ img.width = 540;}
}

/**
 * \u5f97\u5230\u4e0a\u4e0b\u6846\u67b6\u7684\u4e2d\u95f4\u6a2a\u6761
 * @param isShowButton \u662f\u5426\u663e\u793a\u4e2d\u95f4\u7684\u6309\u94ae
 */
function getDetailPageBreak(isShowButton,direction){
	var showButtonFlag = true; 
	if(isShowButton != true && (getA8Top().window.dialogArguments || window.opener)){
		showButtonFlag = false;
	}
	var contentP = "";
	try{
		contentP = v3x == null ? "" : v3x.baseURL + "/common/";
	}catch(e){}
	
	document.write("<table id='pagebreakspare' border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" align=\"center\">");
	document.write("<tr align=\"center\">");
	document.write("<td style='overflow:hidden;' class=\"detail-top\" valign='top'>");
	if(showButtonFlag){
		//document.write("<img src=\"" + contentP + "images/button.preview.up.gif\" border='0' height=\"10\" onclick=\"previewFrame('Up')\" class=\"cursor-hand\">");
		//document.write("<img src=\"" + contentP + "images/button.preview.down.gif\" border='0' height=\"10\" onclick=\"previewFrame('Down')\" class=\"cursor-hand\">");
		
		document.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">");
		document.write("<tr>");
		document.write("<td valign='top'>");
			document.write("<div class='break-up' onclick=\"previewFrame('Up')\"></div>");
		document.write("</td>");
		document.write("<td valign='top'>");
			document.write("<div class='break-down' onclick=\"previewFrame('Down')\"></div>");
		document.write("</td>");
		document.write("</tr>");
		document.write("</table>");
		
	}else{
		document.write("&nbsp;");
	}
	document.write("</td>");
	document.write("</tr>");
	document.write("</table>");
	document.close();
	if(direction == 'Down'){
		previewFrame('Down');
	}else{
		previewFrame('Middle');
	}
	
}

function getLimitLength (text, maxlengh, symbol) {
    return text.getLimitLength(maxlengh, symbol); 
}

function changeMenuTab(clickDiv)
{
  var menuDiv=document.getElementById("menuTabDiv");
  var clickDivStyle=clickDiv.className;
  if(clickDivStyle=="tab-tag-middel-sel"){return;}
  var divs=menuDiv.getElementsByTagName("div");
  var i;
  for(i=0;i<divs.length;i++)
  {    
  	clickDivStyle=divs[i].className;  	
  	if(clickDivStyle.substr(clickDivStyle.length-4)=="-sel")
  	{  		
  		divs[i].className=clickDivStyle.substr(0,clickDivStyle.length-4);
  	}  	    
  }
  for(i=0;i<divs.length;i++)
  {
        if(clickDiv==divs[i])
  	    {
  	      divs[i-1].className=divs[i-1].className+"-sel";
  	      divs[i].className=divs[i].className+"-sel";
  	      divs[i+1].className=divs[i+1].className+"-sel";
  	    }    
  }
  var detailIframe=document.getElementById('detailIframe').contentWindow;
  detailIframe.location.href=clickDiv.getAttribute('url');
}
function setDefaultTab(pos)
{
  var menuDiv=document.getElementById("menuTabDiv");
  var divs=menuDiv.getElementsByTagName("div");
  divs[pos*4].className=divs[pos*4].className+"-sel";
  divs[pos*4+1].className=divs[pos*4+1].className+"-sel";
  divs[pos*4+2].className=divs[pos*4+2].className+"-sel";
  var detailIframe=document.getElementById('detailIframe').contentWindow;
  detailIframe.location.href=divs[pos*4+1].getAttribute('url');
}

function getRadioValue(radioName){
	var radios = document.getElementsByName(radioName);
	if(!radios){
		return null;
	}
	
	for(var i = 0; i < radios.length; i++) {
		if(radios[i].checked){
			return radios[i].value;
		}
	}
	
	return null;
}

var sx_variable = {
	detailFrameName : "",
	title : "", 
	imgSrc : "", 
	count : 0, 
	description: "",
	
	isShow : false
}

/**
 * \u4e0a\u4e0b\u7ed3\u6784\u7684\u9875\u9762\uff0c\u663e\u793a\u4e0b\u9762\u7684\u56fe\u7247\u3001\u603b\u6570\u3001\u63cf\u8ff0
 * 
 * @param detailFrameName \u4e0b\u9762\u9875\u9762\u7684frame\u7684\u540d\u79f0
 * @param title \u663e\u793a\u7684\u6807\u9898 \u8981\u56fd\u9645\u5316\u54e6
 * @param imgSrc \u663e\u793a\u7684\u56fe\u6807\u540d\u79f0\uff0c\u7edf\u4e00\u653e\u5728/common/images/detailBannner\u4e0b\uff0c\u6bd4\u5982\uff1a/common/images/detailBannner/101.gif
 * @param count \u663e\u793a\u7684\u603b\u6570\uff0c\u5982\u679c\u4e3anull\u6216\u8005\u4e3a\u8d1f\u6570\uff0c\u8868\u793a\u4e0d\u663e\u793a\u603b\u6570
 * @param description \u663e\u793a\u7684\u63cf\u8ff0
 */
function showDetailPageBaseInfo(detailFrameName, title, imgSrc, count, description){
	parent.sx_variable.detailFrameName = detailFrameName;
	parent.sx_variable.title = title;
	parent.sx_variable.imgSrc = imgSrc;
	parent.sx_variable.count = count;
	parent.sx_variable.description = description;
	
	parent.doDetailPageBaseInfo();
}

function doDetailPageBaseInfo(){
	if(!sx_variable.detailFrameName){
		return;
	}
	
	var detailDocument = null;
	try{
		detailDocument = eval(sx_variable.detailFrameName)
	}
	catch(e){
	}
	
	if(detailDocument && detailDocument.document.readyState == "complete"){ //\u4e0b\u9762\u7684\u9875\u9762\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u4e86
		var flag = eval("detailDocument.detailPageBaseInfoFlag");
		if(!flag){
			detailDocument.location.href = v3x.baseURL + "/common/detail.jsp";
			window.setTimeout("doDetailPageBaseInfo()", 500);
			return;
		}
		
		detailDocument.document.getElementById("titlePlace").innerHTML = sx_variable.title;
//		//icon\u5750\u6807
//		if(typeof(sx_variable.imgSrc) == 'object'){
//	        var y = parseInt(sx_variable.imgSrc[0],10)-1;
//	        var x = parseInt(sx_variable.imgSrc[1],10)-1;
//			detailDocument.document.getElementById("imgDiv").innerHTML="<img id=\"img\" alt=\"\" src=\""+v3x.baseURL+"/common/images/space.gif\" class=\"detail-images\" style=\" background-position:-"+ (x*160) +' -' + (y*70) +"\">";
//		}
//		else{
//			detailDocument.document.getElementById("imgDiv").innerHTML="<img id=\"img\" alt=\"\" src=\""+v3x.baseURL + sx_variable.imgSrc+"\" height=\"70\" width=\"160\">";
//		}
		
		if(sx_variable.count != null && sx_variable.count >= 0){
			detailDocument.document.getElementById("countPlace").innerHTML = v3x.getMessage("V3XLang.common_detailPage_count_label", "<span class='countNumber'>" + sx_variable.count + "</span>");
		}
		
		detailDocument.document.getElementById("descriptionPlace").innerHTML = sx_variable.description || "";
		
		detailDocument.document.getElementById("allDiv").style.display = "";
	}
	else{
		window.setTimeout("doDetailPageBaseInfo()", 500);
	}
}

function reloadDetailPageBaseInfo(){
	try{
		parent.doDetailPageBaseInfo();
	}
	catch(e){}
}

/******************************************  \u9875\u7b7e\u5207\u6362  *************************************************/
function changeTabUnSelected(id){
	if(id){
		document.getElementById("l-" + id).className = "tab-tag-left";
		document.getElementById("m-" + id).className = "tab-tag-middel cursor-hand";
		document.getElementById("r-" + id).className = "tab-tag-right";
	}
}

function changeTabSelected(id){
	if(id){
		document.getElementById("l-" + id).className = "tab-tag-left-sel";
		document.getElementById("m-" + id).className = "tab-tag-middel-sel";
		document.getElementById("r-" + id).className = "tab-tag-right-sel";
	}
}


/*************************************** \u5f52\u6863 ******************************************************
 * appName:\u5e94\u7528 \u679a\u4e3ekey; 
 * ids:\u8981\u5f52\u6863\u7684\u6e90\u6570\u636eid\u4e32\uff0c\u4ee5\u9017\u53f7\u5206\u5272          \u5982 12345,98754
 * atts\uff1a\u9017\u53f7\u5206\u5272\u7684\u662f\u5426\u6709\u9644\u4ef6\u6807\u8bb0\u4e32\uff0c\u548cids\u987a\u5e8f\u4e00\u81f4\uff0c\u9ed8\u8ba4false     \u5982  true,false
 * validAcl: \u662f\u5426\u9a8c\u8bc1\u5199\u5165\u6743\u9650\uff08\u4e00\u822c\u7ba1\u7406\u5458\u8c03\u7528\u8fdb\u884c\u9884\u5f52\u6863\uff09\uff0ctrue\u6216false\uff0c\u9ed8\u8ba4true\uff08\u9a8c\u8bc1\uff09
 * type: \u5f52\u6863\u7c7b\u578b\u3002\u6682\u65f6\u516c\u6587\u4f7f\u7528\uff0c\u7528\u6765\u533a\u522b\u662f\u90e8\u95e8\u5f52\u6863\uff0c\u8fd8\u662f\u516c\u6587\u5f52\u6863\uff0c\u8fd8\u662f\u6a21\u677f\u9884\u5f52\u6863
 */
 var newIdes;
function pigeonhole(appName, ids, atts, validAcl,type){
	newIdes=ids;
	if(typeof(type) == 'undefined') type = "";//\u6ca1\u6709\u4f20\u9012\u8fd9\u4e2a\u53c2\u6570\u7684\u65f6\u5019\u8bbe\u7f6e\u4e3a\u7a7a\uff0c\u5426\u5219\u5411\u540e\u53f0\u4f20\u9012\u7684\u53c2\u6570\u4e3aundefined
	var returnval = v3x.openWindow({
		url : v3x.baseURL + "/doc.do?method=docPigeonhole&appName=" + appName + "&atts=" + atts + "&validAcl=" + validAcl+"&pigeonholeType="+type,
		width : "500",
		height : "500",
		resizable : "true",
		scrollbars : "true"			
	});

	if (returnval == undefined)
	 	returnval = "cancel";
	return returnval;
}

function projectPigeonhole(appName, ids, projectId, atts) {
	var returnval = v3x.openWindow({
		url : v3x.baseURL + "/doc.do?method=docTreeProjectIframe&appName=" + appName + "&ids=" + ids + "&projectId=" + projectId + "&atts=" + atts,
		width : "500",
		height : "500",
		resizable : "true",
		scrollbars : "true"			
	});

	if (returnval == undefined)
	 	returnval = "cancel";
	 	
	return returnval;
}
function  isPhoneNumber(element){
var value = element.value;
var inputName = element.getAttribute("inputName");
var cellphone=/^([\d-]*)$/;
if(!cellphone.test(value)){
writeValidateInfo(element, v3x.getMessage("V3XLang.formValidate_isNumber", inputName));
return false;
}
return true;
}
/*
*\u7efc\u5408\u529e\u516c\u7533\u8bf7\u6570\u91cf\u4e0e\u53ef\u7533\u8bf7\u6570\u91cf\u7684\u5224\u65ad
*avacountValue\uff1a\u53ef\u7533\u8bf7\u6570\u91cf
*/
function Avacount(element){
    var value = element.value;
	var avacountValue=document.getElementById("Avacount").value;
	if(parseInt(value)>parseInt(avacountValue)){
       alertAvacount();
	   return false;
	}
	return true;		
}
/**
 * \u5c06\u6eda\u52a8\u6761\u5b9a\u4f4d\u5230\u5de6\u3001\u4e0a
 * 
 */
function setScrollPosition (x,y,id){
	var oElement = (id!=null)?document.getElementById(id):document.body;
	oElement.scrollLeft = x;
	oElement.scrollTop = y;
}
/**
 * \u9650\u5236fram\u62d6\u52a8\u5bbd\u5ea6
 * width:\u5bbd\u5ea6
 * layoutId\u7236\u7ea7frameset id
 * minMax\u6700\u5927\u8fd8\u662f\u6700\u5c0f
 * direction\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9
 * macj--09--05--06
 */
function resizeBody(width,layoutId,minMax,direction){
	try{
		minMax = (minMax=='min')?'min':'max';
		direction = (direction=='left')?'left':'right';
		var obj = parent.document.getElementById(layoutId);
		if(obj==null){
		    obj = parent.parent.document.getElementById(layoutId);
		}
		if(minMax=='max'){
		  if(document.body.clientWidth>width) {
		  	if(direction=='left'){
		  		obj.cols=""+width+",*";
		  	}else{
		  		obj.cols="*,"+width+"";
		  	}
		  	
		  }
		}else{
		  if(document.body.clientWidth<width){
		  	if(direction=='left'){
		  		obj.cols=""+width+",*";
		  	}else{
		  		obj.cols="*,"+width+"";
		  	}
		  }
		}
	}catch(e){
		
	}
}
/**
 * \u9650\u5236frame\u62d6\u52a8\u5bbd\u5ea6
 * width:\u5bbd\u5ea6
 * layoutId\u7236\u7ea7frameset id
 * end\u8c03\u6574\u540e\u767e\u5206\u6bd4
 */
function resizeRightBody(width,layoutId,end){
	try{
		var obj = parent.document.getElementById(layoutId);
		if(obj==null){
		    obj = parent.parent.document.getElementById(layoutId);
		}
		if(document.body.clientWidth<width){
	  		obj.cols="*,"+end+"";
		}
	}catch(e){
		
	}
}
/**
 * \u65b0\u5efa\uff0c\u4fee\u6539\u53d6\u6d88\u6309\u94ae\u8fd4\u56de\u516c\u7528\u51fd\u6570
 * \u53c2\u6570\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u8fd4\u56de\u8bf4\u660e\u9875\u9762
 * cancelOk({'page':'edit','hidden':['hideObj'],'enable':['itemName','commonOperation']})
 * page:\u662f\u65b0\u5efa\u8fd8\u662f\u4fee\u6539,\u4e0d\u80fd\u4e3a\u7a7a,\u53d6\u503c'new','edit'
 * hidden:\u9690\u85cf\u7684\u63a7\u4ef6id\u6570\u7ec4.\u5982\u679cpage\u4e3anew(\u65b0\u5efa),hidden\u548cenable\u65e0\u4f5c\u7528
 * enable:\u53ef\u7528\u7684\u63a7\u4ef6id\u6570\u7ec4.\u5982\u679cpage\u4e3anew(\u65b0\u5efa),hidden\u548cenable\u65e0\u4f5c\u7528
 * macj--09-05-07
 * */
function cancelOk(){
	try{
		var json = arguments[0];//\u4f20\u5165\u7684json\u683c\u5f0f\u53c2\u6570
		if(json!=null){//\u4e0d\u4e3a\u7a7a
			if(json.page!=null&&json.page=='new'){
				window.location.href=v3x.baseURL + "/common/detail.jsp";
			}else if(json.page!=null&&json.page=='edit'){
				var oForms = document.forms;//\u9875\u9762form
				for(var i=0;i<oForms.length;i++)
				{//\u5faa\u73afform   
					for(var j=0;j<oForms[i].length;j++){//\u5faa\u73afform\u5143\u7d20
						if(json.enable!=null){//\u662f\u5426\u6709\u53ef\u7528id,\u6709\u5faa\u73af\uff0c\u8df3\u51fa
							for(var t = 0;t<json.enable.length;t++){
								if(oForms[i][j].id==json.enable[t]){
									break;
								}else{
									oForms[i][j].disabled=true;//\u5176\u4ed6\u4e0d\u53ef\u7528
								}			
							}
						}else{
							oForms[i][j].disabled=true;
						}
					}   
				} 
				if(json.hidden!=null){//\u9690\u85cfid
					for(var g = 0;g<json.hidden.length;g++){
						document.getElementById(json.hidden[g]).style.display="none";  
					}
				}
			}else{
				window.close();
			}
		}else{//json\u4e3a\u7a7a\u8df3\u8f6c\u5230\u8bf4\u660e\u9875\u9762
			window.location.href=v3x.baseURL + "/common/detail.jsp";
		}
	}catch(e){
		
	}
}

/**
 * \u663e\u793a\u4eba\u5458\u4fe1\u606f
 */
function showV3XMemberCard(memberId,targetWindowParam){
	 var requestCaller = new XMLHttpRequestCaller(this, "ajaxColManager", "checkLevelScope", false);
	requestCaller.addParameter(1, "Long", memberId);
	var rs = requestCaller.serviceRequest();
	if(rs=="N"){
		alert(v3x.getMessage("V3XLang.alert_cannot_visitmembercard"));
		return;
	} 
	
		var member_view_win = new MxtWindow({
	        id: 'member_view_win',
	        title: '',
	        url: getBaseURL()+"/organization/peopleCard.do?method=showPeoPleCard&type=withbutton&memberId=" + memberId,
	        width: 500,
	        height: 450,
			type:'window',
            targetWindow: targetWindowParam==undefined ? getA8Top() : targetWindowParam, 
            isDrag:true,
			buttons: [{
            text: "\u5173\u95ed",
            handler: function () {
                member_view_win.close();
            }
        }]
		});

}
/**
 * \u663e\u793a\u4eba\u5458\u4fe1\u606f
 */
function showV3XMemberCardWithOutButton(memberId,targetWindowParam){
	 var requestCaller = new XMLHttpRequestCaller(this, "ajaxColManager", "checkLevelScope", false);
	requestCaller.addParameter(1, "Long", memberId);
	var rs = requestCaller.serviceRequest();
	if(rs=="N"){
		alert(v3x.getMessage("V3XLang.alert_cannot_visitmembercard"));
		return;
	} 
	
		var member_view_win = new MxtWindow({
	        id: 'member_view_win',
	        title: '',
	        url: getBaseURL()+"/organization/peopleCard.do?method=showPeoPleCard&type=withoutbutton&memberId=" + memberId,
	        width: 500,
	        height: 450,
			type:'window',
            targetWindow: targetWindowParam==undefined ? getA8Top() : targetWindowParam, 
            isDrag:true,
			buttons: [{
            text: "\u5173\u95ed",
            handler: function () {
                member_view_win.close();
            }
        }]
		});

}
/**
*ajax\u5224\u65ad\u67d0\u7528\u6237\u662f\u5426\u6709\u5f85\u53d1\u9001\u548c\u5f85\u7b7e\u6536\u7684\u4e8b\u9879 true(\u6709\u5f85\u529e\u4e8b\u9879) false (\u65e0\u5f85\u529e\u4e8b\u9879)
*userId :\u8981\u5220\u9664\u7684\u516c\u6587\u6536\u53d1\u5458\u7684ID
*username : a.\u6536\u53d1\u5458\u540d\u5b57  b.\u5f53username\u4e3a\u7a7a\u7684\u65f6\u5019\u8868\u793a\u6ca1\u6709\u6307\u5b9a\u7684\u7528\u6237\u540d\uff0c\u5220\u9664\u5168\u90e8\uff0c\u7528\u65b0\u7684\u63d0\u793a\u8bed
*/
function ajaxCheckAccountExchangePendingAffair(userId,userName){
	try {
		var requestCaller = new XMLHttpRequestCaller(this, "ajaxEdocExchangeManager", "checkEdocExchangeHasPendingAffair", false);
		requestCaller.addParameter(1, "Long", userId);
		var rs = requestCaller.serviceRequest();
		if(rs!="0"){
			
			if(userName!=''){
				//{0}\u5c1a\u6709\u5f85\u53d1\u9001\u6216\u5f85\u7b7e\u6536\u516c\u6587\u672a\u5904\u7406\uff0c\u8bf7\u5148\u5904\u7406.
				alert(v3x.getMessage("MainLang.edoc_alert_hasExchangePendingAffair", userName));
			}else{
				//\u6709\u5f85\u53d1\u9001\u6216\u5f85\u7b7e\u6536\u516c\u6587\u672a\u5904\u7406\uff0c\u4e0d\u80fd\u53d6\u6d88\u6240\u6709\u7684\u516c\u6587\u6536\u53d1\u5458\uff0c\u8bf7\u5148\u5904\u7406.
				alert(v3x.getMessage("MainLang.edoc_alert_notdelteAllExchanger"));
			}
			return true;
		}
		return false;
	}
	catch (ex1) {
		alert("Exception : " + ex1);
		return false;
	}	
}

// \u5224\u65ad\u5f53\u524d\u7a97\u53e3\u662f\u5426\u662f\u4ece\u7cbe\u7075\u6253\u5f00
function isOpenFromGenius(){
    var fromGenius = false;
    try{
        fromGenius = getA8Top().location.href.indexOf('a8genius.do')>-1;
    }catch(e){alert(e);}	
    return fromGenius;
}
//ipad\u7a97\u53e3\u9ad8\u5ea6\u8fc7\u9ad8
if(navigator.userAgent.indexOf('iPad') != -1){
	window.addEventListener('load', function(){
		getA8Top().document.body.style.height= "690px";
	});
}
//\u8bbe\u7f6eff\u4e0bgrid\u6ca1\u6709\u6eda\u52a8\u6761
function setFFGrid(htmlID,dragable){
	//ipad\u9690\u85cf\u4e0a\u4e0b\u7ed3\u6784\u4e0b\u90e8
	if(htmlID == '' || dragable == false){return;}
	if(document.all){
		window.attachEvent('onload', function(){mxtgrid(htmlID);});
		window.attachEvent("onresize",function(){resizeGrid(htmlID,dragable);});
	}else{
		mxtgrid(htmlID);
		window.addEventListener("resize",function(){resizeGrid(htmlID,dragable);},false);
	}
}
function mxtgrid(id){
	try{
    var g = {
        id: '',
        srollLeft: 0,//\u5b58\u50a8\u62d6\u52a8\u6eda\u52a8\u6761\u5de6\u4fa7\u8ddd\u79bb
        _srollLeft: 0,
        dragLeft: 0,//\u5b58\u50a8\u62d6\u52a8\u6eda\u52a8\u6761\u5de6\u4fa7\u8ddd\u79bb
        xStart: 0,
        xEnd: 0,
        eStart: 0,//\u9f20\u6807\u5f00\u59cb\u62d6\u52a8
        oMove: null,//\u62d6\u52a8\u5bf9\u8c61
        iIndex: 0,
        _drag: 0,
        stopDrag: false,
        dragFlag: false,//\u9f20\u6807\u5f00\u59cb\u62d6\u52a8
        scroll: function(){//\u62d6\u52a8\u6eda\u52a8\u6761\u8bbe\u7f6e\u5185\u5bb9\u533a\u548c\u8868\u5934\u4e00\u76f4
            g.hDiv.scrollLeft = g.bDiv.scrollLeft;
        },
        setPosition: function(){//\u62d6\u52a8\u6eda\u52a8\u6761\u8bbe\u7f6e\u62d6\u52a8\u533a\u57df\u548c\u8868\u5934\u4e00\u76f4
            var hscrollLeft = parseInt(g.hDiv.scrollLeft);//\u8868\u5934\u5de6\u4fa7\u8ddd\u79bb
            var cdleft = g.srollLeft - hscrollLeft;//\u6bcf\u6b21\u79fb\u52a8\u8ddd\u79bb
            g.cDrag.style.display = 'none';
            var splits = g.cDrag.childNodes;
            for (var i = 0; i < splits.length; i++) {
                var objTemp = splits[i];
                if (typeof objTemp == 'object' && objTemp.nodeType != 3) {//ff google\u6d4f\u89c8\u5668\u7a7a\u683c\u7b97\u4f5c\u8282\u70b9\uff0c\u8fc7\u6ee4\u6587\u5b57\u8282\u70b9
                    var _l = parseInt(objTemp.style.left) + cdleft;
                    objTemp.style.left = _l + "px";
                }
                
            }
            g.srollLeft = hscrollLeft;
            g.cDrag.style.display = '';
        },
        setDragPosition: function(){//\u62d6\u52a8\u5206\u5272\u6761\u8bbe\u7f6e\u5206\u9694\u6761\u4f4d\u7f6e
            var hscrollLeft = parseInt(g.hDiv.scrollLeft);//\u8868\u5934\u5de6\u4fa7\u8ddd\u79bb
            var cdleft = g.srollLeft - hscrollLeft;//\u6bcf\u6b21\u79fb\u52a8\u8ddd\u79bb
            g.cDrag.style.display = 'none';
            var splits = g.cDrag.childNodes;
            for (var i = 0; i < splits.length; i++) {
                var objTemp = splits[i];
                if (typeof objTemp == 'object' && objTemp.nodeType != 3) {//ff google\u6d4f\u89c8\u5668\u7a7a\u683c\u7b97\u4f5c\u8282\u70b9\uff0c\u8fc7\u6ee4\u6587\u5b57\u8282\u70b9
                    var sss = parseInt(objTemp.style.left) + cdleft;
                    objTemp.style.left = sss + "px";
                }
                
            }
            g.srollLeft = hscrollLeft;
            g.cDrag.style.display = '';
        },
        attEvt: function(){
            var splits = g.cDrag.childNodes;
            for (var i = 0; i < splits.length; i++) {
                var objTemp = splits[i];
                if (typeof objTemp == 'object' && objTemp.nodeType != 3) {//ff google\u6d4f\u89c8\u5668\u7a7a\u683c\u7b97\u4f5c\u8282\u70b9\uff0c\u8fc7\u6ee4\u6587\u5b57\u8282\u70b9
                    objTemp.onmousedown = g.dragStart;//\u7ed1\u5b9a
                }
            }
        },
        getIndex: function(){
            if (g.oMove != null && g.cDrag != null) {
                var splits = g.cDrag.childNodes;
                for (var i = 0; i < splits.length; i++) {
                    if (splits[i] == g.oMove) {
                        g.iIndex = i;
                    }
                }
            }
        },
        dragStart: function(){
            g.oMove = this;
            g.moveOrigintLeft = parseInt(g.oMove.style.left);
            g.getIndex();
            document.onmousedown = g.mousedown;
            document.onmousemove = g.mousemove;
            document.onmouseup = g.mouseup;
            document.onselectstart = function(){
                return false;
            };
            document.onselect = function(){
                document.selection.empty()
            };
            
        },
        mousedown: function(obj){
        	g.bDiv.style.overflowY="auto";
        	g.bDiv.style.overflowX="auto";
            g.dragFlag = true;
            var e = g.getEvent();
            g.eStart = g.xStart = document.all ? e.x : e.pageX;
            document.body.style.cursor = "col-resize";
            
        },
        mousemove: function(obj){
            if (!g.dragFlag) {
                return;
            }
            var e = g.getEvent();
            var x = document.all ? e.x : e.pageX;
            var m = x - g.eStart;
            var _pren = g.oMove.previousSibling;
            
            var _d = parseInt(g.oMove.style.left) + m;
            //bug\u62d6\u52a8\u9f20\u6807\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\u5916\u91ca\u653e\u9f20\u6807
            if(_d>g.clientWidth || _d<50){
            	g.xEnd = g.eStart;
            	g.oMove.style.left = g.moveOrigintLeft + "px"; 
                document.body.style.cursor = "default";
                
                g.dragFlag = false;
                g.stopDrag = false;
                g.oMove = null;
                
                document.onmousedown = null;
                document.onmousemove = null;
                document.onmouseup = null;
                document.onselectstart = null;
                document.onselect = null;
            }else{
	        	if (_pren != null) {
	        		if (_d > (parseInt(_pren.style.left) + 50)) {
	        			g.oMove.style.left = _d + "px";
	        			g.eStart = x;
	        		}else {
	        			g.stopDrag = true;
	        		}
	        	}else {
	        		if (_d > 50) {
	        			g.oMove.style.left = _d + "px";
	        			g.eStart = x;
	        		}else {
	        			g.stopDrag = true;
	        		}
	        	}
            }
        },
        mouseup: function(obj){
            if (!g.dragFlag) {
                return;
            }
            var e = g.getEvent();
            g.xEnd = document.all ? e.x : e.pageX;
            if (g.stopDrag) {
                g.xEnd = g.eStart;
            }
            g.setDragPosition();
            g.setHeadWidth();
            g.setListWidth();
            if(g._drag<0 && g.hDiv.scrollLeft==0){
            	g.bDiv.scrollLeft = 0;
            }else{
            	g.hDiv.scrollLeft = g.bDiv.scrollLeft;
            }
            g.setPosition();
            
            document.body.style.cursor = "default";
            
            g.dragFlag = false;
            g.stopDrag = false;
            g.oMove = null;
            
            document.onmousedown = null;
            document.onmousemove = null;
            document.onmouseup = null;
            document.onselectstart = null;
            document.onselect = null;
            
            
            if (!document.all) {
                //document.getElementById('sd').focus();
                //g.htable_s.focus();//firefox\u5931\u53bb\u62d6\u52a8\u7684\u7126\u70b9\uff0c\u8981\u4e0d\u7136\u4e0d\u80fd\u8fde\u7eed\u62d6\u52a8!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            }
            
        },
        setHeadWidth: function(){
            var _th = g.oHead.childNodes[g.iIndex];
            var _o = _th.childNodes[0];
            var _l = parseInt(_o.style.width) + g._drag;
            _o.style.width = _l + "px";
            _th.setAttribute('width', _l);
            g.globalWidth = g.bTable.clientWidth;
            g.hTable.setAttribute('width', g.globalWidth + g._drag);
            if(g.noBody == true){
            	g.bDiv.innerHTML = "<div style='width:"+(g.holeWidth + g._drag)+"px'>&nbsp;</div>"
            }
        },
        setListWidth: function(){
            var _os = g.oBody.childNodes;
            for (var i = 0; i < _os.length; i++) {
                var _td = _os[i].childNodes[g.iIndex];
                var _o = _td.childNodes[0]
                var _l = parseInt(_o.style.width) + g._drag;
                _o.style.width = _l + "px";
                _td.setAttribute('width', _l);
            }
            g.bTable.setAttribute('width', g.globalWidth + g._drag);
        },
        setDragPosition: function(){
            g._srollLeft = parseInt(g.hDiv.scrollLeft);
            g._drag = g.xEnd - g.xStart;
            var splits = g.cDrag.childNodes;
            for (var i = (g.iIndex + 1); i < splits.length; i++) {
                var objTemp = splits[i];
                if (typeof objTemp == 'object' && objTemp.nodeType != 3) {//ff google\u6d4f\u89c8\u5668\u7a7a\u683c\u7b97\u4f5c\u8282\u70b9\uff0c\u8fc7\u6ee4\u6587\u5b57\u8282\u70b9
                    var _l = parseInt(objTemp.style.left) + g._drag;
                    objTemp.style.left = _l + "px";
                }
                
            }
        },
        getEvent: function(){
            if (document.all) {
                return window.event;
            }
            func = g.getEvent.caller;
            while (func != null) {
                var arg0 = func.arguments[0];
                if (arg0) {
                    if ((arg0.constructor == Event || arg0.constructor == MouseEvent) || (typeof(arg0) == "object" && arg0.preventDefault && arg0.stopPropagation)) {
                        return arg0;
                    }
                }
                func = func.caller;
            }
            return null;
        },
        removeTextNode: function(obj){
            var c = obj.childNodes;
            for (var i = 0; i < c.length; ++i) {
				var o = c[i];
                if (o.nodeType != 1) {
                    o.parentNode.removeChild(o);
                }
            }
        },
         aa:function(){
         alert(1)
      		},
		setWidth:function(){
        	var _wA = new ArrayList();
			var c = g.oHead.childNodes;
			var sW = g.subHeight==0 ? Math.floor(g.clientWidth-c.length*12-2) :  Math.floor(g.clientWidth-c.length*12-20);//\u603b\u5bbd\u5ea6//table\u5e03\u5c40\u8bbe\u7f6e,\u62d6\u52a8\u4f1a\u628a\u5916\u5c42table\u6491\u5f00\uff0c\u8bbe\u7f6e\u5bbd\u5ea6
			
			var _dragHeight = 27;
			//var _dragHeight = g.clientHeight-35;
			//var dd = Math.floor(g.bTable.clientHeight);
			//if(dd<g.clientHeight){
			//	_dragHeight = dd+29;
			//}
			g.cDrag.style.display='none';
			var _left = 0;//\u62d6\u52a8div left\u503c
			var holeWidth = 0;
			for (var i = 0; i < c.length; ++i) {
				var o = c[i];
				var o_div = o.childNodes[0];
				var _d = g.cDrag.childNodes[i];
				var _width = o.getAttribute('width');
				if(_width==null || _width==undefined || _width==''){
					_width = "5%";
				}
				var _w;
				if(_width.indexOf('%')!=-1){
					_w = Math.floor(sW*(parseInt(_width))/100);
				}else{
					_w = Math.floor(_width);
				}
				
				//0 2 3 5 7 
				//0 1 2 3 4
				
				_left+=_w+10;//padding\uff1a10px\uff0c\u8fb9\u68461px
				_wA.add(_w);
				holeWidth+=_w;
				o.setAttribute('width','')
				o_div.style.width=_w+"px";
				
				o.onmouseover=function(){
					if(this.className!="sorted") this.className="thOver";
				}
				o.onmouseout=function(){
				if(this.className!="sorted") this.className="";
				}
				//OA-27643 \u4f1a\u8bae\u7ba1\u7406-\u4f1a\u8bae\u8d44\u6e90-\u4f1a\u8bae\u5ba4\u767b\u8bb0\u9875\u9762\uff0c\u6539\u53d8\u5217\u5b57\u6bb5\u5bbd\u5ea6\u540e\u4e0d\u80fd\u4fee\u6539\u56de\u6765
				_d.style.left = (_left)+"px";
				_d.style.height = _dragHeight+'px';
				
			}
			g.holeWidth = holeWidth+c.length*12+2;
			g.cDrag.style.display='';
			var b = g.oBody.childNodes;
			if(b.length!=0){
				for (var j = 0; j < b.length; ++j) {
					var a = b[j].childNodes;
					for (var n = 0; n < a.length; ++n) {
						var f = a[n];
						o.onmouseover=function(){
							 this.parentNode.className="thOver";
						}
						f.childNodes[0].style.width=_wA.get(n)+"px";	
						//ie7\u4e0btd\u5bbd\u5ea6\u4e0d\u80fd\u81ea\u52a8\u6536\u7f29
						if(v3x.isMSIE7 && !v3x.isMSIE8 &&!v3x.isMSIE9){
							f.setAttribute('width',(_wA.get(n)+10));
						}
					}
				}
			}else{
				//\u5982\u679c\u5217\u8868\u4e3a\u7a7a\u4ea7\u751f\u4e00\u4e2adiv\u6491\u5f00bDiv\uff0c\u62d6\u52a8\u663e\u793a\u9690\u85cf\u7684\u5217
				g.noBody = true;
				g.bDiv.innerHTML = "<div style='width:"+g.holeWidth+"px'>&nbsp;</div>"
			}
		},
		setTitle:function(){
			var c = g.oHead.childNodes;
			for (var i = 0; i < c.length; ++i) {
				var o = c[i];
				var o_div = o.childNodes[0];
				if(o_div){
					var titleStr = o_div.innerHTML.toUpperCase();
					if(titleStr.indexOf('<INPUT')!=-1 || titleStr.indexOf('<IMG')!=-1 || titleStr.indexOf('<FONT')!=-1 || titleStr.indexOf('<SPAN')!=-1){
						titleStr = '';
					}
					if(titleStr == '&nbsp;')titleStr='';
					o_div.setAttribute("title",titleStr);
				}
			}	
		}
        
    }
    g.id = id;
    g.layoutdiv = document.getElementById('scrollListDiv');
    if(g.layoutdiv == null){
    	g.layoutdiv = document.body;
    }else{
    	g.layoutdiv.style.overflow="hidden";
    }
    g.clientWidth = parseInt(g.layoutdiv.clientWidth);
    g.clientHeight = parseInt(g.layoutdiv.clientHeight);
    if(g.clientHeight<=0 || g.clientWidth<=0) {
    	//\u5982\u679c\u9875\u9762\u52a0\u8f7d\u7f13\u6162\uff0c\u8ba1\u7b97\u51fa\u6765\u7684\u9ad8\u5bbd\u4e0d\u8db3\u4ee5\u521d\u59cb\u5316\u9875\u9762
    	setTimeout(function(){mxtgrid(g.id)},100);
    }    
    
    g.mxtgrid = document.getElementById('mxtgrid_'+id);
    g.mxtgrid.style.display="none";
    
    g.hTable = document.getElementById('hTable' + id);
    g.bTable = document.getElementById('bTable' + id);
    
    g.bDiv = document.getElementById('bDiv' + id);//body
    g.hDiv = document.getElementById('hDiv' + id);//head
    g.cDrag = document.getElementById('cDrag' + id);//drag
    g.oHead = document.getElementById('headID' + id);
    g.oBody = document.getElementById('bodyID' + id);
    g.subHeight = parseInt(g.mxtgrid.getAttribute('subHeight'));//\u56fa\u5b9a\u9ad8\u5ea6\u9700\u8981\u51cf\u53bb\u7684\u9ad8\u5ea6(\u4e00\u822c\u662f\u53bb\u6389toolbar\u7684\u9ad8\u5ea6):\u4e3atable\u5e03\u5c40\u8bbe\u7f6e
    if(g.subHeight!=0){g.mxtgrid.style.width = g.clientWidth+"px";}//table\u5e03\u5c40\u8bbe\u7f6e,\u62d6\u52a8\u4f1a\u628a\u5916\u5c42table\u6491\u5f00\uff0c\u8bbe\u7f6e\u5bbd\u5ea6
    if(g.clientHeight-56-g.subHeight <= 0) {//56\u662f\u5934\u90e8\u548c\u7ffb\u9875\u9ad8\u5ea6
    	return;
    }
    var isIe6 = v3x.isMSIE6 && !v3x.isMSIE7 && !v3x.isMSIE8 &&!v3x.isMSIE9;
    if((g.oBody.childNodes.length*28+56)>g.clientHeight){//\u6709\u6eda\u52a8\u6761,\u5bbd\u5ea6\u51cf\u53bb\u5782\u76f4\u6eda\u52a8\u6761\u7684\u5bbd\u5ea6
    	g.clientWidth = g.clientWidth-17;
    }   
    g.bDivHeight = g.clientHeight-60-g.subHeight;
    g.bDiv.style.height = g.bDivHeight+'px';
    //ie6
    if(isIe6){
    	g.layoutdivParent = g.layoutdiv.parentNode;
    	g.bDiv.style.height = (g.bDivHeight-parseInt(g.layoutdivParent.currentStyle.paddingTop))+'px';
      g.bDiv.style.width = g.clientWidth+"px"
      g.hDiv.style.width = g.clientWidth+"px"
    }
	//if(!document.all){
		//\u975eie\u6d4f\u89c8\u5668\u628a\u6362\u884c\u5f53\u505a\u4e00\u4e2a\u5bf9\u8c61(\u6587\u672c\u5bf9\u8c61)\uff0c\u5254\u9664\u6587\u672c\u5bf9\u8c61
		g.removeTextNode(g.cDrag);
		g.removeTextNode(g.oHead);
		g.removeTextNode(g.oBody);
		var ss = g.oBody.childNodes;
	    for (var i = 0; i < ss.length; ++i) {
			g.removeTextNode(ss[i]);
	    }
	//}
	g.setTitle();
	g.setWidth();
    g.attEvt();
    g.bDiv.onscroll = function(){
        g.scroll();
        g.setPosition();
    }
    //ie7\u4e0b\u9ed8\u8ba4\u6709\u6c34\u5e73\u6eda\u52a8\u6761 \u5728\u62d6\u52a8\u5217\u5bbd\u65f6 \u518d\u5427scroll\u804c\u4f4dauto
    if(g.bTable.clientWidth<g.bDiv.clientWidth){
    	g.bDiv.style.overflowY="auto";
    	g.bDiv.style.overflowX="hidden";
    }
    g.mxtgrid.style.display="";
	}catch(e){
		var gridDiv = document.getElementById('mxtgrid_'+id);
		if(gridDiv) gridDiv.style.display="";
	}
}
//\u81ea\u52a8\u5b9a\u4f4d\u70b9\u51fb\u5217\u8868\u884c
function setTablePosition(parentObj,target){
	if(target==null){
		if(parentObj!=null && parentObj.document!=null && parentObj.document.rowPositionObj){
			parentObj.document.rowPositionObj.focus();
		}else{
			return;
		}
	}else{
		parentObj.target.focus();
	}
}
function setPositionObj(obj){
	document.rowPositionObj = obj;
}
/**
 * @author macj
 */
function resizeGrid(htmlID,dragable){
	try{
		var id = htmlID;

		var layoutdiv = document.getElementById('scrollListDiv');
		if(layoutdiv == null || layoutdiv.clientHeight<=0){
			layoutdiv = document.body;
		}
		var clientWidth = Math.floor(layoutdiv.clientWidth);
		var clientHeight = Math.floor(layoutdiv.clientHeight);
		if(clientHeight<=0) {
			return;
		}    

		var mxtgrid = document.getElementById('mxtgrid_'+id);
		var hTable = document.getElementById('hTable' + id);
		var bTable = document.getElementById('bTable' + id);

		mxtgrid.style.display="none";
		var bDiv = document.getElementById('bDiv' + id);//body
		var hDiv = document.getElementById('hDiv' + id);//head
		var cDrag = document.getElementById('cDrag' + id);//drag
		var oHead = document.getElementById('headID' + id);
		var oBody = document.getElementById('bodyID' + id);

		var subHeight = parseInt(mxtgrid.getAttribute('subHeight'));//\u56fa\u5b9a\u9ad8\u5ea6\u9700\u8981\u51cf\u53bb\u7684\u9ad8\u5ea6(\u4e00\u822c\u662f\u53bb\u6389toolbar\u7684\u9ad8\u5ea6):\u4e3atable\u5e03\u5c40\u8bbe\u7f6e
		if(subHeight!=0){mxtgrid.style.width = clientWidth+"px";}//table\u5e03\u5c40\u8bbe\u7f6e,\u62d6\u52a8\u4f1a\u628a\u5916\u5c42table\u6491\u5f00\uff0c\u8bbe\u7f6e\u5bbd\u5ea6
		if(clientHeight-56-subHeight <= 0) {
			return;
		}    
	    var isIe6 = v3x.isMSIE6 && !v3x.isMSIE7 && !v3x.isMSIE8 &&!v3x.isMSIE9;
	    if(isIe6){//ie6\u5224\u65ad\u662f\u5426\u6709\u6eda\u52a8\u6761
	    	clientWidth = clientWidth-15;
	    }
		var bDivHeight = clientHeight-56-subHeight;
		bDiv.style.height = bDivHeight+'px';
		if(isIe6){
			layoutdivParent = layoutdiv.parentNode;
			bDiv.style.height = (bDivHeight-parseInt(layoutdivParent.currentStyle.paddingTop))+'px';
		}
//		var _dragHeight = clientHeight-35;
//		var dd = Math.floor(bTable.clientHeight);
//		if(dd<clientHeight){
//			_dragHeight = dd+29;
//		}
//		if(_dragHeight<=0) {
//			return;
//		}    
		cDrag.style.display='none';
		var c = cDrag.childNodes;
		for (var i = 0; i < c.length; ++i) {
			var _d = c[i];
			_d.style.height = 27+'px';
		}
		cDrag.style.display='';
		mxtgrid.style.display="";
	}catch(e){
		var mxtgridDiv = document.getElementById('mxtgrid_'+id);
		mxtgridDiv.style.display="";
	}
}
/**
 * @author macj
 * 2010-12-14
 *  id      :\u552f\u4e00
    title   :\u6807\u9898
    url     :\u7684\u8def\u5f84\u5bf9\u5e94iframe\u7684src
    height  :\u9ad8\u5ea6
    width   :\u5bbd\u5ea6
    top     :\u9876\u90e8\u8ddd\u79bb
    left    :\u5de6\u8fb9\u8ddd\u79bb
    className :\u81ea\u5b9a\u4e49\u6837\u5f0f
    relativeElement :\u76f8\u5bf9\u5bf9\u8c61--\u76f8\u5bf9\u5b9a\u4f4d
    buttons :\u6309\u94ae\u53ca\u56de\u8c03\u51fd\u6570
    html
	type    :\u7c7b\u578bwindow\u548cpanel
	isDrag  :\u662f\u5426\u5141\u8bb8\u62d6\u52a8
	targetWindow :\u6307\u5b9a\u663e\u793a\u7684\u7a97\u53e3
	
    demo:
    
    var window = new MxtWindow({
        id: '1',
        title: 'My Window',
        url: 'http://www.baidu.com',//\u6ce8\u9500url\u663e\u793ahtml
        width: 400,
        height: 300,
		type:'panel',//\u7c7b\u578bwindow\u548cpanel\u4e3apanel\u7684\u65f6\u5019title\u4e0d\u663e\u793a
		isDrag:false,//\u662f\u5426\u5141\u8bb8\u62d6\u52a8
        html: "ccccccccccccccccc",
        buttons: [{
			id:'btn1',
            text: 'Submit',
            disabled: true
        }, {
			id:'btn2',
            text: 'Close',
            handler: function(){
                window.close();
            }
        }]
    
    });
    
  var win = new MxtWindow({
    id: '2',
    title: 'Fix Window',
    url: 'http://www.126.com',
    width: 400,
    height: 300,
	type:'window',
	isDrag:false,
	relativeElement:obj,//\u56fa\u5b9a\u7684\u76ee\u6807\u5bf9\u8c61,\u5de6\u8fb9\u4e0b\u65b9(\u5de6\u4e0b\u6216\u53f3\u4e0b)
	discription:"dfdfd",
    buttons: [{
		id:'btn1',
        text: 'Submit',
        disabled: true
    }, {
		id:'btn2',
        text: 'Close',
        handler: function(){
            win.close();
        }
    }]

});
 *
 */

function MxtWindow(json){
    //\u4e3a\u7a7a\u65e2\u8fd4\u56de
    if (json == null) {
        return;
    }
    //id\u552f\u4e00
    this.id = json.id ? json.id : Math.floor(Math.random() * 100000000);
    //\u6807\u9898
    this.title = json.title;
    //url\u7684\u8def\u5f84\u5bf9\u5e94iframe\u7684src
    this.url = json.url;
    //\u9ad8\u5ea6
    this.height = json.height == null ? 250 : json.height;
    //\u5bbd\u5ea6
    this.width = json.width == null ? 300 : json.width;
    //\u6807\u9898\u7684\u9ad8\u5ea6
    this.titleHeight = 29;
    //\u6309\u94ae\u533a\u57df\u7684\u9ad8\u5ea6
    this.footerHeight = 30;
    //top
    this.top = json.top;
    //left
    this.left = json.left;
    //\u662f\u5426\u8981\u7070\u8272\u80cc\u666ftrue\u8981\uff0cfalse\u4e0d\u8981
    this.model = json.model== null ? true : false;
    //\u81ea\u5b9a\u4e49\u6837\u5f0f
    this.className = json.calssName == null ? 'mxt-window' : json.classNam;
    //\u7a97\u53e3\u5bf9\u8c61
    this.element = json.obj;
    //\u76f8\u5bf9\u5bf9\u8c61--\u76f8\u5bf9\u5b9a\u4f4d
    this.relativeElement = json.relativeElement;
    //\u662f\u5426\u521b\u5efa\u8fd8\u662f\u5b9e\u4f8b\u5316--\u6682\u65f6\u6ca1\u6269\u5c55
    this.isCeate = true;
    //\u6309\u94ae\u53ca\u56de\u8c03\u51fd\u6570
    this.buttons = json.buttons;
    //\u662f\u5426\u5141\u8bb8\u5f39\u51fa\u591a\u4e2a
    this.isSynchronization = json.isSynchronization == null ? false : true;
    // \u6d4f\u89c8\u5668\u68c0\u6d4b
    this.userAgent = navigator.userAgent.toLowerCase();
    this.isOpera = this.userAgent.indexOf('opera') > -1;
    this.isIE = this.userAgent.indexOf('msie') > -1 && !this.isOpera;
    this.isNS = this.userAgent.indexOf("netscape") > -1;
    this.dragDiv = null;
    this.isIframe = false;
    this.iframe = null;
    this.iframeId = null;
    this.html = json.html;
    this.offsetTop = 0;
    this.offsetLeft = 0;
    this.discription=json.discription == undefined?'':json.discription;
    this.closeParam = json.closeParam;
    this.maskIndex = 1000;
    
    //\u6307\u5b9a\u663e\u793a\u7684\u7a97\u53e3
    this.targetWindow = json.targetWindow == undefined ? window : json.targetWindow;
    
    this.setIndex();

    var _wwww = parseInt(this.targetWindow.document.documentElement.clientWidth);
    var _wwww2 = parseInt(this.targetWindow.document.body.clientWidth);
    if(_wwww2>_wwww){_wwww = _wwww2}
    if(_wwww<this.width){
      this.width = _wwww;
    }
    
    var _hhhh = parseInt(this.targetWindow.document.documentElement.clientHeight);
    var _hhhh2 = parseInt(this.targetWindow.document.body.clientHeight);
    if(_hhhh2>_hhhh){_hhhh = _hhhh2}
    if(_hhhh<this.height){
      this.height = _hhhh;
    }
	
	//\u7c7b\u578bwindow\u548cpanel
    this.type = json.type == null ? 'window' : json.type;
	//\u662f\u5426\u5141\u8bb8\u62d6\u52a8
    this.isDrag = json.isDrag == null ? true : json.isDrag;
    //\u521d\u59cb\u5316
    this.initWindow();
    //\u663e\u793a\u900f\u660e\u80cc\u666f
    this.isModel();
    //\u663e\u793awindow
    this.showWindow();
    //\u6dfb\u52a0\u6548\u679c(\u9634\u5f71\u548c\u62d6\u62fd)
    this.addEffect();
    //\u663e\u793awindow
    this.showWindow();
}
//    title.id = this.id+"-mxtwindow-title";
MxtWindow.prototype.setTitle = function(text){
  var _ttttt = this.targetWindow.document.getElementById(this.id+"-mxtwindow-title");
  if(_ttttt){
    _ttttt.innerHTML = text;
  }
}
MxtWindow.prototype.setIndex = function(){
  var _cccc = this.getClass('div','shield');
  if(_cccc.length>0){
    if(_cccc.length == 1){
      this.maskIndex = 1002;
    }
    if(_cccc.length > 1){
      for(var i = 0 ; i<_cccc.length; i++){
        var _ele = _cccc[i];
        var _index = parseInt(_ele.style.zIndex);
        if(_index>this.maskIndex){
          this.maskIndex = _index;
        }
      }
      this.maskIndex = this.maskIndex+2;
    }
  }
}
MxtWindow.prototype.getClass = function(tagname, className){
  //tagname\u6307\u5143\u7d20\uff0cclassName\u6307class\u7684\u503c
  //\u5224\u65ad\u6d4f\u89c8\u5668\u662f\u5426\u652f\u6301getElementsByClassName\uff0c\u5982\u679c\u652f\u6301\u5c31\u76f4\u63a5\u7684\u7528
  if (this.targetWindow.document.getElementsByClassName) {   
    return this.targetWindow.document.getElementsByClassName(className);
  }else {    //\u5f53\u6d4f\u89c8\u5668\u4e0d\u652f\u6301getElementsByClassName\u7684\u65f6\u5019\u7528\u4e0b\u9762\u7684\u65b9\u6cd5
    var tagname = this.targetWindow.document.getElementsByTagName(tagname);  //\u83b7\u53d6\u6307\u5b9a\u5143\u7d20
    var tagnameAll = [];     //\u8fd9\u4e2a\u6570\u7ec4\u7528\u4e8e\u5b58\u50a8\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20
    for (var i = 0; i < tagname.length; i++) {     //\u904d\u5386\u83b7\u5f97\u7684\u5143\u7d20
      if (tagname[i].className == className) {     //\u5982\u679c\u83b7\u5f97\u7684\u5143\u7d20\u4e2d\u7684class\u7684\u503c\u7b49\u4e8e\u6307\u5b9a\u7684\u7c7b\u540d\uff0c\u5c31\u8d4b\u503c\u7ed9tagnameAll
        tagnameAll[tagnameAll.length] = tagname[i];
      }
    }
    return tagnameAll;
  }
}
MxtWindow.prototype.getReturnValue = function(){
	
	var index = null;
	var topWindow = this.targetWindow;
	var win = null;
	if (this.isIE) {
	    try {
	        win = topWindow.document.frames(this.iframeId);
	    } catch (e) {
	        win = topWindow.frames[this.iframeId];
	    }
	    
	}else{
		win = topWindow.frames[this.iframeId];
	}
	if(win == null){
	  try{
	    for(var i = 0; i<topWindow.frames.length; i++){
	      if(topWindow.frames[i].name == this.iframeId){ 
	        index = i;
	        break;
	      }
	    }
	    if(index!=null){
	      win = topWindow.frames[index];
	    }
	  }catch(e){
	    win = topWindow.document.getElementById(this.iframeId);
	  }
	}
	if(win == null ){
		win = document.getElementById(this.iframeId);
	}
	if(win!=null){
		var returnValues = null;
		if(win.contentWindow){
			returnValues =win.contentWindow.OK(); 
		}else{
			returnValues =win.OK(); 
		}
		return returnValues;
	}else{
		return null;
	}
}
//\u521d\u59cb\u5316
MxtWindow.prototype.initWindow = function(){
    var ele = this.getElement(this.id);
    if (ele != null) {
        this.removeElement(ele);
    }
    if (this.url == null) {
        this.isIframe = false;
    }
    else {
        this.isIframe = true;
    }
    
    if (this.relativeElement != null) {
    
        var posX = this.relativeElement.offsetLeft;
        
        var posY = this.relativeElement.offsetTop;
        
        var aBox = this.relativeElement;//\u9700\u8981\u83b7\u5f97\u4f4d\u7f6e\u7684\u5bf9\u8c61
        do {
        
            aBox = aBox.offsetParent;
            
            posX += aBox.offsetLeft;
            
            posY += aBox.offsetTop;
            
        }
        while (aBox.tagName != "BODY");
        
        this.offsetLeft = posX;
        this.offsetTop = posY;
        
    }
    if (this.buttons == null || this.buttons == undefined) {
    	this.footerHeight = 5;
    }
    
    
    
    if (this.type == 'window') {
        this.getWindow();
    }
    else {
        this.getPanel();
    }
    

}
//\u6dfb\u52a0\u6548\u679c
MxtWindow.prototype.addEffect = function(){
    //this.addShadow();
	if (this.isDrag) {
		new this.targetWindow.MxtWindow.divDrag([this.dragDiv, this.element]);
		//new MxtWindow.divDrag([this.dragDiv, this.element]);
	}
}
//\u663e\u793awindow
MxtWindow.prototype.showWindow = function(){
	if(this.targetWindow.document.getElementById(this.id)!=null){
		return;
	}
	if(this.isSynchronization){
		if(this.targetWindow.document.getElementById("_isSynchronization")!=null){
			return;
		}
	}
	this.targetWindow.document.body.appendChild(this.element);
}
//\u663e\u793a\u900f\u660e\u80cc\u666f
MxtWindow.prototype.isModel = function(){
	if(this.model){
		if(this.targetWindow.document.getElementById(this.id+"_oMxtMask")!=null){
			return;			
		}
		var oMxtMask = this.targetWindow.document.createElement("div");
		oMxtMask.id = this.id+"_oMxtMask";
		oMxtMask.className = "shield";
		
		var bWidth = parseInt(this.targetWindow.document.body.scrollWidth);
		var bHeight = parseInt(this.targetWindow.document.body.scrollHeight);
		var styleStr = "top:0px;left:0px;position:absolute;z-index:"+this.maskIndex+";background:#000000;width:"
				+ bWidth + "px;height:" + bHeight + "px;filter: alpha(opacity=25);-moz-opacity: 0.25;opacity: 0.25;";
		oMxtMask.style.cssText = styleStr;
		this.targetWindow.document.body.appendChild(oMxtMask);
	}else{
		return;
	}
}
MxtWindow.prototype.close = function(e){
	try{
		this.targetWindow.document.getElementById(this.iframeId).contentWindow.document.getElementById('docOpenBodyFrame').contentWindow.document.getElementById('officeEditorFrame').contentWindow.pdfOcxUnLoad();
	}catch(e){}
	this.targetWindow.document.getElementById(this.iframeId).src="";
    this.removeElement(this.targetWindow.document.getElementById(this.id));
    if(this.model){
		if(this.targetWindow.document.getElementById(this.id+"_oMxtMask")!=null){
			this.removeElement(this.targetWindow.document.getElementById(this.id+"_oMxtMask"));	
		}
    }	
}
//\u521b\u5efapanel
MxtWindow.prototype.getPanel = function(){
    //\u6700\u5916\u5c42
    this.element = this.createObj('div');
    this.element.className = this.className;
    this.element.id = this.id;
    
    //\u4e0d\u7528dtd\u6837\u5f0f\u51fa\u95ee\u9898\u4e86
    if (this.isIE) {
        this.element.style.width = this.width + 2 + "px";
        this.element.style.height = this.height - 8 + "px";
    }
    else {
        this.element.style.width = this.width + "px";
        this.element.style.height = this.height -5+ "px";
    }
    //\u8bbe\u7f6etop\u548cleft\u5c5e\u6027\u503c\u8981\u4e0d\u62d6\u52a8\u4e0d\u4e86
    
    if (this.relativeElement != null) {
        this.top = parseInt(this.offsetTop) + parseInt(this.relativeElement.offsetHeight) + "px";
        this.left = parseInt(this.offsetLeft)  + "px";
        
        //\u53f3\u4e0a\u89d2\u5bf9\u51c6\u5bf9\u8c61\u4e2d\u95f4
        if (parseInt(this.offsetLeft) + parseInt(this.relativeElement.offsetWidth)  + parseInt(this.width) > parseInt(this.targetWindow.document.body.clientWidth)) {
            this.left = parseInt(this.offsetLeft)   - this.width + "px";
        }
        
    }
    if (this.top == null) {
        this.top = (parseInt(this.targetWindow.document.body.clientHeight) - this.height) / 2 + "px";
        this.left = (parseInt(this.targetWindow.document.body.clientWidth) - this.width) / 2 + "px";
    }
    this.element.style.top = this.top;
    this.element.style.left = this.left;
    
    //head
    var head = this.createObj('div');
    head.className = 'mxt-panel-head';
    head.style.height = "20px";
    head.onselectstart = function(){
        return false;
    }
    
    //\u62d6\u52a8\u7684\u533a\u57df
    this.dragDiv = head;
    
    //\u6807\u9898
    //    var title = this.createObj('span');
    //    title.className = 'mxt-panel-head-title';
    //    title.innerHTML = this.title;
    
    
    //\u5173\u95ed\u6309\u94ae
    var close = this.createObj('span');
    close.className = 'mxt-panel-head-close';
    //\u6dfb\u52a0\u5173\u95ed\u4e8b\u4ef6
    var self = this;
    MxtWindow.addEvent(close, "click", function(e){
        return self.close(e);
    }, false);
    
    //\u6dfb\u52a0title\u548cclose
    //head.appendChild(title);
    head.appendChild(close);
    
    //body
    var body = this.createObj('div');
    body.className = 'mxt-panel-body';
    body.style.height = this.height - this.footerHeight - 10 + "px";
    
    body.appendChild(head);
    
    //mxt-window-body-iframe
    if (this.isIframe) {
    	this.iframeId = parseInt(Math.random()*10000)+"-iframe";
    	var ifram = this.targetWindow.document.createElement('iframe'); 
        //var ifram = this.createObj('iframe');
        ifram.setAttribute("src", this.url);
        ifram.id = this.iframeId;
        ifram.name = this.iframeId;
        ifram.setAttribute("frameborder", "0");
        ifram.className = "mxt-window-body-iframe";
        ifram.style.height = parseInt(body.style.height)-20 + "px";
        ifram.style.width = this.width - 10 + "px";
        this.iframe = ifram;
        body.appendChild(this.iframe);
    }
    else {
        //\u5185\u5bb9\u533a\u57df
        var content = this.createObj('div');
        content.className = 'mxt-panel-body-content';
        content.style.height = parseInt(body.style.height) - 10 + "px";
        if (this.html) {
            content.innerHTML = this.html;
        }
        body.appendChild(content);
    }
    this.element.appendChild(body);
    
    //footer
    var footer = this.createObj('div');
    footer.className = 'mxt-panel-footer';
    footer.style.height = this.footerHeight + "px";
    
    if(this.discription!=null){
    	 var discriptionDiv = this.createObj('div');
    	 discriptionDiv.className="discriptionDiv";
    	 discriptionDiv.innerHTML = this.discription;
    	 footer.appendChild(discriptionDiv); 
    }
    
	if (this.buttons != null && this.buttons.length > 0) {
		var buttonsDiv = this.createObj('div');
		buttonsDiv.className = "buttonsDiv";
		for (var i = 0; i < this.buttons.length; i++) {
			var jsonTemp = this.buttons[i];
			var botton = this.createObj('input');
			botton.setAttribute("type", "button");
			botton.className="button-default-2"
			if (jsonTemp.text) {
				botton.setAttribute("value", jsonTemp.text);
			}
			if (jsonTemp.id) {
				botton.setAttribute("id", jsonTemp.id);
			}
			if (jsonTemp.disabled) {
				botton.setAttribute("disabled", jsonTemp.disabled);
			}
			if (jsonTemp.handler) {
				MxtWindow.addEvent(botton, "click", jsonTemp.handler, false);
			}
			buttonsDiv.appendChild(botton);
		};
		footer.appendChild(buttonsDiv);
	}
    this.element.appendChild(footer);
    
    if(this.isSynchronization){
    	var isSynchronization_hidden = this.createObj('input');
    	isSynchronization_hidden.setAttribute('type','hidden');
    	isSynchronization_hidden.setAttribute('id',"_isSynchronization");
    	this.element.appendChild(isSynchronization_hidden);
    }
}
//\u521b\u5efawindow
MxtWindow.prototype.getWindow = function(){
    //\u6700\u5916\u5c42
    this.element = this.createObj('div');
    this.element.className = this.className;
    this.element.id = this.id;
    
    this.element.style.width = this.width + "px";
    this.element.style.height = this.height + "px";
    this.element.style.zIndex = this.maskIndex+1;
    
    
    this.elementContent = this.createObj('div');
    this.elementContent.style.position = "absolute";
    this.elementContent.style.zIndex = "10";
    this.element.appendChild(this.elementContent);
    
	this.iframeMask = this.targetWindow.document.createElement("iframe"); 
	this.iframeMask.style.position = "absolute";
	this.iframeMask.style.zIndex = "1";
	this.iframeMask.id = this.iframeId+"_iframeMask";
	this.iframeMask.setAttribute("frameBorder", "0");
    this.iframeMask.style.width = (this.width+3) + "px";
    this.iframeMask.style.height = this.height + "px";
	this.element.appendChild(this.iframeMask);
    
    
    
    //\u8bbe\u7f6etop\u548cleft\u5c5e\u6027\u503c\u8981\u4e0d\u62d6\u52a8\u4e0d\u4e86
    
    if (this.relativeElement != null) {
        this.top = parseInt(this.offsetTop) + parseInt(this.relativeElement.offsetHeight) + "px";
        this.left = parseInt(this.offsetLeft) + "px";
        
        //\u53f3\u4e0a\u89d2\u5bf9\u51c6\u5bf9\u8c61\u4e2d\u95f4
        if (parseInt(this.offsetLeft) + parseInt(this.relativeElement.offsetWidth) / 2 + parseInt(this.width) > parseInt(this.targetWindow.document.body.clientWidth)) {
            this.left = parseInt(this.offsetLeft)  - this.width + "px";
        }
        
    }
    if (this.top == null) {
        this.top = (parseInt(this.targetWindow.document.body.clientHeight) - this.height) / 2 + "px";
        this.left = (parseInt(this.targetWindow.document.body.clientWidth) - this.width) / 2 + "px";
    }
    this.element.style.top = this.top;
    this.element.style.left = this.left;
    
    //head
    var head = this.createObj('div');
    head.className = 'mxt-window-head';
    head.style.height = this.titleHeight + "px";
    head.onselectstart = function(){
        return false;
    }
    
    //\u62d6\u52a8\u7684\u533a\u57df
    this.dragDiv = head;
    
    //\u6807\u9898
    var title = this.createObj('span');
    title.id = this.id+"-mxtwindow-title";
    title.className = 'mxt-window-head-title';
    title.innerHTML = this.title;
    
    
    //\u5173\u95ed\u6309\u94ae
    var close = this.createObj('span');
    close.className = 'mxt-window-head-close';
    //\u6dfb\u52a0\u5173\u95ed\u4e8b\u4ef6
    var self = this;
    if(this.closeParam && this.closeParam.handler){
      MxtWindow.addEvent(close, "click", this.closeParam.handler, false);
    }else{
      MxtWindow.addEvent(close, "click", function(e){
        return self.close(e);
      }, false);
    }
    
    
    //\u6dfb\u52a0title\u548cclose
    head.appendChild(title);
    head.appendChild(close);
    
    //body
    var body = this.createObj('div');
    body.className = 'mxt-window-body';
    body.style.height = this.height - this.titleHeight - this.footerHeight - 20 + "px";
    
    
    //mxt-window-body-iframe
    if (this.isIframe) {
    	this.iframeId = parseInt(Math.random()*10000)+"-iframe";
    	var ifram = this.targetWindow.document.createElement("iframe"); 
    	ifram.setAttribute("src", this.url);
    	ifram.id = this.iframeId;
    	ifram.name = this.iframeId;
    	ifram.setAttribute("frameBorder", "0");
    	ifram.className = "mxt-window-body-iframe";
    	ifram.style.height = parseInt(body.style.height)-5 + "px";
    	ifram.style.width = this.width - 10 + "px";
        this.iframe = ifram;
        body.appendChild(this.iframe);
    }
    else {
        //\u5185\u5bb9\u533a\u57df
        var content = this.createObj('div');
        content.className = 'mxt-window-body-content';
        content.style.height = parseInt(body.style.height) - 10 + "px";
        if (this.html) {
            content.innerHTML = this.html;
        }
        body.appendChild(content);
    }
    
    this.elementContent.appendChild(head);
    this.elementContent.appendChild(body);
    
    //footer
    var footer = this.createObj('div');
    footer.className = 'mxt-window-footer';
    footer.style.height = this.footerHeight + "px";
    if(this.discription!=null || this.discription!=''){
    	var discriptionDiv = this.createObj('div');
    	discriptionDiv.className="discriptionDiv";
    	discriptionDiv.innerHTML = this.discription;
    	footer.appendChild(discriptionDiv);
	}
    if (this.buttons != null && this.buttons.length > 0) {
    	var buttonsDiv = this.createObj('div');
		buttonsDiv.className = "buttonsDiv";
        for (var i = 0; i < this.buttons.length; i++) {
            var jsonTemp = this.buttons[i];
            var botton = this.createObj('input');
            botton.setAttribute("type", "button");
            
            if (jsonTemp.text) {
                botton.setAttribute("value", jsonTemp.text);
            }
            if (jsonTemp.id) {
                botton.setAttribute("id", jsonTemp.id);
            }
            if (jsonTemp.disabled) {
                botton.setAttribute("disabled", jsonTemp.disabled);
            }
            if (jsonTemp.handler) {
                MxtWindow.addEvent(botton, "click", jsonTemp.handler, false);
            }
            
            buttonsDiv.appendChild(botton);
        };
        footer.appendChild(buttonsDiv);
     }
    this.elementContent.appendChild(footer);
    if(this.isSynchronization){
    	var isSynchronization_hidden = this.createObj('input');
    	isSynchronization_hidden.setAttribute('type','hidden');
    	isSynchronization_hidden.setAttribute('id',"_isSynchronization");
    	this.element.appendChild(isSynchronization_hidden);
    }
    
}
MxtWindow.prototype.reloadUrl = function (url) {
  var _url = url;
  _url ? null : _url = this.url;
  var ifram = this.targetWindow.document.getElementById(this.iframeId); 
  ifram.setAttribute("src", _url);
}
//\u7ed1\u5b9a\u4e8b\u4ef6
MxtWindow.addEvent = function(element, eventType, handler, capture){
    try {
        if (element.addEventListener) 
            element.addEventListener(eventType, handler, capture);
        else 
            if (element.attachEvent) 
                element.attachEvent("on" + eventType, handler);
    } 
    catch (e) {
    }
};
//\u5220\u9664\u5bf9\u8c61
MxtWindow.prototype.removeElement = function(ele){
    ele.parentNode.removeChild(ele);
};
//\u521b\u5efa\u5bf9\u8c61\u5143\u7d20
MxtWindow.prototype.createObj = function(type, id){
    var ele = this.targetWindow.document.createElement(type);
    ele.id = id == null ? '' : id;
    return ele;
}
//\u83b7\u53d6\u5bf9\u8c61
MxtWindow.prototype.getElement = function(id){
    if (id == null) {
        return null;
    }
    else {
        return document.getElementById(id);
    }
}
Array.prototype.extend = function(C){
    for (var B = 0, A = C.length; B < A; B++) {
        this.push(C[B]);
    }
    return this;
}
// \u62d6\u62fd\u6548\u679c
MxtWindow.divDrag = function(){
    var A, B, $cn;
    var zIndex = 2000;
    this.dragStart = function(e){
        e = e || window.event;
        if ((e.which && (e.which != 1)) || (e.button && (e.button != 1))) 
            return;
        var pos = this.$pos;
        $cn = this.parent || this;
        if (document.defaultView) {
            _top = document.defaultView.getComputedStyle($cn, null).getPropertyValue("top");
            _left = document.defaultView.getComputedStyle($cn, null).getPropertyValue("left");
        }
        else {
            if ($cn.currentStyle) {
                _top = $cn.currentStyle["top"];
                _left = $cn.currentStyle["left"];
            }
        }
        pos.ox = (e.pageX || (e.clientX + document.documentElement.scrollLeft)) -
        parseInt(_left);
        pos.oy = (e.pageY || (e.clientY + document.documentElement.scrollTop)) -
        parseInt(_top);
        if (!!A) {
            if (document.removeEventListener) {
                document.removeEventListener("mousemove", A, false);
                document.removeEventListener("mouseup", B, false);
                document.onselectstart = function(){return true;}
            }
            else {
                document.detachEvent("onmousemove", A);
                document.detachEvent("onmouseup", B);
            }
        }
        A = this.dragMove.create(this);
        B = this.dragEnd.create(this);
        if (document.addEventListener) {
            document.addEventListener("mousemove", A, false);
            document.addEventListener("mouseup", B, false);
        }
        else {
            document.attachEvent("onmousemove", A);
            document.attachEvent("onmouseup", B);
        }
        //$cn.style.zIndex = (++zIndex);
        this.stop(e);
    }
    this.dragMove = function(e){
        e = e || window.event;
        var pos = this.$pos;
        $cn = this.parent || this;
        $cn.style.top = (e.pageY || (e.clientY + document.documentElement.scrollTop)) -
        parseInt(pos.oy) +
        'px';
        $cn.style.left = (e.pageX || (e.clientX + document.documentElement.scrollLeft)) -
        parseInt(pos.ox) +
        'px';
        this.stop(e);
        
    }
    this.dragEnd = function(e){
        var pos = this.$pos;
        e = e || window.event;
        if ((e.which && (e.which != 1)) || (e.button && (e.button != 1))) 
            return;
        $cn = this.parent || this;
        if (!!(this.parent)) {
            this.style.backgroundColor = pos.color
        }
        if (document.removeEventListener) {
            document.removeEventListener("mousemove", A, false);
            document.removeEventListener("mouseup", B, false);
        }
        else {
            document.detachEvent("onmousemove", A);
            document.detachEvent("onmouseup", B);
        }
        A = null;
        B = null;
        //$cn.style.zIndex = (++zIndex);
        this.stop(e);
    }
    this.shiftColor = function(){
        //this.style.backgroundColor = "#EEEEEE";
    }
    this.position = function(e){
        var t = e.offsetTop;
        var l = e.offsetLeft;
        while (e = e.offsetParent) {
            t += e.offsetTop;
            l += e.offsetLeft;
        }
        return {
            x: l,
            y: t,
            ox: 0,
            oy: 0,
            color: null
        }
    }
    this.stop = function(e){
        if (e.stopPropagation) {
            e.stopPropagation();
        }
        else {
            e.cancelBubble = true;
        }
        if (e.preventDefault) {
            e.preventDefault();
        }
        else {
            e.returnValue = false;
        }
    }
    this.stop1 = function(e){
        e = e || window.event;
        if (e.stopPropagation) {
            e.stopPropagation();
        }
        else {
            e.cancelBubble = true;
        }
    }
    this.create = function(bind){
        var B = this;
        var A = bind;
        return function(e){
            return B.apply(A, [e]);
        }
    }
    this.dragStart.create = this.create;
    this.dragMove.create = this.create;
    this.dragEnd.create = this.create;
    this.shiftColor.create = this.create;
    this.initialize = function(){
        for (var A = 0, B = arguments.length; A < B; A++) {
            C = arguments[A];
            if (!(C.push)) {
                C = [C];
            }
            
            $C = (typeof(C[0]) == 'object') ? C[0] : (typeof(C[0]) == 'string' ? $(C[0]) : null);
            if (!$C) 
                continue;
            $C.$pos = this.position($C);
            $C.dragMove = this.dragMove;
            $C.dragEnd = this.dragEnd;
            $C.stop = this.stop;
            if (!!C[1]) {
                $C.parent = C[1];
                $C.$pos.color = $C.style.backgroundColor;
            }
            if ($C.addEventListener) {
                $C.addEventListener("mousedown", this.dragStart.create($C), false);
                if (!!C[1]) {
                    $C.addEventListener("mousedown", this.shiftColor.create($C), false);
                }
            }
            else {
                $C.attachEvent("onmousedown", this.dragStart.create($C));
                if (!!C[1]) {
                    $C.attachEvent("onmousedown", this.shiftColor.create($C));
                }
            }
        }
    }
    this.initialize.apply(this, arguments);
}

MxtWindow.prototype.addShadow = function(){
    obj = this.element;
    if (!obj) 
        return false;
    //\u6d4f\u89c8\u5668\u68c0\u6d4b  
    var userAgent = navigator.userAgent.toLowerCase();
    var isOpera = userAgent.indexOf('opera') > -1;
    var isIE = userAgent.indexOf('msie') > -1 && !isOpera;
    //var isKHTML=userAgent.indexOf('khtml')>-1||userAgent.indexOf('konqueror')>-1||userAgent.indexOf('AppleWebKit')>-1;  
    //var isMoz=userAgent.indexOf('gecko')>-1&&!isKHTML;  // FF||Netscape  
    var isNS = userAgent.indexOf("netscape") > -1;
    
    //\u83b7\u53d6\u5bf9\u8c61\u7684\u6240\u5360\u7684\u603b\u5bbd\u548c\u9ad8\uff08\u5305\u62ec\u8fb9\u6846\uff09  
    var objWidth = obj.offsetWidth;
    var objHeight = obj.offsetHeight;
    //\u5bf9\u8c61\u7684\u7edd\u5bf9\u4f4d\u7f6e\uff08\u5143\u7d20\u76f8\u5bf9\u6d4f\u89c8\u5668\u7684\u50cf\u7d20\u503c\uff09  
    var objL = 0;
    var objT = 0;
    //\u83b7\u53d6\u5143\u7d20\u7684Left\u548cTop\u503c\u7684\u51fd\u6570  
    var getLT = function(tempObj){
        if (!tempObj) 
            return false;
        var LL = 0, TT = 0;
        if (isIE || isOpera) { // IE||Opera  
            while (tempObj != null && tempObj.nodeName != "#document") {
                LL += tempObj.offsetLeft;
                TT += tempObj.offsetTop;
                tempObj = tempObj.parentNode;
            }
        }
        else { // FF||Netscape  
            TT = tempObj.offsetTop;
            LL = tempObj.offsetLeft;
        }
        return {
            T: TT,
            L: LL
        };
    }
    //\u8bfb\u53d6\u5143\u7d20\u7684Top\u548cLeft\u503c  
    var temp = getLT(obj);
    objL = temp.L;
    objT = temp.T;
    
    //\u521b\u5efa\u4e09\u4e2a\u9634\u5f71\u5c42\u53ca\u5185\u90e8\u4e00\u4e2a\u4e0e\u5143\u7d20\u5927\u5c0f\u76f8\u540c\u7684\u767d\u8272\u80cc\u666f\u5c42 \uff08\u4ece\u5916\u5c42\u5230\u5185\u5c42\uff09  
    var div1 = this.targetWindow.document.createElement("div");
    var div2 = this.targetWindow.document.createElement("div");
    var div3 = this.targetWindow.document.createElement("div");
    var div4 = this.targetWindow.document.createElement("div");
    var addCssText = function(obj, cssText, append){ //append:0\u8986\u76d6\u539f\u6765\u7684style\u503c(\u9ed8\u8ba4)\uff0c1\u8ffd\u52a0\u5230\u539fstyle\u503c\u540e  
        if (!obj) 
            return false;
        if (!isOpera) { //Opear\u4e0d\u652f\u6301cssText\u5c5e\u6027\u8bbe\u7f6e  
            if (!append) {
                obj.style.cssText = cssText;
            }
            else {
                obj.style.cssText += cssText
            }
        }
        else {
            if (!append) {
                obj.setAttribute("style", cssText);
            }
            else {
                obj.setAttribute("style", obj.getAttribute("style") + ";" + cssText);
            }
        }
    }
    //\u5b9a\u4e49\u9634\u5f71\u90e8\u5206\u901a\u7528\u6837\u5f0f  
    var sCssText = "width:100%;height:100%;position:absolute;margin:0px;padding:0px;top:-1px;left:-1px";
    //\u5b9a\u4e49\u4e09\u4e2a\u9634\u5f71\u5c42\u7684\u989c\u8272\u53ca\u6700\u5916\u5c42\u4f4d\u7f6e\uff08\u56e0\u4e3a\u9634\u5f71\u5411\u5750\u4e0a\u504f\u79fb3\u4e2a\u50cf\u7d20\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a3\uff09\u548c\u9ad8\u5bbd  
    addCssText(div1, "position:absolute;left:" + (objL + 3) + "px;top:" + (objT + 3) + "px;width:" + objWidth + "px;height:" + objHeight + "px;background:#eee");
    addCssText(div2, sCssText + ";background:#ddd");
    addCssText(div3, sCssText + ";background:#ccc");
    addCssText(div4, sCssText + ";background:#fff"); //\u767d\u8272\u80cc\u666f\u5c42  
    if (isIE || isNS) { //IE||NS  
        addCssText(div1, ";z-index:-1", 1);
    }
    else { //FF||Netscape  
        /**
         //\u521b\u5efa\u4e00\u4e2a\u4e0e\u539f\u5bf9\u8c61\u5185\u5bb9\u5b8c\u5168\u76f8\u540c\u7684\u5bf9\u8c61\u5e76\u5199\u5165\u539f\u4f4d\u7f6e
         var newNode=obj.cloneNode(true);
         newNode.removeAttribute("id");  //\u5220\u9664id\u5c5e\u6027\uff0c\u9632\u6b62id\u51b2\u7a81
         addCssText(newNode,"visibility:hidden",1);
         obj.parentNode.insertBefore(newNode,obj);
         //\u5728\u975eIE/NS\u4e2d\u7684Bug\u7684\u89e3\u51b3\u529e\u6cd5\uff08P\u6807\u8bb0\u9ed8\u8ba4\u5728body\u8303\u56f4\u5185\u504f\u79fb\uff0c\u800cbody\u6709\u65f6\u6709margin\uff09
         if(newNode.tagName=="P"){
         var BodyMargin=(document.documentElement.offsetHeight-document.body.offsetHeight)/2;
         objT=objT-BodyMargin;
         }
         **/
        //\u8bbe\u5b9a\u5c42\u7684\u7d22\u5f15\u5927\u4e8e\u5c42\u9ed8\u8ba4\u503c0  
        addCssText(obj, "position:absolute;z-index:2;left:+" + objL + "px;top:" + objT + "px", 1);
    }
    //\u521b\u5efa\u9634\u5f71\u53ca\u5185\u5bb9  
    div1.appendChild(div2);
    div2.appendChild(div3);
    div3.appendChild(div4);
    
    var dd = this.targetWindow.document.createElement("div");
    dd.className = "mxt-window";
    dd.appendChild(div1);
    dd.appendChild(obj);
    this.element = dd;
}
//ipad\u6eda\u52a8\u6761\u95ee\u9898
function initIpadScroll(id,height,width){
	if(v3x.isIpad){
		var oHtml = document.getElementById(id); 
		if(oHtml){
			if(height){
				oHtml.style.height = height+"px";
			}
			if(width){
				oHtml.style.width = width+"px";
			}
			oHtml.style.overflow = "auto";	
			touchScroll(id);
		}
	}
}
function initIe10AutoScroll(id, sub) {
  var mainObj=getA8Top().document.getElementById("main");
  var oHeight = mainObj!=null?mainObj.offsetHeight-sub: parseInt(window.top.document.body.offsetHeight) - sub;
  if (oHeight < 0) {
      return;
  }
  initIe10Scroll(id, oHeight);
  
}
function setHeightAuto(id,sw,sh){
  var oHeight2 = parseInt(document.body.clientHeight)-sh;
  var oWidth2 = parseInt(document.body.clientWidth)-sw;
  if(v3x.isMSIE9){
    oHeight2 = parseInt(document.documentElement.clientHeight)-sh;
    oWidth2 = parseInt(document.documentElement.clientWidth)-sw;
  }
  initIe10Scroll(id,oHeight2,oWidth2);
}

function bindOnresize(id,sw,sh){
  window.onresize = function() { 
    setHeightAuto(id,sw,sh)
  }
  setHeightAuto(id,sw,sh);
}
//ie10\u6eda\u52a8\u6761\u95ee\u9898
function initIe10Scroll(id, height, width) {
 // if (v3x.isMSIE10) {
      var oHtml = document.getElementById(id);
      if (oHtml) {
          oHtml.style.overflow = 'auto'
          if (height>0) {
              oHtml.style.height = height + "px";
          }
          if (width>0) {
              oHtml.style.width = width + "px";
          }
      }
 // }
}
//ff\u6eda\u52a8\u6761\u95ee\u9898
function initFFScroll(id,height,width){
	if(v3x.isFirefox){
		var oHtml = document.getElementById(id); 
		if(oHtml){
			if(height){
				oHtml.style.height = height+"px";
			}
			if(width){
				oHtml.style.width = width+"px";
			}
			oHtml.style.overflow = "auto";	
		}
	}
}
//safaria\u6eda\u52a8\u6761\u95ee\u9898
function initSafariScroll(id,height,width){
	if(v3x.isSafari){
		var oHtml = document.getElementById(id); 
		if(oHtml){
			if(height){
				oHtml.style.height = height+"px";
			}
			if(width){
				oHtml.style.width = width+"px";
			}
			oHtml.style.overflow = "auto";	
		}
	}
}
//chrome\u6eda\u52a8\u6761\u95ee\u9898
function initChromeScroll(id,height,width){
	if(v3x.isChrome){
		var oHtml = document.getElementById(id); 
		if(oHtml){
			if(height){
				oHtml.style.height = height+"px";
			}
			if(width){
				oHtml.style.width = width+"px";
			}
			oHtml.style.overflow = "auto";	
		}
	}
}
function isTouchDevice(){
    try{
        document.createEvent("TouchEvent");
        return true;
    }catch(e){
        return false;
    }
}
function touchScroll(id){
    if(isTouchDevice()){ //if touch events exist...
        var el=document.getElementById(id);
        var scrollStartPos=0;
        var scrollStartPosX=0;
 
        el.addEventListener("touchstart", function(event) {
            scrollStartPos=this.scrollTop+event.touches[0].pageY;
            scrollStartPosX=this.scrollLeft+event.touches[0].pageX;
            //event.preventDefault();
        },false);
 
        el.addEventListener("touchmove", function(event) {
        	this.scrollTop=scrollStartPos-event.touches[0].pageY;
        	this.scrollLeft=scrollStartPosX-event.touches[0].pageX;
            event.preventDefault();
        },false);
    }
}

/**
 * \u662f\u5426\u4e3a\u6570\u5b57\uff0c\u4e0d\u80fd\u4ee5.\u7ed3\u5c3e
 */
function isDecimal(value,inputName,integerDigits,decimalDigits){
	if(!testRegExp(value, "^-?[0-9]{0,"+(integerDigits?integerDigits:"")+"}\\.?[0-9]{1,"+(decimalDigits?decimalDigits:"")+"}$")){
		if(inputName)
			alert(v3x.getMessage("V3XLang.formValidate_isNumber", inputName));
		return false;
	}
	
	return true;
}
/**
 * \u610f\u89c1\u63a8\u9001\u7a97\u53e3
 * @param summaryId \uff1a\u6b63\u6587ID
 * @param isReplayedMemberId \uff1a \u88ab\u56de\u590d\u610f\u89c1\u7684\u4eba\u5458ID
 */
function showPushWindow(summaryId){
	var edocType ="";
	var obj = document.getElementById("edocType");
	var pushMessageMemberIds = document.getElementById("pushMessageMemberIds");
	if(obj){
		edocType = obj.value;
	}
	var selected  =  document.getElementById("pushMessageMemberIds").value;
	var url = colWorkFlowURL + "?method=showPushWindow"
							 +"&summaryId="+summaryId
							 +"&edocType="+edocType
							 +"&sel="+encodeURIat(selected);
	var replyedAffairId = document.getElementById("replyedAffairId");
	
	if(replyedAffairId!=null && typeof(replyedAffairId)!='undefined'){
		url+="&replyedAffairId="+replyedAffairId.value;
	}
	var ret = v3x.openWindow({
	        url: url,
	        height:350,
	        width:300
	    });
	if(typeof(ret) != 'undefined' && ret != null){ 
	  //\u76f4\u63a5\u53d6\u6d88\u7684\u65f6\u5019\u8fd4\u56deundefined\u3002\u6ca1\u6709\u9009\u62e9\u70b9\u786e\u5b9a\u7684\u65f6\u5019\u8fd4\u56de\u4e3a\u7a7a
	  var memberIds = ret[0];
	  var memberNames = ret[1];
	  document.getElementById("pushMessageMemberIds").value = memberIds;
	  var pushMessageMemberNames  = document.getElementById("pushMessageMemberNames");
	  if(pushMessageMemberNames && replyedAffairId != replyedAffairId.value){
		  pushMessageMemberNames.value = memberNames;
		  pushMessageMemberNames.title = memberNames;
	  }
	}
}

/**
 * \u53d1\u9001\u77ed\u4fe1\u7a97\u53e3
 */
function sendSMSV3X(receiverIds){
	var linkURL = getBaseURL() + "/message.do?method=showSendSMSDlg";
	if(receiverIds){
		linkURL += "&receiverIds="+ receiverIds;
	}
    var sendResult = v3x.openWindow({
	    url:linkURL,
	    width:"420",
	    height:"240",
	    scrollbars:"no"
	});
	if(!sendResult){
		return;
	}
	alert(sendResult);
}

/**
 * \u65e7\u7684\u53d1\u9001\u6d88\u606f\u7a97\u53e3, \u7528\u4e8e\u4eba\u5458\u5361\u7247\u4e0a\u7684\u53d1\u9001\u6d88\u606f\u7b49(\u5f39\u51fa\u5f0f\u7a97\u53e3)
 */
function sendMessageForCard(getData, ids){
	if (!getA8Top().checkUCStatus()) {
		return;
	}
	var url;
	if(getData){
		url = getBaseURL()+"/message.do?method=showSendDlg&getData=fromParent";
	}else{
		url = getBaseURL()+"/message.do?method=showSendDlg&receiverIds=" + ids;
	}
	
	v3x.openWindow({
		url: url,
		dialogType : "1",
		width : "440",
		height : "300"
	});
}

/**
 * \u53d1\u9001\u6d88\u606f, \u5f39\u51faIM\u804a\u5929\u7a97\u53e3
 */
function sendMessageForIMTab(id, name) {
	if(!getA8Top().contentFrame.topFrame.onlineWin){
		var left = 50;
		var top = (window.screen.availHeight - 600) / 2;
		
		getA8Top().contentFrame.topFrame.onlineWin = getA8Top().contentFrame.topFrame.open(getBaseURL()+"/message.do?method=showOnlineUser&id=" + id + "&name=" + name, "", 
			"left=" + left + ",top=" + top + ",width=600,height=600,toolbar=no,menubar=no,scrollbars=no,resizable=yes,location=no,status=no");
	}else{
		getA8Top().contentFrame.topFrame.onlineWin.focus();
		getA8Top().contentFrame.topFrame.onlineWin.showIMTab("1", id, name, "false");
	}
}

/**
 * \u5176\u5b83\u6a21\u5757\u8f6c\u53d1\u534f\u540c\u64cd\u4f5c\uff1a\u516c\u7528\u63a5\u53e3
 */
function forwardColV3X(summaryId, affairId, forwardType){
	var rv = v3x.openWindow({
        url : getBaseURL()+"/collaboration/collaboration.do?method=showForward&showType=model&data=" + summaryId + "_" + affairId,
        width : 360,
	    height : 420
	});
	
	if(forwardType == "self"){//\u540e\u8fb9\u6309\u94ae\u76f4\u63a5\u8f6c\u53d1\u534f\u540c
		if(rv == "true"){
			document.location.reload(true);
		}
	}else if(forwardType == "list"){//\u5217\u8868\u4e0b\u83dc\u5355\u4e2d\u8f6c\u53d1\u534f\u540c
		if(rv && rv == "true" && (getParameter("method") == "listSent")){
    		document.location.reload(true);
   		}
	}
}

function confirmToOffice2003(){
	if(confirm(_("V3XLang.OfficeSaveTo2003"))){
		return true;
	}else{
		return false;
	}
}
function isOffice2007(filename){
	if(typeof(filename) == 'undefined' || filename == null) return false;
	if(filename.indexOf(".docx")!=-1
		|| filename.indexOf(".xlsx")!=-1 
		|| filename.indexOf(".pptx")!=-1){
		return true;
	}else{
		return false;
	}
}
function V3XAutocomplete(){
	this._disableEvent = false;
	this._onchange = function (options,val,inputName,view){
		if(v3xautocomplete._disableEvent){
			return;
		}
		if(options){
			if(options.select){
				var item = {label:val.value,value:val.id};
				options.select(item,inputName);
			}
			if(options.bindSelect){
				var e = jQuery.Event("change");
				if(jQuery.isFunction(options.bindSelect)){
					e.target = options.bindSelect(jQuery( view ));
				}else{
					e.target = jQuery(options.bindSelect);
				}
				try{
					jQuery(e.target).val(val.id).trigger(e,jQuery(e.target));
					jQuery(e.target).blur();
				}catch(e){
				}
			}
		}
	};
	// \u53d6\u5f97\u7528\u4e8e\u5c55\u73b0\u7684Input\u5bf9\u8c61\uff0c\u540c\u65f6\u652f\u6301\u4f20\u5165\u540d\u79f0\u548c\u5bf9\u8c61\u3002
	this._getViewElement = function (inputName){
		var view;
		if(typeof inputName == 'string'){
			// \u4e3a\u4e86\u7ed5\u8fc7jquery\u7684: selector,\u5fc5\u987b\u4f7f\u7528getElementById
			view = jQuery( document.getElementById(inputName + '_autocomplete') );
		}else{
			view = jQuery(inputName);
		}
		return view;
	}
};
var v3xautocomplete = new V3XAutocomplete();
/**
 * \u4e3a\u6307\u5b9a\u7684input\u751f\u6210autocomplete\u81ea\u52a8\u4e0b\u62c9\u641c\u7d22\u3002
 * inputName\u4e3atype\u4e3ahidden\u7684input\uff0c\u5982\u679c\u4f20\u5165\u7684inputName\u4e3aString\uff0c\u5fc5\u987b\u5b58\u5728\u4e00\u4e2a\u540d\u79f0\u4e3ainputName+'_autocomplete'\u7684type\u4e3atext\u7684input\u3002
 * \u5982\u679c\u4f20\u5165\u503c\u4e3a\u5bf9\u8c61\uff0c\u5219\u76f4\u63a5\u5c06\u4f20\u5165\u7684Input\u6e32\u67d3\u4e3aautocomplete\u3002
 * \u8f93\u5165\u6570\u636e\u683c\u5f0f\u4e3a[ { value:"010", label:"Beijing\u5317\u4eac"}, { value:"020", label:"guangzhou\u5e7f\u5dde" }, { value:"021",label:"shanghai\u4e0a\u6d77"} ];
 * \u7528\u6237\u5f55\u5165\u6839\u636elabel\u503c\u8fdb\u884c\u5339\u914d\u3002\u9009\u62e9\u540e\u5bf9\u5e94\u9879\u76ee\u7684value\u503c\u8bbe\u7f6e\u5230id\u4e3ainputName\u7684input\u7684value\u57df\u3002
 * \u652f\u6301\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\uff1av3xautocomplete.autocomplete('myinput',data,{select:function(item,inputName){alert(item.label +':' + item.value);},value:'010',appendBlank:false});
 * \u53c2\u6570\u8bf4\u660e:
 * select\uff1a		\u53ef\u4ee5\u81ea\u5b9a\u4e49\u9009\u9879\u6539\u53d8\u4ee5\u540e\u7684\u52a8\u4f5c\u3002
 * button\uff1a		\u662f\u5426\u663e\u793aDropdown button,\u7f3a\u7701\u4e3afalse\u3002
 * maxHeight:	\u4e0b\u62c9\u5217\u8868\u6846\u6700\u5927\u9ad8\u5ea6\uff0c\u8d85\u8fc7\u6b64\u9ad8\u5ea6\u663e\u793a\u6eda\u52a8\u6761\uff0c\u7f3a\u7701\u4e3a300\u3002
 * width:		\u4e0b\u62c9\u5217\u8868\u6846\u5bbd\u5ea6\uff0c\u5982\u672a\u8bbe\u7f6e\uff0c\u5219\u81ea\u52a8\u9002\u5e94\u6587\u672c\u6846\u5bbd\u5ea6\u3002
 * autoSize:	\u6839\u636e\u6570\u636e\u9879\u7684\u5b57\u6570,\u81ea\u9002\u5e94\u4e0b\u62c9\u5bbd\u5ea6,\u7f3a\u7701\u4e3afalse,\u6839\u636e\u6587\u672c\u6846\u5bbd\u5ea6\u9002\u5e94
 * appendBlank:	\u8ffd\u52a0\u7a7a\u9009\u9879\u6570\u636e,\u7f3a\u7701\u4e3atrue,\u8ffd\u52a0\u3002
 * bindSelect\uff1a	\u53ef\u4ee5\u7ed1\u5b9a\u8054\u52a8\u7684select\uff0c\u5f53autocomplete\u6539\u53d8\u65f6\u81ea\u52a8\u6839\u636e\u9009\u62e9\u66f4\u65b0\u8054\u52a8select\u7684\u503c\u3002
 * \u8be5\u53c2\u6570\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u6240\u7ed1\u5b9a\u7684select\u5bf9\u8c61,\u4e5f\u53ef\u4ee5\u4f20\u5165\u6839\u636e\u5f53\u524dautocomplete\u67e5\u627eselect\u5bf9\u8c61\u7684\u7b97\u6cd5\u3002
 * \u652f\u6301\u7ed1\u5b9ainput\uff0c\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\uff1av3xautocomplete.autocomplete('myinput',data,{bindSelect:function(ac){return jQuery(ac).parent().find('select')[0];// \u5f53\u524dautocomplete\u7684\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2aselect}});
 **/
V3XAutocomplete.prototype.autocomplete = function(inputName,data,options){
	var view = this._getViewElement(inputName);
	if (typeof(view) == 'undefined' || view == null || view[0] == null)
		return ;
	if(!view){
		return false;
	}
	// \u8ffd\u52a0\u7a7a\u9009\u9879
	var appendBlank = true;
	// \u663e\u793a\u4e0b\u62c9Button
	var showButton = true;
	// \u4e0b\u62c9\u9ad8\u5ea6
	var maxHeight = 240;
	// \u4e0b\u62c9\u5bbd\u5ea6,\u4e0d\u8bbe\u7f6e\u5219\u81ea\u9002\u5e94
	var width = 0;
	// \u81ea\u52a8\u6839\u636e\u5b57\u6570\u8bbe\u7f6e\u4e0b\u62c9\u5bbd\u5ea6
	var autosize = false;
	// \u8bb0\u5f55\u6240\u6709\u6570\u636e\u9879\u6587\u672c\u7684\u5b57\u6570
	var maxLen = 0;
	var nullItem = {id:'',value:''};
	var buttonWidth = 17;
	var isNull = data.length==0;
	if(!isNull && data.length ==1 && data[0].value=='') isNull = true;
	if(options){
		// \u7f13\u5b58,4 select
		jQuery(view).data('options',options);
		if(options.button !== undefined) showButton = options.button;
		if(options.maxHeight !== undefined) maxHeight = options.maxHeight;
		if(options.width !== undefined) width = options.width;
		if(options.autoSize !== undefined) autosize = options.autosize;
		if(options.appendBlank !== undefined) appendBlank = options.appendBlank;
	}

	// \u8f6c\u6362\u6570\u7ec4 \u4e3a\u9002\u5e94jquery,\u5c06value\u6539\u4e3aid,label\u6539\u4e3avalue
	var src = new Array();
	var l = data == null ? src : data;
	if(l.length>0){
		if(appendBlank){
			src.push(nullItem);
		}
		jQuery.each(l,function(i,val){
			var item = {id:val.value,value:val.label};
			if(item.value){
				src.push(item);
				var len = item.value.length;
				if(len>maxLen) maxLen = len; 
			}
		});
	}
	var isExist = function (val){
		for(var i in src){
			var item = src[i];
			// \u5b8c\u5168\u5339\u914d\u624d\u5224\u4e3a\u5b58\u5728,\u907f\u514d\u540cid\u4e0d\u540cvalue\u4e0d\u6e05\u9664
			if(item.id == val.id && item.value == val.value ){
				return true;
			}
		}
		return false;
	}

	var lastSelected = jQuery(view).data('current');
	jQuery(view).data('current',null);

	var onSelectItem = function( event, ui ) {
		if(!ui.item) return false;

		jQuery( document.getElementById(inputName) ).val( ui.item.id );
		jQuery(view).val( ui.item.value );
		// \u7f13\u5b58\u5f53\u524d\u9009\u4e2d\u9879
		jQuery(view).data('current',ui.item);
		onchange(options,ui.item,inputName,view);
		return false;
	};
	var clearValue = function(){
		// \u6e05\u7a7a\u503c,\u5e76\u89e6\u53d1onchange
		onSelectItem(null,{item:nullItem});
		jQuery(view).data('current',null);
	};
	if(showButton){
		var hasButton = view.next('button[name="acToggle"]').length>0;
		if(!hasButton){
			var style = "background-image:url('common/images/desc.gif');background-repeat:no-repeat;background-color: #ececec;background-position:center;width:"+buttonWidth+"px;height:21px;border:1px #d1d1d1 solid;";
			view.after('<button type="button" name="acToggle" tabindex="-1" onclick="v3xautocomplete.toggle(this.previousSibling);this.blur();" style="'+style+'"/>');
		}
	}
	var onchange = this._onchange;
	// \u65e0\u5339\u914d\u9879\u6062\u590d\u5f53\u524d\u9009\u4e2d\u9879
	jQuery(view).bind('blur',function(){
		var current = jQuery(view).data('current');
		if(current){
			if(jQuery(view).val()!= current.value ){
				jQuery(view).val(current.value);
			}
		}else{
			clearValue();
		}
	});
	// \u9f20\u6807\u70b9\u51fb\u83b7\u5f97\u7126\u70b9\u9009\u4e2d\u6587\u672c
	jQuery(view).bind('click',function(){
		this.select();
	});
	view.autocomplete({
		minLength: 0,
		source:src,
		autoFocus: true,
		delay: 0,
		focus: function( event, ui ) {
			//this.select();
			return false;
		},
		position: { collision:'flip'},
		//change: onSelectItem,
		select: onSelectItem,
		search: function(){
			var ui = jQuery(this).autocomplete("widget");
			ui.css('height','auto');
		},
		beforePosition: function(){
			var ui = jQuery(this).autocomplete("widget");
			// \u8c03\u6574\u9ad8\u5ea6
			if(ui.outerHeight() > maxHeight){
				// scroll
				ui.css('overflow-y', 'auto');
				ui.css('overflow-x', 'hidden');				
				var c = ui.children();
				if(c.size() * (c.height+2) > maxHeight){
					ui.css('height',maxHeight+'px');
				}
			}
		},
		open: function() { 
			var ui = jQuery(this).autocomplete("widget");
			// \u8c03\u6574\u5bbd\u5ea6
			var w;
			if(autosize){
				// \u6839\u636e\u6570\u636e\u9879\u81ea\u9002\u5e94\u5bbd\u5ea6
				w = maxLen * 8 + 20;
			}else{
				if(width){
					w = width;
				}else{
					w = jQuery(this).outerWidth();
					if(showButton){ 
						var buttonTop = view.next('button[name="acToggle"]').position().top;
						var buttonWrap = (buttonTop >= (view.position().top + view.outerHeight()));
						if(!buttonWrap) w += buttonWidth;
					}
				}
			}
			// \u907f\u514d\u592a\u6781\u7aef\u7684\u503c
			var viewWidth = view.outerWidth();
			if(w < 120) w = 120;
			if(w<0 || (w > 500 && w > (viewWidth + buttonWidth))) w = 300;
			ui.width(w);

			// \u4e0d\u6362\u884c,\u8d85\u51fa\u5bbd\u5ea6\u9690\u85cf
			ui.find('.ui-menu-item').css('overflow','hidden').css('white-space','nowrap');
			ui.find("li").each(function(i,item){
				item.title = item.innerText;
			});
			// \u6eda\u52a8\u5219\u9690\u85cf,\u907f\u514d\u7236\u5bb9\u5668height:100% + overflow:auto \u65f6\u4e0b\u62c9\u9762\u677f\u4e0d\u8ddf\u968f\u6eda\u52a8
			jQuery(view.parents()).scroll(function() {
				ui.css('display','none');
			});
			// jQuery ui flip\u6a21\u5f0ftop\u6821\u6b63
			var uiTop = ui.position().top;
			var uiHeight = ui.outerHeight();
			var inputTop = view.position().top;
			var viewHeight = view.outerHeight();
			if(uiTop<0){
				uiTop = 0;
				if(uiHeight<inputTop){
					uiTop = inputTop - uiHeight;
				}
				uiHeight = inputTop-uiTop;
				ui.css('top',uiTop +'px');
				ui.css('height',uiHeight +'px');
			}
			// \u98d8\u5728\u4e0a\u65b9
			if(uiTop+uiHeight<inputTop){
				uiTop = inputTop - uiHeight;
				ui.css('top',uiTop +'px');
			}
			// \u906e\u4f4f\u4e86Input
			if(uiTop+uiHeight>inputTop+viewHeight){
				uiTop = inputTop + viewHeight;
				ui.css('top',uiTop +'px');
			}
			ui.css('left',view.position().left + 'px');
		}
	});
	var isLastExist = false;
	// \u68c0\u67e5\u4e0a\u4e00\u4e2aautocomplete\u662f\u5426\u6709\u9009\u4e2d\u503c
	if(lastSelected!=null){
		//\u4e0a\u4e00\u6b21\u9009\u62e9\u4e3a\u5f53\u524d\u6570\u636e\u4e2d\u7684\u503c\u4e0d\u6e05\u9664
		isLastExist = isExist(lastSelected);
		if(!isLastExist)clearValue();
	}

	// \u65e0\u6570\u636e\u9879\u5219\u6e05\u7a7a\u5e76\u505c\u7528
	if(isNull){
		clearValue();
		view[0].disabled = true;
		if(showButton) view.next('button[name="acToggle"]').attr('disabled', true).css('opacity', '0.4');
	}else{
		view[0].disabled = false;
		if(showButton) view.next('button[name="acToggle"]').attr('disabled', false).css('opacity', '1');
		if(options && (options.value||options.value==null)){
			var value = options.value;
			var isExist = false;
			if(value!=null){
				jQuery.each(src,function(i,val){
					if(val.id==value ){
						isExist = true;
						return ;
					}				
				});
			}
			// \u521d\u59cb\u5316\u8bbe\u7f6e\u7684\u503c\u4e0d\u5b58\u5728\u5219\u6e05\u7a7a\u503c
			if(isExist){
				if(typeof inputName == 'string'){
					this.select(inputName,value);
				}else{
					this.select(view,value);
				}
			}else{
				if(!isLastExist){
					clearValue();
				}else{
					// \u6062\u590dlast
					jQuery(view).data('current',lastSelected);
				}
			}
		}else{
			if(jQuery(view).val()){
				clearValue();
			}
		}
	}
}		
/**
 * \u9009\u4e2d\u6307\u5b9a\u503c\uff0c\u5982\u679c\u503c\u672a\u627e\u5230\u5219\u65e0\u52a8\u4f5c
 **/
V3XAutocomplete.prototype.select = function(inputName,value){
	var view = this._getViewElement(inputName);
	var source = view.autocomplete("option",'source');
	if(!source) return false;

	var options = jQuery(view).data('options');
	var onchange = this._onchange;
	jQuery.each(source, function(i, val) {
		if(val.id==value){
			jQuery(document.getElementById(inputName)).val(val.id);
			view.val(val.value);
			// \u7f13\u5b58\u5f53\u524d\u9009\u4e2d\u9879
			jQuery(view).data('current',val);
			onchange(options,val,inputName,view);
			return true;
		}
	});
}
/**
 * \u5237\u65b0Autocomplete,\u89e6\u53d1\u76f8\u5e94\u7684\u4e8b\u4ef6.
 **/
V3XAutocomplete.prototype.refresh = function(inputName){
	var view = this._getViewElement(inputName);
	var current = jQuery(view).data('current');
	if(current){
		this._disableEvent = true;
		this.select(view,current.id);
		this._disableEvent = false;
	}
}
V3XAutocomplete.prototype.disableEvent = function (v){
	this._disableEvent = v;
}
V3XAutocomplete.prototype.getData = function(inputName){
	var view = this._getViewElement(inputName);
	var src = view.autocomplete('option','source');
	// \u8f6c\u6362\u6570\u7ec4 \u4e3a\u9002\u5e94jquery,\u5c06value\u6539\u4e3aid,label\u6539\u4e3avalue
	var data = new Array();;
	jQuery.each(src,function(i,val){
		var item = {value:val.id,label:val.value};
		if(item.value)data.push(item);
	});
	return data;
}
/**
 * \u590d\u5236src Autocomplete\u5230target,\u590d\u5236\u8303\u56f4\u5305\u62ec\u6570\u636e\u548c\u7ed1\u5b9a\u4e8b\u4ef6\u7b49\u53c2\u6570.
 **/
V3XAutocomplete.prototype.copy = function(src,target){
	var view = this._getViewElement(src);
	var source = view.autocomplete('option','source');
	// \u8f6c\u6362\u6570\u7ec4 \u4e3a\u9002\u5e94jquery,\u5c06value\u6539\u4e3aid,label\u6539\u4e3avalue
	var data = new Array();;
	jQuery.each(source,function(i,val){
		var item = {value:val.id,label:val.value};
		if(item.value)data.push(item);
	});
	jQuery(src).unbind('click');

	var options = jQuery(view).data('options');
	try{
		if(jQuery.expando){
			jQuery(target).removeAttr( jQuery.expando );
		}
	}catch(e){
	}
	var value = jQuery(view).data('current');
	if(value){
		options.value = value.id;
	}

	this.autocomplete(target,data,options);

}
/**
 * \u5207\u6362autocomplete\u7684\u4e0b\u62c9\u72b6\u6001\u3002
 **/
V3XAutocomplete.prototype.toggle = function(inputName){
	var view = this._getViewElement(inputName);
    if ( view.autocomplete( 'widget' ).is( ':visible' ) ) {
        view.autocomplete( 'close' );
        return;
    }
    //jQuery( 'btn_' + inputName + '_autocomplete').blur();
    view.autocomplete( 'search', '' );
    view.focus();
}
/**
 * \u751f\u6210autocomplete\u6240\u9700\u7684input html\u4ee3\u7801\u3002
 */
V3XAutocomplete.prototype.build = function(inputName,data){
    function buildHtmlAttributes( attributes){
    	var html = new Array();; 
		jQuery.each(attributes,function(i,entry){
			if(entry.key)
			html.push(entry.key,'="',entry.value,'" ');
		});
    	return html.join('');
    }
	var html = new Array();
	// \u751f\u6210\u4e24\u4e2ainput\u548c\u4e00\u4e2adropdown button
	var inputDisplayName = inputName + '_autocomplete';
	html.push("<input ",buildHtmlAttributes([{key:"name", value:inputName},{key:"id", value:inputName},{key:"type", value:"hidden"}])," />");
	html.push("<input ",buildHtmlAttributes([{key:"name", value:inputDisplayName},
	                                         {key:"id", value:inputDisplayName},
	                                         {key:"type", value:"text"},
	                                         {key:"class", value:"input_autocomplete"},
	                                         {key:"onclick",value:"v3xautocomplete.toggle('" + inputName + "');"}]),
	                                         " />\n");

	// \u751f\u6210\u811a\u672c\uff0c\u8c03\u7528js autocomplete\u7ec4\u4ef6\uff0c\u521d\u59cb\u5316input\u3002
	html.push("<script>\n");

	html.push("v3xautocomplete.autocomplete(","'",inputName,"',",data,");\n");
	html.push('</script>');

	return( html.join('') );

}


//////\u4ee5\u4e0b\u4e3a\u9996\u9875\u505a\u67e5\u8be2\u7edf\u8ba1\u7a7f\u900f\u529f\u80fd//////////
var postUrl ='';
function getQueryCondition(row, col ,len){
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	var firstTr = reportTable.rows[0];//\u53d6\u5f97\u7edf\u8ba1\u8868\u7684\u7b2c\u4e00\u884c
	var rowHeadCount = len;
	var bCrossTable = isCrossTable();
	//\u5982\u679c\u662f\u4ea4\u53c9\u62a5\u8868\u9700\u8981\u5f97\u5230\u884c\u5934\u548c\u5217\u5934\u7684\u503c
	if(bCrossTable){
		rowHeadCount = 0;
		var colSpan; 
		var firstTrCellsLength = firstTr.cells.length//\u7b2c\u4e00\u884c\u5355\u5143\u683c\u4e2a\u6570
		for(var i = 0; i < firstTrCellsLength; i++){
			var ftd = firstTr.cells[i];
			if(ftd.getAttribute("rowspan") == "2")
				rowHeadCount++;//\u884c\u5934\u6570+1
			
			if(ftd.getAttribute("colspan") != null)
			 	colSpan = parseInt(ftd.getAttribute("colspan"));
			
		}
	}
	if(col > (rowHeadCount - 1)){
		var str = "";
		for(var i = 0; i < rowHeadCount; i++){
			str += getRowHead(i, row) + ",";
		}
		
		if(bCrossTable){
			str += getColHead(rowHeadCount, colSpan, col) + ",";
			str += getCrossDataCol(rowHeadCount, col) + ",";
		}else{
			str += getDataCol(col) + ",";
		}
		var showdetail = document.all("showdetail").value;
		postUrl =getBaseURL()+"/formreport.do?method=showReportQuery&str=" + encodeURIComponent(str);
		
		
		var width = screen.width - 155;
		var height = screen.height - 300;
		
		v3x.openWindow({
        url: getBaseURL()+"/formreport.do?method=openShowReportQuery",
        workSpace: 'yes',
        dialogType: "modal",
        resizable: false
		});
		return;
	}
}
function getSummaryId(url){
	var requestCaller = new XMLHttpRequestCaller(null, "", "", false, "GET", "false", url);
	var rs = requestCaller.serviceRequest();
	return rs;
}
function showQueryTable(selrownumber){
 var showdetail = document.getElementById("showdetail").value;
 var formname = document.getElementById("formname").value;
 var formid = document.getElementById("formid").value;
 var queryname = document.getElementById("queryname").value;
 var isFlow = document.getElementById("isFlow").value;
 if(isFlow == "true"){
	 var url=getBaseURL()+"/formquery.do?method=hasSummaryId&id="+selrownumber+"&showdetail="+encodeURIComponent(showdetail)+"&formid="+formid+"&formname="+formname;
	 var strSummaryId = getSummaryId(url);
	 if(strSummaryId.trim() == "null"){
	 	alert(v3x.getMessage("formLang.formquery__selectnone"));
	 }else{
	    if(strSummaryId.indexOf("|") >-1){
	        url = getBaseURL()+"/formquery.do?method=collFrameViewRelate&summaryId="+strSummaryId+"&showdetail="+encodeURIComponent(showdetail)+"&appid="+formid+"&queryname="+encodeURIComponent(queryname);
	 	    v3x.openWindow({url: url, workSpace: 'yes',dialogType:v3x.getBrowserFlag('pageBreak')?'modal':'open'});
	    }else{
	    	url = getBaseURL()+"/formquery.do?method=showRecordDetail&summaryId="+strSummaryId+"&showdetail="+encodeURIComponent(showdetail)+"&appid="+formid+"&queryname="+encodeURIComponent(queryname);
	 	    v3x.openWindow({url: url, workSpace: 'yes',dialogType:v3x.getBrowserFlag('pageBreak')?'modal':'open'});
	    }
	 }
 }
 else if(isFlow == "false"){
	 var appShowDetail = document.getElementById("appShowDetail").value;
	 v3x.openWindow({
		url :getBaseURL()+"/appFormController.do?method=viewFormData&isOpenWin=true&appformId="+formid+"&masterId="+selrownumber+"&showDetail="+encodeURIComponent(appShowDetail),
		dialogType: "modal",
		workSpace: 'yes',
		resizable : "true"
	});
 }
 
}

function isCrossTable(){//\u662f\u5426\u662f\u4ea4\u53c9\u62a5\u8868
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	var firstTr = reportTable.rows[0];//\u53d6\u5f97\u7edf\u8ba1\u8868\u7684\u7b2c\u4e00\u884c
	var firstTrCellsLength = firstTr.cells.length;//\u7b2c\u4e00\u884c\u5355\u5143\u683c\u4e2a\u6570
	for(var i = 0; i < firstTrCellsLength; i++){
		var ftd = firstTr.cells[i];
		if(ftd.getAttribute("rowspan") == "2"){
			 return true;//\u662f\u4ea4\u53c9\u62a5\u8868
		}
	}
	return false;
}

/*
	rowHeadCount \u884c\u5934\u6570
	colspan      \u6570\u636e\u5217\u5217\u6570
	col          \u5f53\u524d\u70b9\u4e2d\u7684\u6570\u636e\u7684\u5217\u6570
*/
function getColHead(rowHeadCount, colSpan, col){
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	var firstTr = reportTable.rows[0];//\u53d6\u5f97\u7edf\u8ba1\u8868\u7684\u7b2c\u4e00\u884c
	return firstTr.cells[Math.floor((col - rowHeadCount) / colSpan) + rowHeadCount].getAttribute("value");  
}

/*
	\u5f97\u5230\u4ea4\u53c9\u7edf\u8ba1\u62a5\u8868\u6570\u636e\u5217
	rowHeadCount \u884c\u5934\u6570
	col          \u5f53\u524d\u70b9\u4e2d\u7684\u6570\u636e\u7684\u5217\u6570
*/
function getCrossDataCol(rowHeadCount, col){
	//var secondTr = reportTable.rows[1];
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	return reportTable.rows[1].cells[col - rowHeadCount].getAttribute("value");
}

/*
	\u5f97\u5230\u666e\u901a\u62a5\u8868\u7684\u6570\u636e\u5217
*/
function getDataCol(col){
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	return reportTable.rows[0].cells[col].getAttribute("value");
}

function getRowHead(rowHeadCount, row){
	var reportTable = document.getElementById("ftable");//\u53d6\u5f97\u7edf\u8ba1\u8868
	return reportTable.rows[row].cells[rowHeadCount].getAttribute("value");
}

/**
 * \u65b0\u5efa\u8ba1\u5212
 */
function newPlan(url, type, time){
	getA8Top().contentFrame.mainFrame.location.href = url + "?method=initAdd&type=" + type + "&time=" + time;
}

/**
 * \u65b0\u5efa\u4efb\u52a1
 */
function newTask(url, time) {
	var ret = v3x.openWindow({
		url     	: url + "?method=addTaskPageFrame&from=timing&time=" + time,
		width   	: 530,
		height  	: 480,
		resizable	: false
	});
	
	if(ret || ret == 'true') {
		window.location.href = window.location.href;
	}
}

/**
 * \u65b0\u5efa\u65e5\u7a0b
 */
function newCal(url, time){
	var ret = v3x.openWindow({
		url			: url + "?method=createEvent&time=" + time,
		width		: 530,
		height		: 480,
        resizable	: false
	});
	
	if(ret && ret=='true'){
		window.location.href = window.location.href;
	}
}

/**
 * \u65b0\u5efa\u4f1a\u8bae
 */
function newMeeting(url, time){
	getA8Top().contentFrame.mainFrame.location.href = url + "?method=create&formOper=new&time=" + time;
}
/**
 * \u5224\u65ad\u5de6\u4fa7\u9762\u677f\u662f\u5426\u5173\u95ed
 */
function isLeftClose(){
	return  getA8Top().contentFrame.document.getElementById("LeftRightFrameSet").cols == "142,*";
}

// CTP Adapter
function showCtpLocation(code,options){
  var top = getA8Top();
  if(options && options.html){
    if(top.showLocation)top.showLocation(options.html);
    return;
  }
  if(top.$){
		function findMenu(code){
		  if(top.$){
		     function buildResourceMenuMap(menus,parentMenu,map){
		      for (var i = 0; i < menus.length; i++) {
		        var menu = menus[i];
		        menu.parentMenu = parentMenu;
		        var resourceCode = menu.resourceCode;
		        if(resourceCode!=null){
		          map[resourceCode]=menu;
		        }
		        if(menu.items){
		          buildResourceMenuMap(menu.items,menu,map);
		        }
		      };
		    }; 	
		    var allmenu = top.$.ctx.menu;
		    if(allmenu){
		      var cacheKey = 'resourceMenuCache';
		      var cache = top.$.data(top.document.body,cacheKey);
		      if(cache == undefined){
		        cache = new Array();
		        buildResourceMenuMap(allmenu,null,cache);
		        top.$.data(top.document.body,cacheKey,cache);   
		      };
		      var result = [];
		      var menu = cache[code];
		      if(menu != undefined ){
		        while(menu!= null){
		          result.push(menu);
		          menu = menu.parentMenu; 
		        };
		      };
		      return result.reverse(); 
		    };
		  };
		  return [];
		};  	
  	var menus = findMenu(code);
	  if(menus.length>0){
	      var key = '\u5f53\u524d\u4f4d\u7f6e\uff1a';
	      if(top.$){
	      	key = top.$.i18n('seeyon.top.nowLocation.label')
	      }
	      var html = '<span class="margin_r_10">'+key+'</span>';
	      var items = [];
	      for (var i = 0; i < menus.length; i++) {
	        if(menus[i].url){
	          items.push('<a href="###" onclick="showMenu(\'' +v3x.baseURL+ menus[i].url + '\')">' + menus[i].name + '</a>');
	        }else{
	          items.push('<a style="color:#888;">' + menus[i].name + '</a>');
	        }
	      };
	      html+= items.join('<span class="common_crumbs_next margin_lr_5">-</span>');
      	if(options && options.surffix){
      		html += '-' + options.surffix;
      	}
      	//\u9996\u9875\u663e\u793a\u5f53\u524d\u4f4d\u7f6e
      	top.showLocation(html);
	  }
  }
}
/**
 * \u6e05\u9664\u5f53\u524d\u4f4d\u7f6e\u3002
 */
function resetCtpLocation(){
  var top = getA8Top();
  if(top && top.hideLocation){
    //top.showLocation('');
    top.hideLocation();
  }
}
// \u6253\u5f00\u6b63\u6587\u7f16\u8f91\u5668\u63d2\u5165\u7684\u5173\u8054
function openEditorAssociate(id,mimeType,description,reference,category,createDate,filename,v){
	function getContextPath(){
	    if(v3x){
	      return v3x.baseURL ? v3x.baseURL: parent._ctxPath;
	    }
	    return '/seeyon';       
	}		
    var url;
    var isDownload = false;
    var moduleId = document.getElementById('moduleId');
    if(moduleId!=null){
    	reference =  moduleId.value;
    }else if(typeof(summary_id)!==undefined  &&  (typeof(summary_id)!=='undefined')){
		reference = summary_id;
    }if(typeof(_baseObjectId)!==undefined  &&  (typeof(_baseObjectId)!=='undefined')){
		reference = _baseObjectId;
    }
    var moduleType = document.getElementById('moduleType');
    if(moduleType!=null){
    	category = moduleType.value;
    }else if(typeof(_baseApp)!==undefined  &&  (typeof(_baseApp)!=='undefined')){
		category = _baseApp;
    }
    if(mimeType == "collaboration"){
        url = "collaboration/collaboration.do?method=summary&openFrom=glwd&type=&affairId="+ description +"&baseObjectId=" + reference +"&baseApp="+ category;
    }
    else if(mimeType == "edoc"){
        url = "/edocController.do?method=detailIFrame&from=Done&openFrom=glwd&affairId=" + description + "&isQuote=true&baseObjectId=" + reference +"&baseApp=4";//+ category;
    }
    else if(mimeType == "km"){
        url = "doc.do?method=docOpenIframeOnlyId&openFrom=glwd&docResId=" + description + "&baseObjectId=" + reference +"&baseApp="+ category ;
    }
    else if(mimeType == "meeting") {
        url = "mtMeeting.do?method=myDetailFrame&id=" + description + "&isQuote=true&baseObjectId=" + reference +"&baseApp="+ category + "&state=10";
    }else{
    	isDownload = true;
        url = 'fileUpload.do?method=download&fileId='+id+'&createDate='+createDate.substring(0, 10)+'&filename='+encodeURI(filename)+'&v='+v;
    }
    url = url + '&fromEditor=1';
    url = getContextPath() + '/' + url;
    if(isDownload){
   		var downloadFileFrame = document.getElementById('downloadFileFrame');
   		if(downloadFileFrame){
   			downloadFileFrame.src = url;
   		}else{
   			window.open(url,'_blank');
   		}
    }else{
 		openDetailURL(url);
	}
}
function closeAllDialog(tw){
  var targetWindow = window; 
  if(tw){
    targetWindow = tw;
  }
  targetWindow.$('.mask').remove();
  targetWindow.$('.dialog_box').remove();
  targetWindow.$('.shield').remove();
  targetWindow.$('.mxt-window').remove();
}
/*!
 * jQuery JavaScript Library v1.8.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: Tue Nov 13 2012 08:20:33 GMT-0500 (Eastern Standard Time)
 */
(function( window, undefined ) {
var
	// A central reference to the root jQuery(document)
	rootjQuery,

	// The deferred used on DOM ready
	readyList,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,
	location = window.location,
	navigator = window.navigator,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// Save a reference to some core methods
	core_push = Array.prototype.push,
	core_slice = Array.prototype.slice,
	core_indexOf = Array.prototype.indexOf,
	core_toString = Object.prototype.toString,
	core_hasOwn = Object.prototype.hasOwnProperty,
	core_trim = String.prototype.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,

	// Used for detecting and trimming whitespace
	core_rnotwhite = /\S/,
	core_rspace = /\s+/,

	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	rquickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// The ready event handler and self cleanup method
	DOMContentLoaded = function() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
			jQuery.ready();
		} else if ( document.readyState === "complete" ) {
			// we're here because readyState === "complete" in oldIE
			// which is good enough for us to call the dom ready!
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	},

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context && context.nodeType ? context.ownerDocument || context : document );

					// scripts is true for back-compat
					selector = jQuery.parseHTML( match[1], doc, true );
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						this.attr.call( selector, context, true );
					}

					return jQuery.merge( this, selector );

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.8.3",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ),
			"slice", core_slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready, 1 );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ? //OA-30826 \u4fee\u590dIE9\u4e0bString\u672a\u5b9a\u4e49\u9519\u8bef String( obj )
			"null" :
			class2type[ core_toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!core_hasOwn.call(obj, "constructor") &&
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || core_hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// scripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, scripts ) {
		var parsed;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			scripts = context;
			context = 0;
		}
		context = context || document;

		// Single tag
		if ( (parsed = rsingleTag.exec( data )) ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );
		return jQuery.merge( [],
			(parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );
	},

	parseJSON: function( data ) {
		if ( !data || typeof data !== "string") {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && core_rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var name,
			i = 0,
			length = obj.length,
			isObj = length === undefined || jQuery.isFunction( obj );

		if ( args ) {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.apply( obj[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( obj[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Use native String.trim function wherever possible
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
		function( text ) {
			return text == null ?
				"" :
				core_trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var type,
			ret = results || [];

		if ( arr != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			type = jQuery.type( arr );

			if ( arr.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( arr ) ) {
				core_push.call( ret, arr );
			} else {
				jQuery.merge( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( core_indexOf ) {
				return core_indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key,
			ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
		var exec,
			bulk = key == null,
			i = 0,
			length = elems.length;

		// Sets many values
		if ( key && typeof key === "object" ) {
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
			}
			chainable = 1;

		// Sets one value
		} else if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = pass === undefined && jQuery.isFunction( value );

			if ( bulk ) {
				// Bulk operations only iterate when executing function values
				if ( exec ) {
					exec = fn;
					fn = function( elem, key, value ) {
						return exec.call( jQuery( elem ), value );
					};

				// Otherwise they run against the entire set
				} else {
					fn.call( elems, value );
					fn = null;
				}
			}

			if ( fn ) {
				for (; i < length; i++ ) {
					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
				}
			}

			chainable = 1;
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready, 1 );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.split( core_rspace ), function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				return jQuery.inArray( fn, list ) > -1;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				args = args || [];
				args = [ context, args.slice ? args.slice() : args ];
				if ( list && ( !fired || stack ) ) {
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?
								function() {
									var returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								} :
								newDefer[ action ]
							);
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ] = list.fire
			deferred[ tuple[0] ] = list.fire;
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		fragment,
		eventName,
		i,
		isSupported,
		clickFn,
		div = document.createElement("div");

	// Setup
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// Support tests won't run in some limited or non-browser environments
	all = div.getElementsByTagName("*");
	a = div.getElementsByTagName("a")[ 0 ];
	if ( !all || !a || !all.length ) {
		return {};
	}

	// First batch of tests
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px;float:left;opacity:.5";
	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.5/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form (#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode
		boxModel: ( document.compatMode === "CSS1Compat" ),

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true,
		boxSizingReliable: true,
		pixelPosition: false
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", clickFn = function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent("onclick");
		div.detachEvent( "onclick", clickFn );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";

	input.setAttribute( "checked", "checked" );

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "name", "t" );

	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for ( i in {
			submit: true,
			change: true,
			focusin: true
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, div, tds, marginDiv,
			divReset = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName("td");
		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check box-sizing and margin behavior
		div.innerHTML = "";
		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
		support.boxSizing = ( div.offsetWidth === 4 );
		support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );

		// NOTE: To any future maintainer, we've window.getComputedStyle
		// because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. For more
			// info see bug #3333
			// Fails in WebKit before Feb 2011 nightlies
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = document.createElement("div");
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			div.appendChild( marginDiv );
			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.innerHTML = "";
			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "block";
			div.style.overflow = "visible";
			div.innerHTML = "<div></div>";
			div.firstChild.style.width = "5px";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

			container.style.zoom = 1;
		}

		// Null elements to avoid leaks in IE
		body.removeChild( container );
		container = div = tds = marginDiv = null;
	});

	// Null elements to avoid leaks in IE
	fragment.removeChild( div );
	all = a = select = opt = input = fragment = div = null;

	return support;
})();
var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	deletedIds: [],

	// Remove at next major release (1.9/2.0)
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = jQuery.deletedIds.pop() || jQuery.guid++;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split(" ");
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject( cache[ id ] ) ) {
				return;
			}
		}

		// Destroy the cache
		if ( isNode ) {
			jQuery.cleanData( [ elem ], true );

		// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
		} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
			delete cache[ id ];

		// When all else fails, null
		} else {
			cache[ id ] = null;
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

		// nodes accept data unless otherwise specified; rejection can be conditional
		return !noData || noData !== true && elem.getAttribute("classid") === noData;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, part, attr, name, l,
			elem = this[0],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attr = elem.attributes;
					for ( l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( !name.indexOf( "data-" ) ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split( ".", 2 );
		parts[1] = parts[1] ? "." + parts[1] : "";
		part = parts[1] + "!";

		return jQuery.access( this, function( value ) {

			if ( value === undefined ) {
				data = this.triggerHandler( "getData" + part, [ parts[0] ] );

				// Try to fetch any internally stored data first
				if ( data === undefined && elem ) {
					data = jQuery.data( elem, key );
					data = dataAttr( elem, key, data );
				}

				return data === undefined && parts[1] ?
					this.data( parts[0] ) :
					data;
			}

			parts[1] = value;
			this.each(function() {
				var self = jQuery( this );

				self.triggerHandler( "setData" + part, parts );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + part, parts );
			});
		}, null, value, arguments.length > 1, null, false );
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				// Only convert to a number if it doesn't change the string
				+data + "" === data ? +data :
				rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery.removeData( elem, type + "queue", true );
				jQuery.removeData( elem, key, true );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook, fixSpecified,
	rclass = /[\t\r\n]/g,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea|)$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( setClass.indexOf( " " + classNames[ c ] + " " ) < 0 ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var removes, className, elem, c, cl, i, l;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}
		if ( (value && typeof value === "string") || value === undefined ) {
			removes = ( value || "" ).split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];
				if ( elem.nodeType === 1 && elem.className ) {

					className = (" " + elem.className + " ").replace( rclass, " " );

					// loop over each item in the removal list
					for ( c = 0, cl = removes.length; c < cl; c++ ) {
						// Remove until there is nothing to remove,
						while ( className.indexOf(" " + removes[ c ] + " ") >= 0 ) {
							className = className.replace( " " + removes[ c ] + " " , " " );
						}
					}
					elem.className = value ? jQuery.trim( className ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( core_rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val,
				self = jQuery(this);

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	// Unused in 1.8, left in so attrFn-stabbers won't die; remove in 1.9
	attrFn: {},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, isBool,
			i = 0;

		if ( value && elem.nodeType === 1 ) {

			attrNames = value.split( core_rspace );

			for ( ; i < attrNames.length; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;
					isBool = rboolean.test( name );

					// See #9699 for explanation of this approach (setting first, then removal)
					// Do not do this for boolean attributes (see #10870)
					if ( !isBool ) {
						jQuery.attr( elem, name, "" );
					}
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( isBool && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true,
		coords: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.value !== "" : ret.specified ) ?
				ret.value :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.value = value + "" );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});
var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*|)(?:\.(.+)|)$/,
	rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var t, tns, type, origType, namespaces, origCount,
			j, events, special, eventType, handleObj,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, "events", true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,
			type = event.type || event,
			namespaces = [];

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			for ( old = elem; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old === (elem.ownerDocument || document) ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,
			handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = core_slice.call( arguments ),
			run_all = !event.exclusive && !event.namespace,
			special = jQuery.event.special[ event.type ] || {},
			handlerQueue = [];

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers that should run if there are delegated events
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !(event.button && event.type === "click") ) {

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

				// Don't process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					selMatch = {};
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						sel = handleObj.selector;

						if ( selMatch[ sel ] === undefined ) {
							selMatch[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( selMatch[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, matches: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328; IE6/7/8)
		event.metaKey = !!event.metaKey;

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "_submit_attached" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "_submit_attached", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "_change_attached" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "_change_attached", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) { // && selector != null
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});
/*!
 * Sizzle CSS Selector Engine
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://sizzlejs.com/
 */
(function( window, undefined ) {

var cachedruns,
	assertGetIdNotName,
	Expr,
	getText,
	isXML,
	contains,
	compile,
	sortOrder,
	hasDuplicate,
	outermostContext,

	baseHasDuplicate = true,
	strundefined = "undefined",

	expando = ( "sizcache" + Math.random() ).replace( ".", "" ),

	Token = String,
	document = window.document,
	docElem = document.documentElement,
	dirruns = 0,
	done = 0,
	pop = [].pop,
	push = [].push,
	slice = [].slice,
	// Use a stripped-down indexOf if a native one is unavailable
	indexOf = [].indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	// Augment a function for special use by Sizzle
	markFunction = function( fn, value ) {
		fn[ expando ] = value == null || value;
		return fn;
	},

	createCache = function() {
		var cache = {},
			keys = [];

		return markFunction(function( key, value ) {
			// Only keep the most recent entries
			if ( keys.push( key ) > Expr.cacheLength ) {
				delete cache[ keys.shift() ];
			}

			// Retrieve with (key + " ") to avoid collision with native Object.prototype properties (see Issue #157)
			return (cache[ key + " " ] = value);
		}, cache );
	},

	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),

	// Regex

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	operators = "([*^$|!~]?=)",
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments not in parens/brackets,
	//   then attribute selectors and non-pseudos (denoted by :),
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + attributes + ")|[^:]|\\\\.)*|.*))\\)|)",

	// For matchExpr.POS and matchExpr.needsContext
	pos = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
		"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*" ),
	rpseudo = new RegExp( pseudos ),

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,

	rnot = /^:not/,
	rsibling = /[\x20\t\r\n\f]*[+~]/,
	rendsWithNot = /:not\($/,

	rheader = /h\d/i,
	rinputs = /input|select|textarea|button/i,

	rbackslash = /\\(?!\\)/g,

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"NAME": new RegExp( "^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"POS": new RegExp( pos, "i" ),
		"CHILD": new RegExp( "^:(only|nth|first|last)-child(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		// For use in libraries implementing .is()
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|" + pos, "i" )
	},

	// Support

	// Used for testing something on an element
	assert = function( fn ) {
		var div = document.createElement("div");

		try {
			return fn( div );
		} catch (e) {
			return false;
		} finally {
			// release memory in IE
			div = null;
		}
	},

	// Check if getElementsByTagName("*") returns only elements
	assertTagNameNoComments = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	}),

	// Check if getAttribute returns normalized href attributes
	assertHrefNotNormalized = assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&
			div.firstChild.getAttribute("href") === "#";
	}),

	// Check if attributes should be retrieved by attribute nodes
	assertAttributes = assert(function( div ) {
		div.innerHTML = "<select></select>";
		var type = typeof div.lastChild.getAttribute("multiple");
		// IE8 returns a string for some attributes even when not present
		return type !== "boolean" && type !== "string";
	}),

	// Check if getElementsByClassName can be trusted
	assertUsableClassName = assert(function( div ) {
		// Opera can't find a second classname (in 9.6)
		div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
		if ( !div.getElementsByClassName || !div.getElementsByClassName("e").length ) {
			return false;
		}

		// Safari 3.2 caches class attributes and doesn't catch changes
		div.lastChild.className = "e";
		return div.getElementsByClassName("e").length === 2;
	}),

	// Check if getElementById returns elements by name
	// Check if getElementsByName privileges form controls or returns elements by ID
	assertUsableName = assert(function( div ) {
		// Inject content
		div.id = expando + 0;
		div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
		docElem.insertBefore( div, docElem.firstChild );

		// Test
		var pass = document.getElementsByName &&
			// buggy browsers will return fewer than the correct 2
			document.getElementsByName( expando ).length === 2 +
			// buggy browsers will return more than the correct 0
			document.getElementsByName( expando + 0 ).length;
		assertGetIdNotName = !document.getElementById( expando );

		// Cleanup
		docElem.removeChild( div );

		return pass;
	});

// If slice is not available, provide a backup
try {
	slice.call( docElem.childNodes, 0 )[0].nodeType;
} catch ( e ) {
	slice = function( i ) {
		var elem,
			results = [];
		for ( ; (elem = this[i]); i++ ) {
			results.push( elem );
		}
		return results;
	};
}

function Sizzle( selector, context, results, seed ) {
	results = results || [];
	context = context || document;
	var match, elem, xml, m,
		nodeType = context.nodeType;

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( nodeType !== 1 && nodeType !== 9 ) {
		return [];
	}

	xml = isXML( context );

	if ( !xml && !seed ) {
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {
				push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );
				return results;
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed, xml );
}

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	return Sizzle( expr, null, null, [ elem ] ).length > 0;
};

// Returns a function to use in pseudos for input types
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

// Returns a function to use in pseudos for buttons
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

// Returns a function to use in pseudos for positionals
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (see #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes
	} else {

		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	}
	return ret;
};

isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Element contains another
contains = Sizzle.contains = docElem.contains ?
	function( a, b ) {
		var adown = a.nodeType === 9 ? a.documentElement : a,
			bup = b && b.parentNode;
		return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );
	} :
	docElem.compareDocumentPosition ?
	function( a, b ) {
		return b && !!( a.compareDocumentPosition( b ) & 16 );
	} :
	function( a, b ) {
		while ( (b = b.parentNode) ) {
			if ( b === a ) {
				return true;
			}
		}
		return false;
	};

Sizzle.attr = function( elem, name ) {
	var val,
		xml = isXML( elem );

	if ( !xml ) {
		name = name.toLowerCase();
	}
	if ( (val = Expr.attrHandle[ name ]) ) {
		return val( elem );
	}
	if ( xml || assertAttributes ) {
		return elem.getAttribute( name );
	}
	val = elem.getAttributeNode( name );
	return val ?
		typeof elem[ name ] === "boolean" ?
			elem[ name ] ? name : null :
			val.specified ? val.value : null :
		null;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	// IE6/7 return a modified href
	attrHandle: assertHrefNotNormalized ?
		{} :
		{
			"href": function( elem ) {
				return elem.getAttribute( "href", 2 );
			},
			"type": function( elem ) {
				return elem.getAttribute("type");
			}
		},

	find: {
		"ID": assertGetIdNotName ?
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [m] : [];
				}
			} :
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );

					return m ?
						m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ?
							[m] :
							undefined :
						[];
				}
			},

		"TAG": assertTagNameNoComments ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== strundefined ) {
					return context.getElementsByTagName( tag );
				}
			} :
			function( tag, context ) {
				var results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					var elem,
						tmp = [],
						i = 0;

					for ( ; (elem = results[i]); i++ ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			},

		"NAME": assertUsableName && function( tag, context ) {
			if ( typeof context.getElementsByName !== strundefined ) {
				return context.getElementsByName( name );
			}
		},

		"CLASS": assertUsableClassName && function( className, context, xml ) {
			if ( typeof context.getElementsByClassName !== strundefined && !xml ) {
				return context.getElementsByClassName( className );
			}
		}
	},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( rbackslash, "" );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( rbackslash, "" );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				3 xn-component of xn+y argument ([+-]?\d*n|)
				4 sign of xn-component
				5 x of xn-component
				6 sign of y-component
				7 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1] === "nth" ) {
				// nth-child requires argument
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === "even" || match[2] === "odd" ) );
				match[4] = +( ( match[6] + match[7] ) || match[2] === "odd" );

			// other types prohibit arguments
			} else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var unquoted, excess;
			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			if ( match[3] ) {
				match[2] = match[3];
			} else if ( (unquoted = match[4]) ) {
				// Only check arguments that contain a pseudo
				if ( rpseudo.test(unquoted) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					unquoted = unquoted.slice( 0, excess );
					match[0] = match[0].slice( 0, excess );
				}
				match[2] = unquoted;
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {
		"ID": assertGetIdNotName ?
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					return elem.getAttribute("id") === id;
				};
			} :
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
					return node && node.value === id;
				};
			},

		"TAG": function( nodeName ) {
			if ( nodeName === "*" ) {
				return function() { return true; };
			}
			nodeName = nodeName.replace( rbackslash, "" ).toLowerCase();

			return function( elem ) {
				return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
			};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ expando ][ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem, context ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.substr( result.length - check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.substr( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, argument, first, last ) {

			if ( type === "nth" ) {
				return function( elem ) {
					var node, diff,
						parent = elem.parentNode;

					if ( first === 1 && last === 0 ) {
						return true;
					}

					if ( parent ) {
						diff = 0;
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								diff++;
								if ( elem === node ) {
									break;
								}
							}
						}
					}

					// Incorporate the offset (or cast to NaN), then check against cycle size
					diff -= last;
					return diff === first || ( diff % first === 0 && diff / first >= 0 );
				};
			}

			return function( elem ) {
				var node = elem;

				switch ( type ) {
					case "only":
					case "first":
						while ( (node = node.previousSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						if ( type === "first" ) {
							return true;
						}

						node = elem;

						/* falls through */
					case "last":
						while ( (node = node.nextSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						return true;
				}
			};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			var nodeType;
			elem = elem.firstChild;
			while ( elem ) {
				if ( elem.nodeName > "@" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {
					return false;
				}
				elem = elem.nextSibling;
			}
			return true;
		},

		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"text": function( elem ) {
			var type, attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				(type = elem.type) === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type );
		},

		// Input types
		"radio": createInputPseudo("radio"),
		"checkbox": createInputPseudo("checkbox"),
		"file": createInputPseudo("file"),
		"password": createInputPseudo("password"),
		"image": createInputPseudo("image"),

		"submit": createButtonPseudo("submit"),
		"reset": createButtonPseudo("reset"),

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"focus": function( elem ) {
			var doc = elem.ownerDocument;
			return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		"active": function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		},

		// Positional types
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			for ( var i = 0; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			for ( var i = 1; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

function siblingCheck( a, b, ret ) {
	if ( a === b ) {
		return ret;
	}

	var cur = a.nextSibling;

	while ( cur ) {
		if ( cur === b ) {
			return -1;
		}

		cur = cur.nextSibling;
	}

	return 1;
}

sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?
			a.compareDocumentPosition :
			a.compareDocumentPosition(b) & 4
		) ? -1 : 1;
	} :
	function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

// Always assume the presence of duplicates if sort doesn't
// pass them to our comparison function (as in Google Chrome).
[0, 0].sort( sortOrder );
baseHasDuplicate = !hasDuplicate;

// Document sorting and removing duplicates
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		i = 1,
		j = 0;

	hasDuplicate = baseHasDuplicate;
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		for ( ; (elem = results[i]); i++ ) {
			if ( elem === results[ i - 1 ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	return results;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ expando ][ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( tokens = [] );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			tokens.push( matched = new Token( match.shift() ) );
			soFar = soFar.slice( matched.length );

			// Cast descendant combinators to space
			matched.type = match[0].replace( rtrim, " " );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {

				tokens.push( matched = new Token( match.shift() ) );
				soFar = soFar.slice( matched.length );
				matched.type = type;
				matched.matches = match;
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && combinator.dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( checkNonElements || elem.nodeType === 1  ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( !xml ) {
				var cache,
					dirkey = dirruns + " " + doneName + " ",
					cachedkey = dirkey + cachedruns;
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( (cache = elem[ expando ]) === cachedkey ) {
							return elem.sizset;
						} else if ( typeof cache === "string" && cache.indexOf(dirkey) === 0 ) {
							if ( elem.sizset ) {
								return elem;
							}
						} else {
							elem[ expando ] = cachedkey;
							if ( matcher( elem, context, xml ) ) {
								elem.sizset = true;
								return elem;
							}
							elem.sizset = false;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( matcher( elem, context, xml ) ) {
							return elem;
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && tokens.slice( 0, i - 1 ).join("").replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && tokens.join("")
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, expandContext ) {
			var elem, j, matcher,
				setMatched = [],
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				outermost = expandContext != null,
				contextBackup = outermostContext,
				// We must always have either seed elements or context
				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
				// Nested matchers should use non-integer dirruns
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);

			if ( outermost ) {
				outermostContext = context !== document && context;
				cachedruns = superMatcher.el;
			}

			// Add elements passing elementMatchers directly to results
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					for ( j = 0; (matcher = elementMatchers[j]); j++ ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
						cachedruns = ++superMatcher.el;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				for ( j = 0; (matcher = setMatchers[j]); j++ ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	superMatcher.el = 0;
	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ expando ][ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !group ) {
			group = tokenize( selector );
		}
		i = group.length;
		while ( i-- ) {
			cached = matcherFromTokens( group[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	}
	return cached;
};

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function select( selector, context, results, seed, xml ) {
	var i, tokens, token, type, find,
		match = tokenize( selector ),
		j = match.length;

	if ( !seed ) {
		// Try to minimize operations if there is only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					context.nodeType === 9 && !xml &&
					Expr.relative[ tokens[1].type ] ) {

				context = Expr.find["ID"]( token.matches[0].replace( rbackslash, "" ), context, xml )[0];
				if ( !context ) {
					return results;
				}

				selector = selector.slice( tokens.shift().length );
			}

			// Fetch a seed set for right-to-left matching
			for ( i = matchExpr["POS"].test( selector ) ? -1 : tokens.length - 1; i >= 0; i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( rbackslash, "" ),
						rsibling.test( tokens[0].type ) && context.parentNode || context,
						xml
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && tokens.join("");
						if ( !selector ) {
							push.apply( results, slice.call( seed, 0 ) );
							return results;
						}

						break;
					}
				}
			}
		}
	}

	// Compile and execute a filtering function
	// Provide `match` to avoid retokenization if we modified the selector above
	compile( selector, match )(
		seed,
		context,
		xml,
		results,
		rsibling.test( selector )
	);
	return results;
}

if ( document.querySelectorAll ) {
	(function() {
		var disconnectedMatch,
			oldSelect = select,
			rescape = /'|\\/g,
			rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,

			// qSa(:focus) reports false when true (Chrome 21), no need to also add to buggyMatches since matches checks buggyQSA
			// A support test would require too much code (would include document ready)
			rbuggyQSA = [ ":focus" ],

			// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
			// A support test would require too much code (would include document ready)
			// just skip matchesSelector for :active
			rbuggyMatches = [ ":active" ],
			matches = docElem.matchesSelector ||
				docElem.mozMatchesSelector ||
				docElem.webkitMatchesSelector ||
				docElem.oMatchesSelector ||
				docElem.msMatchesSelector;

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explictly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// IE8 - Some boolean attributes are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here (do not put tests after this one)
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Opera 10-12/IE9 - ^= $= *= and empty values
			// Should not select anything
			div.innerHTML = "<p test=''></p>";
			if ( div.querySelectorAll("[test^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:\"\"|'')" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here (do not put tests after this one)
			div.innerHTML = "<input type='hidden'/>";
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push(":enabled", ":disabled");
			}
		});

		// rbuggyQSA always contains :focus, so no need for a length check
		rbuggyQSA = /* rbuggyQSA.length && */ new RegExp( rbuggyQSA.join("|") );

		select = function( selector, context, results, seed, xml ) {
			// Only use querySelectorAll when not filtering,
			// when this is not xml,
			// and when no QSA bugs apply
			if ( !seed && !xml && !rbuggyQSA.test( selector ) ) {
				var groups, i,
					old = true,
					nid = expando,
					newContext = context,
					newSelector = context.nodeType === 9 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + groups[i].join("");
					}
					newContext = rsibling.test( selector ) && context.parentNode || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results, slice.call( newContext.querySelectorAll(
							newSelector
						), 0 ) );
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}

			return oldSelect( selector, context, results, seed, xml );
		};

		if ( matches ) {
			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				try {
					matches.call( div, "[test!='']:sizzle" );
					rbuggyMatches.push( "!=", pseudos );
				} catch ( e ) {}
			});

			// rbuggyMatches always contains :active and :focus, so no need for a length check
			rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join("|") );

			Sizzle.matchesSelector = function( elem, expr ) {
				// Make sure that attribute selectors are quoted
				expr = expr.replace( rattributeQuotes, "='$1']" );

				// rbuggyMatches always contains :active, so no need for an existence check
				if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && !rbuggyQSA.test( expr ) ) {
					try {
						var ret = matches.call( elem, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9
								elem.document && elem.document.nodeType !== 11 ) {
							return ret;
						}
					} catch(e) {}
				}

				return Sizzle( expr, null, null, [ elem ] ).length > 0;
			};
		}
	})();
}

// Deprecated
Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Back-compat
function setFilters() {}
Expr.filters = setFilters.prototype = Expr.pseudos;
Expr.setFilters = new setFilters();

// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
var runtil = /Until$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	isSimple = /^.[^:#\[\.,]*$/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i, l, length, n, r, ret,
			self = this;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		ret = this.pushStack( "", "find", selector );

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && (
			typeof selector === "string" ?
				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				rneedsContext.test( selector ) ?
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			ret = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			cur = this[i];

			while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;
				}
				cur = cur.parentNode;
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

jQuery.fn.andSelf = jQuery.fn.addBack;

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( this.length > 1 && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, core_slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}
function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rcheckableType = /^(?:checkbox|radio)$/,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
// unless wrapped in a div with non-breaking characters in front of it.
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "X<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( set, this ), "before", this.selector );
		}
	},

	after: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( this, set ), "after", this.selector );
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( elem.getElementsByTagName( "*" ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function( value ) {
		if ( !isDisconnected( this[0] ) ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		}

		return this.length ?
			this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
			this;
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {

		// Flatten any nested arrays
		args = [].concat.apply( [], args );

		var results, first, fragment, iNoClone,
			i = 0,
			value = args[0],
			scripts = [],
			l = this.length;

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call( this, i, table ? self.html() : undefined );
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			results = jQuery.buildFragment( args, this, scripts );
			fragment = results.fragment;
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				// Fragments from the fragment cache must always be cloned and never used in place.
				for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {
					callback.call(
						table && jQuery.nodeName( this[i], "table" ) ?
							findOrAppend( this[i], "tbody" ) :
							this[i],
						i === iNoClone ?
							fragment :
							jQuery.clone( fragment, true, true )
					);
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;

			if ( scripts.length ) {
				jQuery.each( scripts, function( i, elem ) {
					if ( elem.src ) {
						if ( jQuery.ajax ) {
							jQuery.ajax({
								url: elem.src,
								type: "GET",
								dataType: "script",
								async: false,
								global: false,
								"throws": true
							});
						} else {
							jQuery.error("no ajax");
						}
					} else {
						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "" ) );
					}

					if ( elem.parentNode ) {
						elem.parentNode.removeChild( elem );
					}
				});
			}
		}

		return this;
	}
});

function findOrAppend( elem, tag ) {
	return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	if ( nodeName === "object" ) {
		// IE6-10 improperly clones children of object elements using classid.
		// IE10 throws NoModificationAllowedError if parent is null, #12132.
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;

	// IE blanks contents when cloning scripts
	} else if ( nodeName === "script" && dest.text !== src.text ) {
		dest.text = src.text;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, context, scripts ) {
	var fragment, cacheable, cachehit,
		first = args[ 0 ];

	// Set context from what may come in as undefined or a jQuery collection or a node
	// Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &
	// also doubles as fix for #8950 where plain objects caused createDocumentFragment exception
	context = context || document;
	context = !context.nodeType && context[0] || context;
	context = context.ownerDocument || context;

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && context === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		// Mark cacheable and look for a hit
		cacheable = true;
		fragment = jQuery.fragments[ first ];
		cachehit = fragment !== undefined;
	}

	if ( !fragment ) {
		fragment = context.createDocumentFragment();
		jQuery.clean( args, context, fragment, scripts );

		// Update the cache, but only store false
		// unless this is a second parsing of the same content
		if ( cacheable ) {
			jQuery.fragments[ first ] = cachehit && fragment;
		}
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			l = insert.length,
			parent = this.length === 1 && this[0].parentNode;

		if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {
			insert[ original ]( this[0] );
			return this;
		} else {
			for ( ; i < l; i++ ) {
				elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			clone;

		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,
			safe = context === document && safeFragment,
			ret = [];

		// Ensure that context is a document
		if ( !context || typeof context.createDocumentFragment === "undefined" ) {
			context = document;
		}

		// Use the already-created safe fragment if context permits
		for ( i = 0; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Ensure a safe container in which to render the html
					safe = safe || createSafeFragment( context );
					div = context.createElement("div");
					safe.appendChild( div );

					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Go to html and back, then peel off extra wrappers
					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					depth = wrap[0];
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						hasBody = rtbody.test(elem);
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;

					// Take out of fragment container (we need a fresh div each time)
					div.parentNode.removeChild( div );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				jQuery.merge( ret, elem );
			}
		}

		// Fix #11356: Clear elements from safeFragment
		if ( div ) {
			elem = div = safe = null;
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !jQuery.support.appendChecked ) {
			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				if ( jQuery.nodeName( elem, "input" ) ) {
					fixDefaultChecked( elem );
				} else if ( typeof elem.getElementsByTagName !== "undefined" ) {
					jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
				}
			}
		}

		// Append elements to a provided document fragment
		if ( fragment ) {
			// Special handling of each script element
			handleScript = function( elem ) {
				// Check if we consider it executable
				if ( !elem.type || rscriptType.test( elem.type ) ) {
					// Detach the script and store it in the scripts array (if provided) or the fragment
					// Return truthy to indicate that it has been handled
					return scripts ?
						scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
						fragment.appendChild( elem );
				}
			};

			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				// Check if we're done after handling an executable script
				if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
					// Append to fragment and handle embedded scripts
					fragment.appendChild( elem );
					if ( typeof elem.getElementsByTagName !== "undefined" ) {
						// handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
						jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

						// Splice the scripts into ret after their former ancestor and advance our index beyond them
						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
						i += jsTags.length;
					}
				}
			}
		}

		return ret;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var data, id, elem, type,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = jQuery.support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( elem.removeAttribute ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						jQuery.deletedIds.push( id );
					}
				}
			}
		}
	}
});
// Limit scope pollution from any deprecated API
(function() {

var matched, browser;

// Use of jQuery.browser is frowned upon.
// More details: http://api.jquery.com/jQuery.browser
// jQuery.uaMatch maintained for back-compat
jQuery.uaMatch = function( ua ) {
	ua = ua.toLowerCase();

	var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
		/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
		/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
		/(msie) ([\w.]+)/.exec( ua ) ||
		ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
		[];

	return {
		browser: match[ 1 ] || "",
		version: match[ 2 ] || "0"
	};
};

matched = jQuery.uaMatch( navigator.userAgent );
browser = {};

if ( matched.browser ) {
	browser[ matched.browser ] = true;
	browser.version = matched.version;
}

// Chrome is Webkit, but Webkit is also Safari.
if ( browser.chrome ) {
	browser.webkit = true;
} else if ( browser.webkit ) {
	browser.safari = true;
}

jQuery.browser = browser;

jQuery.sub = function() {
	function jQuerySub( selector, context ) {
		return new jQuerySub.fn.init( selector, context );
	}
	jQuery.extend( true, jQuerySub, this );
	jQuerySub.superclass = this;
	jQuerySub.fn = jQuerySub.prototype = this();
	jQuerySub.fn.constructor = jQuerySub;
	jQuerySub.sub = this.sub;
	jQuerySub.fn.init = function init( selector, context ) {
		if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
			context = jQuerySub( context );
		}

		return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
	};
	jQuerySub.fn.init.prototype = jQuerySub.fn;
	var rootjQuerySub = jQuerySub(document);
	return jQuerySub;
};

})();
var curCSS, iframe, iframeDoc,
	ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	rposition = /^(top|right|bottom|left)$/,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([-+])=(" + core_pnum + ")", "i" ),
	elemdisplay = { BODY: "block" },

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],

	eventsToggle = jQuery.fn.toggle;

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
	var elem, display,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		values[ index ] = jQuery._data( elem, "olddisplay" );
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && elem.style.display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {
			display = curCSS( elem, "display" );

			if ( !values[ index ] && display !== "none" ) {
				jQuery._data( elem, "olddisplay", display );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state, fn2 ) {
		var bool = typeof state === "boolean";

		if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {
			return eventsToggle.apply( this, arguments );
		}

		return this.each(function() {
			if ( bool ? state : isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;

				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, numeric, extra ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( numeric || extra !== undefined ) {
			num = parseFloat( val );
			return numeric || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

// NOTE: To any future maintainer, we've window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
	curCSS = function( elem, name ) {
		var ret, width, minWidth, maxWidth,
			computed = window.getComputedStyle( elem, null ),
			style = elem.style;

		if ( computed ) {

			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
			ret = computed.getPropertyValue( name ) || computed[ name ];

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};
} else if ( document.documentElement.currentStyle ) {
	curCSS = function( elem, name ) {
		var left, rsLeft,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			// we use jQuery.css instead of curCSS here
			// because of the reliableMarginRight CSS hook!
			val += jQuery.css( elem, extra + cssExpand[ i ], true );
		}

		// From this point on we use curCSS for maximum performance (relevant in animations)
		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		valueIsBorderBox = true,
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox
		)
	) + "px";
}


// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	if ( elemdisplay[ nodeName ] ) {
		return elemdisplay[ nodeName ];
	}

	var elem = jQuery( "<" + nodeName + ">" ).appendTo( document.body ),
		display = elem.css("display");
	elem.remove();

	// If the simple way fails,
	// get element's real default display by attaching it to a temp iframe
	if ( display === "none" || display === "" ) {
		// Use the already-created iframe if possible
		iframe = document.body.appendChild(
			iframe || jQuery.extend( document.createElement("iframe"), {
				frameBorder: 0,
				width: 0,
				height: 0
			})
		);

		// Create a cacheable copy of the iframe document on first call.
		// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
		// document to it; WebKit & Firefox won't allow reusing the iframe document.
		if ( !iframeDoc || !iframe.createElement ) {
			iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
			iframeDoc.write("<!doctype html><html><body>");
			iframeDoc.close();
		}

		elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );

		display = curCSS( elem, "display" );
		document.body.removeChild( iframe );
	}

	// Store the correct default display
	elemdisplay[ nodeName ] = display;

	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, "display" ) ) ) {
					return jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					});
				} else {
					return getWidthOrHeight( elem, name, extra );
				}
			}
		},

		set: function( elem, value, extra ) {
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box"
				) : 0
			);
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
				style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				return jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						return curCSS( elem, "marginRight" );
					}
				});
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						var ret = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + "px" : ret;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i,

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ],
				expanded = {};

			for ( i = 0; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	rselectTextarea = /^(?:select|textarea)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType, list, placeBefore,
			dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),
			i = 0,
			length = dataTypes.length;

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var selection,
		list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters );

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	// Don't do a request if no elements are being requested
	if ( !this.length ) {
		return this;
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off, url.length );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// Request the remote document
	jQuery.ajax({
		url: url,

		// if "type" variable is undefined, then "GET" method will be used
		type: type,
		dataType: "html",
		data: params,
		complete: function( jqXHR, status ) {
			if ( callback ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			}
		}
	}).done(function( responseText ) {

		// Save response for use in complete callback
		response = arguments;

		// See if a selector was specified
		self.html( selector ?

			// Create a dummy div to hold the results
			jQuery("<div>")

				// inject the contents of the document in, removing the scripts
				// to avoid any 'Permission Denied' errors in IE
				.append( responseText.replace( rscript, "" ) )

				// Locate the specified elements
				.find( selector ) :

			// If not, just inject the full result
			responseText );

	});

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // ifModified key
			ifModifiedKey,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || strAbort;
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ ifModifiedKey ] = modified;
					}
					modified = jqXHR.getResponseHeader("Etag");
					if ( modified ) {
						jQuery.etag[ ifModifiedKey ] = modified;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					isSuccess = ajaxConvert( s, response );
					statusText = isSuccess.state;
					success = isSuccess.data;
					error = isSuccess.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.always( tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( core_rspace );

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();

		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	var conv, conv2, current, tmp,
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice(),
		prev = dataTypes[ 0 ],
		converters = {},
		i = 0;

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	// Convert to each sequential dataType, tolerating list modification
	for ( ; (current = dataTypes[++i]); ) {

		// There's only work to do if current dataType is non-auto
		if ( current !== "*" ) {

			// Convert response if prev dataType is non-auto and differs from current
			if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split(" ");
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.splice( i--, 0, current );
								}

								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s["throws"] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}

			// Update prev for next iteration
			prev = current;
		}
	}

	return { state: "success", data: response };
}
var oldCallbacks = [],
	rquestion = /\?/,
	rjsonp = /(=)\?(?=&|$)|\?\?/,
	nonce = jQuery.now();

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		data = s.data,
		url = s.url,
		hasCallback = s.jsonp !== false,
		replaceInUrl = hasCallback && rjsonp.test( url ),
		replaceInData = hasCallback && !replaceInUrl && typeof data === "string" &&
			!( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &&
			rjsonp.test( data );

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( s.dataTypes[ 0 ] === "jsonp" || replaceInUrl || replaceInData ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;
		overwritten = window[ callbackName ];

		// Insert callback into url or form data
		if ( replaceInUrl ) {
			s.url = url.replace( rjsonp, "$1" + callbackName );
		} else if ( replaceInData ) {
			s.data = data.replace( rjsonp, "$1" + callbackName );
		} else if ( hasCallback ) {
			s.url += ( rquestion.test( url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});
var xhrCallbacks,
	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var handle, i,
						xhr = s.xhr();

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occurred
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									try {
										responses.text = xhr.responseText;
									} catch( e ) {
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					if ( !s.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback, 0 );
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([-+])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var end, unit,
				tween = this.createTween( prop, value ),
				parts = rfxnum.exec( value ),
				target = tween.cur(),
				start = +target || 0,
				scale = 1,
				maxIterations = 20;

			if ( parts ) {
				end = +parts[2];
				unit = parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );

				// We need to compute starting value
				if ( unit !== "px" && start ) {
					// Iteratively approximate from a nonzero starting point
					// Prefer the current property, because this process will be trivial if it uses the same units
					// Fallback to end or a simple constant
					start = jQuery.css( tween.elem, prop, true ) || end || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*
						// Use a string for doubling factor so we don't accidentally see scale as unchanged below
						scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

					// Update scale, tolerating zero or NaN from tween.cur()
					// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}

				tween.unit = unit;
				tween.start = start;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;
			}
			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	}, 0 );
	return ( fxNow = jQuery.now() );
}

function createTweens( animation, props ) {
	jQuery.each( props, function( prop, value ) {
		var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( collection[ index ].call( animation, prop, value ) ) {

				// we're done with this property
				return;
			}
		}
	});
}

function Animation( elem, properties, options ) {
	var result,
		index = 0,
		tweenerIndex = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end, easing ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	createTweens( animation, props );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			anim: animation,
			queue: animation.opts.queue,
			elem: elem
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	var index, prop, value, length, dataShow, toggle, tween, hooks, oldfire,
		anim = this,
		style = elem.style,
		orig = {},
		handled = [],
		hidden = elem.nodeType && isHidden( elem );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";

			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !jQuery.support.shrinkWrapBlocks ) {
			anim.done(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}


	// show/hide pass
	for ( index in props ) {
		value = props[ index ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ index ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {
				continue;
			}
			handled.push( index );
		}
	}

	length = handled.length;
	if ( length ) {
		dataShow = jQuery._data( elem, "fxshow" ) || jQuery._data( elem, "fxshow", {} );
		if ( "hidden" in dataShow ) {
			hidden = dataShow.hidden;
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery.removeData( elem, "fxshow", true );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( index = 0 ; index < length ; index++ ) {
			prop = handled[ index ];
			tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );
			orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing any value as a 4th parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, false, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Remove in 2.0 - this supports IE8's panic based approach
// to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ||
			// special check for .toggle( handler, handler, ... )
			( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations resolve immediately
				if ( empty ) {
					anim.stop( true );
				}
			};

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) && !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.interval = 13;

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
var rroot = /^(?:body|html)$/i;

jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft,
		box = { top: 0, left: 0 },
		elem = this[ 0 ],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	if ( (body = doc.body) === elem ) {
		return jQuery.offset.bodyOffset( elem );
	}

	docElem = doc.documentElement;

	// Make sure it's not a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return box;
	}

	// If we don't have gBCR, just use 0,0 rather than error
	// BlackBerry 5, iOS 3 (original iPhone)
	if ( typeof elem.getBoundingClientRect !== "undefined" ) {
		box = elem.getBoundingClientRect();
	}
	win = getWindow( doc );
	clientTop  = docElem.clientTop  || body.clientTop  || 0;
	clientLeft = docElem.clientLeft || body.clientLeft || 0;
	scrollTop  = win.pageYOffset || docElem.scrollTop;
	scrollLeft = win.pageXOffset || docElem.scrollLeft;
	return {
		top: box.top  + scrollTop  - clientTop,
		left: box.left + scrollLeft - clientLeft
	};
};

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || document.body;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					 top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, value, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}

})( window );
/*
 * jQuery Hotkeys Plugin
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Based upon the plugin by Tzury Bar Yochay:
 * http://github.com/tzuryby/hotkeys
 *
 * Original idea by:
 * Binny V A, http://www.openjs.com/scripts/events/keyboard_shortcuts/
*/

(function(jQuery){
  
  jQuery.hotkeys = {
    version: "0.8",

    specialKeys: {
      8: "backspace", 9: "tab", 13: "return", 16: "shift", 17: "ctrl", 18: "alt", 19: "pause",
      20: "capslock", 27: "esc", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home",
      37: "left", 38: "up", 39: "right", 40: "down", 45: "insert", 46: "del", 
      96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7",
      104: "8", 105: "9", 106: "*", 107: "+", 109: "-", 110: ".", 111 : "/", 
      112: "f1", 113: "f2", 114: "f3", 115: "f4", 116: "f5", 117: "f6", 118: "f7", 119: "f8", 
      120: "f9", 121: "f10", 122: "f11", 123: "f12", 144: "numlock", 145: "scroll", 191: "/", 224: "meta"
    },
  
    shiftNums: {
      "`": "~", "1": "!", "2": "@", "3": "#", "4": "$", "5": "%", "6": "^", "7": "&", 
      "8": "*", "9": "(", "0": ")", "-": "_", "=": "+", ";": ": ", "'": "\"", ",": "<", 
      ".": ">",  "/": "?",  "\\": "|"
    },
    
    returnKeys: [],
    cancelKeys: []
  };

  function keyHandler( handleObj ) {
    // Only care when a possible input has been specified
    if ( typeof handleObj.data !== "string" ) {
      return;
    }
    
    var origHandler = handleObj.handler,
      keys = handleObj.data.toLowerCase().split(" ");
  
    handleObj.handler = function( event ) {
      // Don't fire in text-accepting inputs that we didn't directly bind to
      if ( this !== event.target && (/textarea|select/i.test( event.target.nodeName ) ||
         event.target.type === "text") ) {
        return;
      }
      
      // Keypress represents characters, not special keys
      var special = event.type !== "keypress" && jQuery.hotkeys.specialKeys[ event.which ],
        character,
        key, modif = "", possible = {};
      // avoid String undefined exception in IE9
      try {
        character = String.fromCharCode( event.which ).toLowerCase();
      }catch(e){
        character = event.which;
      }

      // check combinations (alt|ctrl|shift+anything)
      if ( event.altKey && special !== "alt" ) {
        modif += "alt+";
      }

      if ( event.ctrlKey && special !== "ctrl" ) {
        modif += "ctrl+";
      }
      
      // TODO: Need to make sure this works consistently across platforms
      if ( event.metaKey && !event.ctrlKey && special !== "meta" ) {
        modif += "meta+";
      }

      if ( event.shiftKey && special !== "shift" ) {
        modif += "shift+";
      }

      if ( special ) {
        possible[ modif + special ] = true;

      } else {
        possible[ modif + character ] = true;
        possible[ modif + jQuery.hotkeys.shiftNums[ character ] ] = true;

        // "$" can be triggered as "Shift+4" or "Shift+$" or just "$"
        if ( modif === "shift+" ) {
          possible[ jQuery.hotkeys.shiftNums[ character ] ] = true;
        }
      }

      for ( var i = 0, l = keys.length; i < l; i++ ) {
        if ( possible[ keys[i] ] ) {
          return origHandler.apply( this, arguments );
        }
      }
    };
  }

  $.each([ "keydown", "keyup", "keypress" ], function() {
    jQuery.event.special[ this ] = { add: keyHandler };
  });
  //add short cut
  $(document).bind('keydown', 'esc',function (evt){
    jQuery._fireKeydown_esc(evt);
    return false; 
  }).bind('keydown', 'return',function (evt){
    jQuery._fireKeydown_return(evt);
    return true; 
  });
  function isNeedClick(obj){
  	//var _className = obj.Attr('class');
    if(!obj || obj.length==0 || obj.hasClass('common_button_disable') || obj.css('display') == 'none' || obj.css('visibility') == 'hidden' || obj.parents('.button_container').css('display') == 'none' ||obj.parents('.button_container').css('visibility') == 'hidden'){
		return false;
	}
	return true;
  }
  $._fireKeydown_return = function(evt) {
    var f = false;
    $($.hotkeys.returnKeys).each(function(k,j) {
      var b = $('#'+j);
      if (isNeedClick(b)) {
        b.click();
        f = true;
        return false;
      }
    });
    if(f)
      return;
    if($('#ok_msg_btn_first').size()>0){
      if(isNeedClick($('#ok_msg_btn_first'))){
         $('#ok_msg_btn_first').click(); 
      }
     }else if($('#btnsave').size()>0){
	   if(isNeedClick($('#btnsave'))){
	      $('#btnsave').click(); 
	   }
	  
    }else if($('#btnok').size()>0){
		if (isNeedClick($('#btnok'))) {
			$('#btnok').click();
		}
    }else if($('#btnsubmit').size()>0){
		if (isNeedClick($('#btnsubmit'))) {
			$('#btnsubmit').click();
		}
    }else if($('#btnsearch').size()>0){
	   if (isNeedClick($('#btnsearch'))) {
	     $('#btnsearch').click();
	   }
    }else if($('#btnreset').size()>0){
	  if (isNeedClick($('#btnreset'))) {
      	$('#btnreset').click();
	  }
    }else if($('#btnmodify').size()>0){
	  if (isNeedClick($('#btnmodify'))) {
      	$('#btnmodify').click();
	  }
    }else if($('#ok_msg_btn').size()>0){
	  if (isNeedClick($('#ok_msg_btn'))) {
      	$('#ok_msg_btn').click();
	  }
    }else if($('#yes_msg_btn').size()>0){
	  if (isNeedClick($('#yes_msg_btn'))) {
      	$('#yes_msg_btn').click();
	  }
    }else if($('#retry_msg_btn').size()>0){
	  if (isNeedClick($('#retry_msg_btn'))) {
      	$('#retry_msg_btn').click();
	  }
    }else if(parent && parent != window) {
        //parent hotkey button search, useless currently
        if(parent.jQuery)parent.jQuery._fireKeydown_return(evt);
    }
  };
  $._fireKeydown_esc = function(evt) {
    var f = false;
    $($.hotkeys.cancelKeys).each(function(k,j) {
      var b = $('#'+j);
      if (isNeedClick(b)) {
        b.click();
        f = true;
        return false;
      }
    });
    if(f)
      return;
    if($('#btncancel').size()>0){
      $('#btncancel').click(); 
    }else if($('#btnclose').size()>0){
      $('#btnclose').click();
    }else if(parent && parent != window) {
      //parent hotkey button search, useless currently
      parent.jQuery._fireKeydown_esc(evt);
    }
  };
})( jQuery );
$(function(){
  $("input,select").bind('keydown', 'esc',function (evt){
    $._fireKeydown_esc(evt);
    return false; 
  }).bind('keydown', 'return',function (evt){
    $._fireKeydown_return(evt);
    return false; 
  });
});
/**
 * @author macj
 * jQuery UI Core 1.9.2
 * jQuery UI Widget 1.9.2
 * jQuery UI Mouse 1.9.2
 * jQuery UI Slider 1.9.2
 */
/*!
 * jQuery UI Core 1.9.2
 * http://jqueryui.com
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
(function( $, undefined ) {

var uuid = 0,
  runiqueId = /^ui-id-\d+$/;

// prevent duplicate loading
// this is only a problem because we proxy existing functions
// and we don't want to double proxy them
$.ui = $.ui || {};
if ( $.ui.version ) {
  return;
}

$.extend( $.ui, {
  version: "1.9.2",

  keyCode: {
    BACKSPACE: 8,
    COMMA: 188,
    DELETE: 46,
    DOWN: 40,
    END: 35,
    ENTER: 13,
    ESCAPE: 27,
    HOME: 36,
    LEFT: 37,
    NUMPAD_ADD: 107,
    NUMPAD_DECIMAL: 110,
    NUMPAD_DIVIDE: 111,
    NUMPAD_ENTER: 108,
    NUMPAD_MULTIPLY: 106,
    NUMPAD_SUBTRACT: 109,
    PAGE_DOWN: 34,
    PAGE_UP: 33,
    PERIOD: 190,
    RIGHT: 39,
    SPACE: 32,
    TAB: 9,
    UP: 38
  }
});

// plugins
$.fn.extend({
  _focus: $.fn.focus,
  focus: function( delay, fn ) {
    return typeof delay === "number" ?
      this.each(function() {
        var elem = this;
        setTimeout(function() {
          $( elem ).focus();
          if ( fn ) {
            fn.call( elem );
          }
        }, delay );
      }) :
      this._focus.apply( this, arguments );
  },

  scrollParent: function() {
    var scrollParent;
    if (($.ui.ie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) {
      scrollParent = this.parents().filter(function() {
        return (/(relative|absolute|fixed)/).test($.css(this,'position')) && (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
      }).eq(0);
    } else {
      scrollParent = this.parents().filter(function() {
        return (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
      }).eq(0);
    }

    return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
  },

  zIndex: function( zIndex ) {
    if ( zIndex !== undefined ) {
      return this.css( "zIndex", zIndex );
    }

    if ( this.length ) {
      var elem = $( this[ 0 ] ), position, value;
      while ( elem.length && elem[ 0 ] !== document ) {
        // Ignore z-index if position is set to a value where z-index is ignored by the browser
        // This makes behavior of this function consistent across browsers
        // WebKit always returns auto if the element is positioned
        position = elem.css( "position" );
        if ( position === "absolute" || position === "relative" || position === "fixed" ) {
          // IE returns 0 when zIndex is not specified
          // other browsers return a string
          // we ignore the case of nested elements with an explicit value of 0
          // <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
          value = parseInt( elem.css( "zIndex" ), 10 );
          if ( !isNaN( value ) && value !== 0 ) {
            return value;
          }
        }
        elem = elem.parent();
      }
    }

    return 0;
  },

  uniqueId: function() {
    return this.each(function() {
      if ( !this.id ) {
        this.id = "ui-id-" + (++uuid);
      }
    });
  },

  removeUniqueId: function() {
    return this.each(function() {
      if ( runiqueId.test( this.id ) ) {
        $( this ).removeAttr( "id" );
      }
    });
  }
});

// selectors
function focusable( element, isTabIndexNotNaN ) {
  var map, mapName, img,
    nodeName = element.nodeName.toLowerCase();
  if ( "area" === nodeName ) {
    map = element.parentNode;
    mapName = map.name;
    if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
      return false;
    }
    img = $( "img[usemap=#" + mapName + "]" )[0];
    return !!img && visible( img );
  }
  return ( /input|select|textarea|button|object/.test( nodeName ) ?
    !element.disabled :
    "a" === nodeName ?
      element.href || isTabIndexNotNaN :
      isTabIndexNotNaN) &&
    // the element and all of its ancestors must be visible
    visible( element );
}

function visible( element ) {
  return $.expr.filters.visible( element ) &&
    !$( element ).parents().andSelf().filter(function() {
      return $.css( this, "visibility" ) === "hidden";
    }).length;
}

$.extend( $.expr[ ":" ], {
  data: $.expr.createPseudo ?
    $.expr.createPseudo(function( dataName ) {
      return function( elem ) {
        return !!$.data( elem, dataName );
      };
    }) :
    // support: jQuery <1.8
    function( elem, i, match ) {
      return !!$.data( elem, match[ 3 ] );
    },

  focusable: function( element ) {
    return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
  },

  tabbable: function( element ) {
    var tabIndex = $.attr( element, "tabindex" ),
      isTabIndexNaN = isNaN( tabIndex );
    return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
  }
});

// support
$(function() {
  var body = document.body,
    div = body.appendChild( div = document.createElement( "div" ) );

  // access offsetHeight before setting the style to prevent a layout bug
  // in IE 9 which causes the element to continue to take up space even
  // after it is removed from the DOM (#8026)
  div.offsetHeight;

  $.extend( div.style, {
    minHeight: "100px",
    height: "auto",
    padding: 0,
    borderWidth: 0
  });

  $.support.minHeight = div.offsetHeight === 100;
  $.support.selectstart = "onselectstart" in div;

  // set display to none to avoid a layout bug in IE
  // http://dev.jquery.com/ticket/4014
  body.removeChild( div ).style.display = "none";
});

// support: jQuery <1.8
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
  $.each( [ "Width", "Height" ], function( i, name ) {
    var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
      type = name.toLowerCase(),
      orig = {
        innerWidth: $.fn.innerWidth,
        innerHeight: $.fn.innerHeight,
        outerWidth: $.fn.outerWidth,
        outerHeight: $.fn.outerHeight
      };

    function reduce( elem, size, border, margin ) {
      $.each( side, function() {
        size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
        if ( border ) {
          size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
        }
        if ( margin ) {
          size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
        }
      });
      return size;
    }

    $.fn[ "inner" + name ] = function( size ) {
      if ( size === undefined ) {
        return orig[ "inner" + name ].call( this );
      }

      return this.each(function() {
        $( this ).css( type, reduce( this, size ) + "px" );
      });
    };

    $.fn[ "outer" + name] = function( size, margin ) {
      if ( typeof size !== "number" ) {
        return orig[ "outer" + name ].call( this, size );
      }

      return this.each(function() {
        $( this).css( type, reduce( this, size, true, margin ) + "px" );
      });
    };
  });
}

// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
  $.fn.removeData = (function( removeData ) {
    return function( key ) {
      if ( arguments.length ) {
        return removeData.call( this, $.camelCase( key ) );
      } else {
        return removeData.call( this );
      }
    };
  })( $.fn.removeData );
}





// deprecated

(function() {
  var uaMatch = /msie ([\w.]+)/.exec( navigator.userAgent.toLowerCase() ) || [];
  $.ui.ie = uaMatch.length ? true : false;
  $.ui.ie6 = parseFloat( uaMatch[ 1 ], 10 ) === 6;
})();

$.fn.extend({
  disableSelection: function() {
    return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +
      ".ui-disableSelection", function( event ) {
        event.preventDefault();
      });
  },

  enableSelection: function() {
    return this.unbind( ".ui-disableSelection" );
  }
});

$.extend( $.ui, {
  // $.ui.plugin is deprecated.  Use the proxy pattern instead.
  plugin: {
    add: function( module, option, set ) {
      var i,
        proto = $.ui[ module ].prototype;
      for ( i in set ) {
        proto.plugins[ i ] = proto.plugins[ i ] || [];
        proto.plugins[ i ].push( [ option, set[ i ] ] );
      }
    },
    call: function( instance, name, args ) {
      var i,
        set = instance.plugins[ name ];
      if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {
        return;
      }

      for ( i = 0; i < set.length; i++ ) {
        if ( instance.options[ set[ i ][ 0 ] ] ) {
          set[ i ][ 1 ].apply( instance.element, args );
        }
      }
    }
  },

  contains: $.contains,

  // only used by resizable
  hasScroll: function( el, a ) {

    //If overflow is hidden, the element might have extra content, but the user wants to hide it
    if ( $( el ).css( "overflow" ) === "hidden") {
      return false;
    }

    var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
      has = false;

    if ( el[ scroll ] > 0 ) {
      return true;
    }

    // TODO: determine which cases actually cause this to happen
    // if the element doesn't have the scroll set, see if it's possible to
    // set the scroll
    el[ scroll ] = 1;
    has = ( el[ scroll ] > 0 );
    el[ scroll ] = 0;
    return has;
  },

  // these are odd functions, fix the API or move into individual plugins
  isOverAxis: function( x, reference, size ) {
    //Determines when x coordinate is over "b" element axis
    return ( x > reference ) && ( x < ( reference + size ) );
  },
  isOver: function( y, x, top, left, height, width ) {
    //Determines when x, y coordinates is over "b" element
    return $.ui.isOverAxis( y, top, height ) && $.ui.isOverAxis( x, left, width );
  }
});

})( jQuery );
/*!
 * jQuery UI Widget 1.9.2
 * http://jqueryui.com
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/jQuery.widget/
 */
(function( $, undefined ) {

var uuid = 0,
  slice = Array.prototype.slice,
  _cleanData = $.cleanData;
$.cleanData = function( elems ) {
  for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
    try {
      $( elem ).triggerHandler( "remove" );
    // http://bugs.jquery.com/ticket/8235
    } catch( e ) {}
  }
  _cleanData( elems );
};

$.widget = function( name, base, prototype ) {
  var fullName, existingConstructor, constructor, basePrototype,
    namespace = name.split( "." )[ 0 ];

  name = name.split( "." )[ 1 ];
  fullName = namespace + "-" + name;

  if ( !prototype ) {
    prototype = base;
    base = $.Widget;
  }

  // create selector for plugin
  $.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
    return !!$.data( elem, fullName );
  };

  $[ namespace ] = $[ namespace ] || {};
  existingConstructor = $[ namespace ][ name ];
  constructor = $[ namespace ][ name ] = function( options, element ) {
    // allow instantiation without "new" keyword
    if ( !this._createWidget ) {
      return new constructor( options, element );
    }

    // allow instantiation without initializing for simple inheritance
    // must use "new" keyword (the code above always passes args)
    if ( arguments.length ) {
      this._createWidget( options, element );
    }
  };
  // extend with the existing constructor to carry over any static properties
  $.extend( constructor, existingConstructor, {
    version: prototype.version,
    // copy the object used to create the prototype in case we need to
    // redefine the widget later
    _proto: $.extend( {}, prototype ),
    // track widgets that inherit from this widget in case this widget is
    // redefined after a widget inherits from it
    _childConstructors: []
  });

  basePrototype = new base();
  // we need to make the options hash a property directly on the new instance
  // otherwise we'll modify the options hash on the prototype that we're
  // inheriting from
  basePrototype.options = $.widget.extend( {}, basePrototype.options );
  $.each( prototype, function( prop, value ) {
    if ( $.isFunction( value ) ) {
      prototype[ prop ] = (function() {
        var _super = function() {
            return base.prototype[ prop ].apply( this, arguments );
          },
          _superApply = function( args ) {
            return base.prototype[ prop ].apply( this, args );
          };
        return function() {
          var __super = this._super,
            __superApply = this._superApply,
            returnValue;

          this._super = _super;
          this._superApply = _superApply;

          returnValue = value.apply( this, arguments );

          this._super = __super;
          this._superApply = __superApply;

          return returnValue;
        };
      })();
    }
  });
  constructor.prototype = $.widget.extend( basePrototype, {
    // TODO: remove support for widgetEventPrefix
    // always use the name + a colon as the prefix, e.g., draggable:start
    // don't prefix for widgets that aren't DOM-based
    widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix : name
  }, prototype, {
    constructor: constructor,
    namespace: namespace,
    widgetName: name,
    // TODO remove widgetBaseClass, see #8155
    widgetBaseClass: fullName,
    widgetFullName: fullName
  });

  // If this widget is being redefined then we need to find all widgets that
  // are inheriting from it and redefine all of them so that they inherit from
  // the new version of this widget. We're essentially trying to replace one
  // level in the prototype chain.
  if ( existingConstructor ) {
    $.each( existingConstructor._childConstructors, function( i, child ) {
      var childPrototype = child.prototype;

      // redefine the child widget using the same prototype that was
      // originally used, but inherit from the new version of the base
      $.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
    });
    // remove the list of existing child constructors from the old constructor
    // so the old child constructors can be garbage collected
    delete existingConstructor._childConstructors;
  } else {
    base._childConstructors.push( constructor );
  }

  $.widget.bridge( name, constructor );
};

$.widget.extend = function( target ) {
  var input = slice.call( arguments, 1 ),
    inputIndex = 0,
    inputLength = input.length,
    key,
    value;
  for ( ; inputIndex < inputLength; inputIndex++ ) {
    for ( key in input[ inputIndex ] ) {
      value = input[ inputIndex ][ key ];
      if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
        // Clone objects
        if ( $.isPlainObject( value ) ) {
          target[ key ] = $.isPlainObject( target[ key ] ) ?
            $.widget.extend( {}, target[ key ], value ) :
            // Don't extend strings, arrays, etc. with objects
            $.widget.extend( {}, value );
        // Copy everything else by reference
        } else {
          target[ key ] = value;
        }
      }
    }
  }
  return target;
};

$.widget.bridge = function( name, object ) {
  var fullName = object.prototype.widgetFullName || name;
  $.fn[ name ] = function( options ) {
    var isMethodCall = typeof options === "string",
      args = slice.call( arguments, 1 ),
      returnValue = this;

    // allow multiple hashes to be passed on init
    options = !isMethodCall && args.length ?
      $.widget.extend.apply( null, [ options ].concat(args) ) :
      options;

    if ( isMethodCall ) {
      this.each(function() {
        var methodValue,
          instance = $.data( this, fullName );
        if ( !instance ) {
          return $.error( "cannot call methods on " + name + " prior to initialization; " +
            "attempted to call method '" + options + "'" );
        }
        if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
          return $.error( "no such method '" + options + "' for " + name + " widget instance" );
        }
        methodValue = instance[ options ].apply( instance, args );
        if ( methodValue !== instance && methodValue !== undefined ) {
          returnValue = methodValue && methodValue.jquery ?
            returnValue.pushStack( methodValue.get() ) :
            methodValue;
          return false;
        }
      });
    } else {
      this.each(function() {
        var instance = $.data( this, fullName );
        if ( instance ) {
          instance.option( options || {} )._init();
        } else {
          $.data( this, fullName, new object( options, this ) );
        }
      });
    }

    return returnValue;
  };
};

$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
  widgetName: "widget",
  widgetEventPrefix: "",
  defaultElement: "<div>",
  options: {
    disabled: false,

    // callbacks
    create: null
  },
  _createWidget: function( options, element ) {
    element = $( element || this.defaultElement || this )[ 0 ];
    this.element = $( element );
    this.uuid = uuid++;
    this.eventNamespace = "." + this.widgetName + this.uuid;
    this.options = $.widget.extend( {},
      this.options,
      this._getCreateOptions(),
      options );

    this.bindings = $();
    this.hoverable = $();
    this.focusable = $();

    if ( element !== this ) {
      // 1.9 BC for #7810
      // TODO remove dual storage
      $.data( element, this.widgetName, this );
      $.data( element, this.widgetFullName, this );
      this._on( true, this.element, {
        remove: function( event ) {
          if ( event.target === element ) {
            this.destroy();
          }
        }
      });
      this.document = $( element.style ?
        // element within the document
        element.ownerDocument :
        // element is window or document
        element.document || element );
      this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
    }

    this._create();
    this._trigger( "create", null, this._getCreateEventData() );
    this._init();
  },
  _getCreateOptions: $.noop,
  _getCreateEventData: $.noop,
  _create: $.noop,
  _init: $.noop,

  destroy: function() {
    this._destroy();
    // we can probably remove the unbind calls in 2.0
    // all event bindings should go through this._on()
    this.element
      .unbind( this.eventNamespace )
      // 1.9 BC for #7810
      // TODO remove dual storage
      .removeData( this.widgetName )
      .removeData( this.widgetFullName )
      // support: jquery <1.6.3
      // http://bugs.jquery.com/ticket/9413
      .removeData( $.camelCase( this.widgetFullName ) );
    this.widget()
      .unbind( this.eventNamespace )
      .removeAttr( "aria-disabled" )
      .removeClass(
        this.widgetFullName + "-disabled " +
        "ui-state-disabled" );

    // clean up events and states
    this.bindings.unbind( this.eventNamespace );
    this.hoverable.removeClass( "ui-state-hover" );
    this.focusable.removeClass( "ui-state-focus" );
  },
  _destroy: $.noop,

  widget: function() {
    return this.element;
  },

  option: function( key, value ) {
    var options = key,
      parts,
      curOption,
      i;

    if ( arguments.length === 0 ) {
      // don't return a reference to the internal hash
      return $.widget.extend( {}, this.options );
    }

    if ( typeof key === "string" ) {
      // handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
      options = {};
      parts = key.split( "." );
      key = parts.shift();
      if ( parts.length ) {
        curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
        for ( i = 0; i < parts.length - 1; i++ ) {
          curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
          curOption = curOption[ parts[ i ] ];
        }
        key = parts.pop();
        if ( value === undefined ) {
          return curOption[ key ] === undefined ? null : curOption[ key ];
        }
        curOption[ key ] = value;
      } else {
        if ( value === undefined ) {
          return this.options[ key ] === undefined ? null : this.options[ key ];
        }
        options[ key ] = value;
      }
    }

    this._setOptions( options );

    return this;
  },
  _setOptions: function( options ) {
    var key;

    for ( key in options ) {
      this._setOption( key, options[ key ] );
    }

    return this;
  },
  _setOption: function( key, value ) {
    this.options[ key ] = value;

    if ( key === "disabled" ) {
      this.widget()
        .toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
        .attr( "aria-disabled", value );
      this.hoverable.removeClass( "ui-state-hover" );
      this.focusable.removeClass( "ui-state-focus" );
    }

    return this;
  },

  enable: function() {
    return this._setOption( "disabled", false );
  },
  disable: function() {
    return this._setOption( "disabled", true );
  },

  _on: function( suppressDisabledCheck, element, handlers ) {
    var delegateElement,
      instance = this;

    // no suppressDisabledCheck flag, shuffle arguments
    if ( typeof suppressDisabledCheck !== "boolean" ) {
      handlers = element;
      element = suppressDisabledCheck;
      suppressDisabledCheck = false;
    }

    // no element argument, shuffle and use this.element
    if ( !handlers ) {
      handlers = element;
      element = this.element;
      delegateElement = this.widget();
    } else {
      // accept selectors, DOM elements
      element = delegateElement = $( element );
      this.bindings = this.bindings.add( element );
    }

    $.each( handlers, function( event, handler ) {
      function handlerProxy() {
        // allow widgets to customize the disabled handling
        // - disabled as an array instead of boolean
        // - disabled class as method for disabling individual parts
        if ( !suppressDisabledCheck &&
            ( instance.options.disabled === true ||
              $( this ).hasClass( "ui-state-disabled" ) ) ) {
          return;
        }
        return ( typeof handler === "string" ? instance[ handler ] : handler )
          .apply( instance, arguments );
      }

      // copy the guid so direct unbinding works
      if ( typeof handler !== "string" ) {
        handlerProxy.guid = handler.guid =
          handler.guid || handlerProxy.guid || $.guid++;
      }

      var match = event.match( /^(\w+)\s*(.*)$/ ),
        eventName = match[1] + instance.eventNamespace,
        selector = match[2];
      if ( selector ) {
        delegateElement.delegate( selector, eventName, handlerProxy );
      } else {
        element.bind( eventName, handlerProxy );
      }
    });
  },

  _off: function( element, eventName ) {
    eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;
    element.unbind( eventName ).undelegate( eventName );
  },

  _delay: function( handler, delay ) {
    function handlerProxy() {
      return ( typeof handler === "string" ? instance[ handler ] : handler )
        .apply( instance, arguments );
    }
    var instance = this;
    return setTimeout( handlerProxy, delay || 0 );
  },

  _hoverable: function( element ) {
    this.hoverable = this.hoverable.add( element );
    this._on( element, {
      mouseenter: function( event ) {
        $( event.currentTarget ).addClass( "ui-state-hover" );
      },
      mouseleave: function( event ) {
        $( event.currentTarget ).removeClass( "ui-state-hover" );
      }
    });
  },

  _focusable: function( element ) {
    this.focusable = this.focusable.add( element );
    this._on( element, {
      focusin: function( event ) {
        $( event.currentTarget ).addClass( "ui-state-focus" );
      },
      focusout: function( event ) {
        $( event.currentTarget ).removeClass( "ui-state-focus" );
      }
    });
  },

  _trigger: function( type, event, data ) {
    var prop, orig,
      callback = this.options[ type ];

    data = data || {};
    event = $.Event( event );
    event.type = ( type === this.widgetEventPrefix ?
      type :
      this.widgetEventPrefix + type ).toLowerCase();
    // the original event may come from any element
    // so we need to reset the target on the new event
    event.target = this.element[ 0 ];

    // copy original event properties over to the new event
    orig = event.originalEvent;
    if ( orig ) {
      for ( prop in orig ) {
        if ( !( prop in event ) ) {
          event[ prop ] = orig[ prop ];
        }
      }
    }

    this.element.trigger( event, data );
    return !( $.isFunction( callback ) &&
      callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
      event.isDefaultPrevented() );
  }
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
  $.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
    if ( typeof options === "string" ) {
      options = { effect: options };
    }
    var hasOptions,
      effectName = !options ?
        method :
        options === true || typeof options === "number" ?
          defaultEffect :
          options.effect || defaultEffect;
    options = options || {};
    if ( typeof options === "number" ) {
      options = { duration: options };
    }
    hasOptions = !$.isEmptyObject( options );
    options.complete = callback;
    if ( options.delay ) {
      element.delay( options.delay );
    }
    if ( hasOptions && $.effects && ( $.effects.effect[ effectName ] || $.uiBackCompat !== false && $.effects[ effectName ] ) ) {
      element[ method ]( options );
    } else if ( effectName !== method && element[ effectName ] ) {
      element[ effectName ]( options.duration, options.easing, callback );
    } else {
      element.queue(function( next ) {
        $( this )[ method ]();
        if ( callback ) {
          callback.call( element[ 0 ] );
        }
        next();
      });
    }
  };
});

// DEPRECATED
if ( $.uiBackCompat !== false ) {
  $.Widget.prototype._getCreateOptions = function() {
    if($.metadata && $.metadata.get){
      return $.metadata && $.metadata.get( this.element[0] )[ this.widgetName ];
    }
    return null;
  };
}

})( jQuery );
/*!
 * jQuery UI Mouse 1.9.2
 * http://jqueryui.com
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/mouse/
 *
 * Depends:
 *  jquery.ui.widget.js
 */
(function( $, undefined ) {

var mouseHandled = false;
$( document ).mouseup( function( e ) {
  mouseHandled = false;
});

$.widget("ui.mouse", {
  version: "1.9.2",
  options: {
    cancel: 'input,textarea,button,select,option',
    distance: 1,
    delay: 0
  },
  _mouseInit: function() {
    var that = this;

    this.element
      .bind('mousedown.'+this.widgetName, function(event) {
        return that._mouseDown(event);
      })
      .bind('click.'+this.widgetName, function(event) {
        if (true === $.data(event.target, that.widgetName + '.preventClickEvent')) {
          $.removeData(event.target, that.widgetName + '.preventClickEvent');
          event.stopImmediatePropagation();
          return false;
        }
      });

    this.started = false;
  },

  // TODO: make sure destroying one instance of mouse doesn't mess with
  // other instances of mouse
  _mouseDestroy: function() {
    this.element.unbind('.'+this.widgetName);
    if ( this._mouseMoveDelegate ) {
      $(document)
        .unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
        .unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);
    }
  },

  _mouseDown: function(event) {
    // don't let more than one widget handle mouseStart
    if( mouseHandled ) { return; }

    // we may have missed mouseup (out of window)
    (this._mouseStarted && this._mouseUp(event));

    this._mouseDownEvent = event;

    var that = this,
      btnIsLeft = (event.which === 1),
      // event.target.nodeName works around a bug in IE 8 with
      // disabled inputs (#7620)
      elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
    if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
      return true;
    }

    this.mouseDelayMet = !this.options.delay;
    if (!this.mouseDelayMet) {
      this._mouseDelayTimer = setTimeout(function() {
        that.mouseDelayMet = true;
      }, this.options.delay);
    }

    if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
      this._mouseStarted = (this._mouseStart(event) !== false);
      if (!this._mouseStarted) {
        event.preventDefault();
        return true;
      }
    }

    // Click event may never have fired (Gecko & Opera)
    if (true === $.data(event.target, this.widgetName + '.preventClickEvent')) {
      $.removeData(event.target, this.widgetName + '.preventClickEvent');
    }

    // these delegates are required to keep context
    this._mouseMoveDelegate = function(event) {
      return that._mouseMove(event);
    };
    this._mouseUpDelegate = function(event) {
      return that._mouseUp(event);
    };
    $(document)
      .bind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
      .bind('mouseup.'+this.widgetName, this._mouseUpDelegate);

    event.preventDefault();

    mouseHandled = true;
    return true;
  },

  _mouseMove: function(event) {
    // IE mouseup check - mouseup happened when mouse was out of window
    if ($.ui.ie && !(document.documentMode >= 9) && !event.button) {
      return this._mouseUp(event);
    }

    if (this._mouseStarted) {
      this._mouseDrag(event);
      return event.preventDefault();
    }

    if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
      this._mouseStarted =
        (this._mouseStart(this._mouseDownEvent, event) !== false);
      (this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
    }

    return !this._mouseStarted;
  },

  _mouseUp: function(event) {
    $(document)
      .unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
      .unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);

    if (this._mouseStarted) {
      this._mouseStarted = false;

      if (event.target === this._mouseDownEvent.target) {
        $.data(event.target, this.widgetName + '.preventClickEvent', true);
      }

      this._mouseStop(event);
    }

    return false;
  },

  _mouseDistanceMet: function(event) {
    return (Math.max(
        Math.abs(this._mouseDownEvent.pageX - event.pageX),
        Math.abs(this._mouseDownEvent.pageY - event.pageY)
      ) >= this.options.distance
    );
  },

  _mouseDelayMet: function(event) {
    return this.mouseDelayMet;
  },

  // These are placeholder methods, to be overriden by extending plugin
  _mouseStart: function(event) {},
  _mouseDrag: function(event) {},
  _mouseStop: function(event) {},
  _mouseCapture: function(event) { return true; }
});

})(jQuery);
/*!
 * jQuery UI Slider 1.9.2
 * http://jqueryui.com
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/slider/
 *
 * Depends:
 *  jquery.ui.core.js
 *  jquery.ui.mouse.js
 *  jquery.ui.widget.js
 */
(function( $, undefined ) {

// number of pages in a slider
// (how many times can you page up/down to go through the whole range)
var numPages = 5;

$.widget( "ui.slider", $.ui.mouse, {
  version: "1.9.2",
  widgetEventPrefix: "slide",

  options: {
    animate: false,
    distance: 0,
    max: 100,
    min: 0,
    orientation: "horizontal",
    range: false,
        pointer:true, //show pinter
    step: 1,
    value: 0,
    values: null
  },

  _create: function() {
    var i, handleCount,
      o = this.options,
      existingHandles = this.element.find( ".ui-slider-handle" ).addClass( "ui-state-default ui-corner-all" ),
      handle = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#' title='" +o.value+ "'></a>",
      handles = [];

    this._keySliding = false;
    this._mouseSliding = false;
    this._animateOff = true;
    this._handleIndex = null;
    this._detectOrientation();
    this._mouseInit();

    this.element
      .addClass( "ui-slider" +
        " ui-slider-" + this.orientation +
        " ui-widget" +
        " ui-widget-content" +
        " ui-corner-all" +
        ( o.disabled ? " ui-slider-disabled ui-disabled" : "" ) );

    this.range = $([]);

    if ( o.range ) {
      if ( o.range === true ) {
        if ( !o.values ) {
          o.values = [ this._valueMin(), this._valueMin() ];
        }
        if ( o.values.length && o.values.length !== 2 ) {
          o.values = [ o.values[0], o.values[0] ];
        }
      }

      this.range = $( "<div></div>" )
        .appendTo( this.element )
        .addClass( "ui-slider-range" +
        // note: this isn't the most fittingly semantic framework class for this element,
        // but worked best visually with a variety of themes
        " ui-widget-header" +
        ( ( o.range === "min" || o.range === "max" ) ? " ui-slider-range-" + o.range : "" ) );
    }

    handleCount = ( o.values && o.values.length ) || 1;

    for ( i = existingHandles.length; i < handleCount; i++ ) {
      handles.push( handle );
    }

    this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );

    this.handle = this.handles.eq( 0 );
    
    
    if (o.pointer) {
      this.point = $("<div class='relative'></div>")               
            .width(this.element.width())
            .css("margin-top",this.element[0].offsetHeight-2)
            .addClass("ui-slider-pointer");
        var pointSpan = "";
        var valueMin = this._valueMin();
        var valueMax = this._valueMax();
        for (var i = valueMin; i <= valueMax; i++) {
            var value = i;
            var valPercent = (valueMax !== valueMin) ? (value - valueMin) / (valueMax - valueMin) * 100 : 0;
            pointSpan += "<span class='ui_sliderPoint absolute'step='" + i + "' style='left:" + valPercent + "%;'><em></em>"
            if (o.text) //add text
                pointSpan += "<p class='ui_point_text'>" + o.text[i] + "</p>"; //show pointer text
                pointSpan+="</span>"
        }
        this.point.append($(pointSpan)).appendTo(this.element);
    }
    
    this.handles.filter( "a" )
      .click(function( event ) {
        event.preventDefault();
      })
      .mouseenter(function() {
        if ( !o.disabled ) {
          $( this ).addClass( "ui-state-hover" );
        }
      })
      .mouseleave(function() {
        $( this ).removeClass( "ui-state-hover" );
      })
      .focus(function() {
        if ( !o.disabled ) {
          $( ".ui-slider .ui-state-focus" ).removeClass( "ui-state-focus" );
          $( this ).addClass( "ui-state-focus" );
        } else {
          $( this ).blur();
        }
      })
      .blur(function() {
        $( this ).removeClass( "ui-state-focus" );
      });

    this.handles.each(function( i ) {
      $( this ).data( "ui-slider-handle-index", i );
    });

    this._on( this.handles, {
      keydown: function( event ) {
        var allowed, curVal, newVal, step,
          index = $( event.target ).data( "ui-slider-handle-index" );

        switch ( event.keyCode ) {
          case $.ui.keyCode.HOME:
          case $.ui.keyCode.END:
          case $.ui.keyCode.PAGE_UP:
          case $.ui.keyCode.PAGE_DOWN:
          case $.ui.keyCode.UP:
          case $.ui.keyCode.RIGHT:
          case $.ui.keyCode.DOWN:
          case $.ui.keyCode.LEFT:
            event.preventDefault();
            if ( !this._keySliding ) {
              this._keySliding = true;
              $( event.target ).addClass( "ui-state-active" );
              allowed = this._start( event, index );
              if ( allowed === false ) {
                return;
              }
            }
            break;
        }

        step = this.options.step;
        if ( this.options.values && this.options.values.length ) {
          curVal = newVal = this.values( index );
        } else {
          curVal = newVal = this.value();
        }

        switch ( event.keyCode ) {
          case $.ui.keyCode.HOME:
            newVal = this._valueMin();
            break;
          case $.ui.keyCode.END:
            newVal = this._valueMax();
            break;
          case $.ui.keyCode.PAGE_UP:
            newVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );
            break;
          case $.ui.keyCode.PAGE_DOWN:
            newVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );
            break;
          case $.ui.keyCode.UP:
          case $.ui.keyCode.RIGHT:
            if ( curVal === this._valueMax() ) {
              return;
            }
            newVal = this._trimAlignValue( curVal + step );
            break;
          case $.ui.keyCode.DOWN:
          case $.ui.keyCode.LEFT:
            if ( curVal === this._valueMin() ) {
              return;
            }
            newVal = this._trimAlignValue( curVal - step );
            break;
        }

        this._slide( event, index, newVal );
      },
      keyup: function( event ) {
        var index = $( event.target ).data( "ui-slider-handle-index" );

        if ( this._keySliding ) {
          this._keySliding = false;
          this._stop( event, index );
          this._change( event, index );
          $( event.target ).removeClass( "ui-state-active" );
        }
      }
    });

    this._refreshValue();

    this._animateOff = false;
  },

  _destroy: function() {
    this.handles.remove();
    this.range.remove();

    this.element
      .removeClass( "ui-slider" +
        " ui-slider-horizontal" +
        " ui-slider-vertical" +
        " ui-slider-disabled" +
        " ui-widget" +
        " ui-widget-content" +
        " ui-corner-all" );

    this._mouseDestroy();
  },

  _mouseCapture: function( event ) {
    var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
      that = this,
      o = this.options;

    if ( o.disabled ) {
      return false;
    }

    this.elementSize = {
      width: this.element.outerWidth(),
      height: this.element.outerHeight()
    };
    this.elementOffset = this.element.offset();

    position = { x: event.pageX, y: event.pageY };
    normValue = this._normValueFromMouse( position );
    distance = this._valueMax() - this._valueMin() + 1;
    this.handles.each(function( i ) {
      var thisDistance = Math.abs( normValue - that.values(i) );
      if ( distance > thisDistance ) {
        distance = thisDistance;
        closestHandle = $( this );
        index = i;
      }
    });

    // workaround for bug #3736 (if both handles of a range are at 0,
    // the first is always used as the one with least distance,
    // and moving it is obviously prevented by preventing negative ranges)
    if( o.range === true && this.values(1) === o.min ) {
      index += 1;
      closestHandle = $( this.handles[index] );
    }

    allowed = this._start( event, index );
    if ( allowed === false ) {
      return false;
    }
    this._mouseSliding = true;

    this._handleIndex = index;

    closestHandle
      .addClass( "ui-state-active" )
      .focus();

    offset = closestHandle.offset();
    mouseOverHandle = !$( event.target ).parents().andSelf().is( ".ui-slider-handle" );
    this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
      left: event.pageX - offset.left - ( closestHandle.width() / 2 ),
      top: event.pageY - offset.top -
        ( closestHandle.height() / 2 ) -
        ( parseInt( closestHandle.css("borderTopWidth"), 10 ) || 0 ) -
        ( parseInt( closestHandle.css("borderBottomWidth"), 10 ) || 0) +
        ( parseInt( closestHandle.css("marginTop"), 10 ) || 0)
    };

    if ( !this.handles.hasClass( "ui-state-hover" ) ) {
      this._slide( event, index, normValue );
    }
    this._animateOff = true;
    return true;
  },

  _mouseStart: function() {
    return true;
  },

  _mouseDrag: function( event ) {
    var position = { x: event.pageX, y: event.pageY },
      normValue = this._normValueFromMouse( position );

    this._slide( event, this._handleIndex, normValue );

    return false;
  },

  _mouseStop: function( event ) {
    this.handles.removeClass( "ui-state-active" );
    this._mouseSliding = false;

    this._stop( event, this._handleIndex );
    this._change( event, this._handleIndex );

    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = false;

    return false;
  },

  _detectOrientation: function() {
    this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";
  },

  _normValueFromMouse: function( position ) {
    var pixelTotal,
      pixelMouse,
      percentMouse,
      valueTotal,
      valueMouse;

    if ( this.orientation === "horizontal" ) {
      pixelTotal = this.elementSize.width;
      pixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );
    } else {
      pixelTotal = this.elementSize.height;
      pixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );
    }

    percentMouse = ( pixelMouse / pixelTotal );
    if ( percentMouse > 1 ) {
      percentMouse = 1;
    }
    if ( percentMouse < 0 ) {
      percentMouse = 0;
    }
    if ( this.orientation === "vertical" ) {
      percentMouse = 1 - percentMouse;
    }

    valueTotal = this._valueMax() - this._valueMin();
    valueMouse = this._valueMin() + percentMouse * valueTotal;

    return this._trimAlignValue( valueMouse );
  },

  _start: function( event, index ) {
    var uiHash = {
      handle: this.handles[ index ],
      value: this.value()
    };
    if ( this.options.values && this.options.values.length ) {
      uiHash.value = this.values( index );
      uiHash.values = this.values();
    }
    return this._trigger( "start", event, uiHash );
  },

  _slide: function( event, index, newVal ) {
    var otherVal,
      newValues,
      allowed;

    if ( this.options.values && this.options.values.length ) {
      otherVal = this.values( index ? 0 : 1 );

      if ( ( this.options.values.length === 2 && this.options.range === true ) &&
          ( ( index === 0 && newVal > otherVal) || ( index === 1 && newVal < otherVal ) )
        ) {
        newVal = otherVal;
      }

      if ( newVal !== this.values( index ) ) {
        newValues = this.values();
        newValues[ index ] = newVal;
        // A slide can be canceled by returning false from the slide callback
        allowed = this._trigger( "slide", event, {
          handle: this.handles[ index ],
          value: newVal,
          values: newValues
        } );
        otherVal = this.values( index ? 0 : 1 );
        if ( allowed !== false ) {
          this.values( index, newVal, true );
        }
      }
    } else {
      if ( newVal !== this.value() ) {
        // A slide can be canceled by returning false from the slide callback
        allowed = this._trigger( "slide", event, {
          handle: this.handles[ index ],
          value: newVal
        } );
        if ( allowed !== false ) {
          this.value( newVal );
        }
      }
    }
  },

  _stop: function( event, index ) {
    var uiHash = {
      handle: this.handles[ index ],
      value: this.value()
    };
    if ( this.options.values && this.options.values.length ) {
      uiHash.value = this.values( index );
      uiHash.values = this.values();
    }

    this._trigger( "stop", event, uiHash );
  },

  _change: function( event, index ) {
    if ( !this._keySliding && !this._mouseSliding ) {
      var uiHash = {
        handle: this.handles[ index ],
        value: this.value()
      };
      if ( this.options.values && this.options.values.length ) {
        uiHash.value = this.values( index );
        uiHash.values = this.values();
      }
      uiHash.handle.title = uiHash.value; //update title
      this._trigger( "change", event, uiHash );
    }
  },

  value: function( newValue ) {
    if ( arguments.length ) {
      this.options.value = this._trimAlignValue( newValue );
      this._refreshValue();
      this._change( null, 0 );
      return;
    }

    return this._value();
  },

  values: function( index, newValue ) {
    var vals,
      newValues,
      i;

    if ( arguments.length > 1 ) {
      this.options.values[ index ] = this._trimAlignValue( newValue );
      this._refreshValue();
      this._change( null, index );
      return;
    }

    if ( arguments.length ) {
      if ( $.isArray( arguments[ 0 ] ) ) {
        vals = this.options.values;
        newValues = arguments[ 0 ];
        for ( i = 0; i < vals.length; i += 1 ) {
          vals[ i ] = this._trimAlignValue( newValues[ i ] );
          this._change( null, i );
        }
        this._refreshValue();
      } else {
        if ( this.options.values && this.options.values.length ) {
          return this._values( index );
        } else {
          return this.value();
        }
      }
    } else {
      return this._values();
    }
  },

  _setOption: function( key, value ) {
    var i,
      valsLength = 0;

    if ( $.isArray( this.options.values ) ) {
      valsLength = this.options.values.length;
    }

    $.Widget.prototype._setOption.apply( this, arguments );

    switch ( key ) {
      case "disabled":
        if ( value ) {
          this.handles.filter( ".ui-state-focus" ).blur();
          this.handles.removeClass( "ui-state-hover" );
          this.handles.prop( "disabled", true );
          this.element.addClass( "ui-disabled" );
        } else {
          this.handles.prop( "disabled", false );
          this.element.removeClass( "ui-disabled" );
        }
        break;
      case "orientation":
        this._detectOrientation();
        this.element
          .removeClass( "ui-slider-horizontal ui-slider-vertical" )
          .addClass( "ui-slider-" + this.orientation );
        this._refreshValue();
        break;
      case "value":
        this._animateOff = true;
        this._refreshValue();
        this._change( null, 0 );
        this._animateOff = false;
        break;
      case "values":
        this._animateOff = true;
        this._refreshValue();
        for ( i = 0; i < valsLength; i += 1 ) {
          this._change( null, i );
        }
        this._animateOff = false;
        break;
      case "min":
      case "max":
        this._animateOff = true;
        this._refreshValue();
        this._animateOff = false;
        break;
    }
  },

  //internal value getter
  // _value() returns value trimmed by min and max, aligned by step
  _value: function() {
    var val = this.options.value;
    val = this._trimAlignValue( val );

    return val;
  },

  //internal values getter
  // _values() returns array of values trimmed by min and max, aligned by step
  // _values( index ) returns single value trimmed by min and max, aligned by step
  _values: function( index ) {
    var val,
      vals,
      i;

    if ( arguments.length ) {
      val = this.options.values[ index ];
      val = this._trimAlignValue( val );

      return val;
    } else {
      // .slice() creates a copy of the array
      // this copy gets trimmed by min and max and then returned
      vals = this.options.values.slice();
      for ( i = 0; i < vals.length; i+= 1) {
        vals[ i ] = this._trimAlignValue( vals[ i ] );
      }

      return vals;
    }
  },

  // returns the step-aligned value that val is closest to, between (inclusive) min and max
  _trimAlignValue: function( val ) {
    if ( val <= this._valueMin() ) {
      return this._valueMin();
    }
    if ( val >= this._valueMax() ) {
      return this._valueMax();
    }
    var step = ( this.options.step > 0 ) ? this.options.step : 1,
      valModStep = (val - this._valueMin()) % step,
      alignValue = val - valModStep;

    if ( Math.abs(valModStep) * 2 >= step ) {
      alignValue += ( valModStep > 0 ) ? step : ( -step );
    }

    // Since JavaScript has problems with large floats, round
    // the final value to 5 digits after the decimal point (see #4124)
    return parseFloat( alignValue.toFixed(5) );
  },

  _valueMin: function() {
    return this.options.min;
  },

  _valueMax: function() {
    return this.options.max;
  },

  _refreshValue: function() {
    var lastValPercent, valPercent, value, valueMin, valueMax,
      oRange = this.options.range,
      o = this.options,
      that = this,
      animate = ( !this._animateOff ) ? o.animate : false,
      _set = {};

    if ( this.options.values && this.options.values.length ) {
      this.handles.each(function( i ) {
        valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;
        _set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
        $( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );
        if (that.options.range === true) {
            
          if ( that.orientation === "horizontal" ) {
            if ( i === 0 ) {
              that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { left: valPercent + "%" }, o.animate );
            }
            if ( i === 1 ) {
              that.range[ animate ? "animate" : "css" ]( { width: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
            }
          } else {
            if ( i === 0 ) {
              that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { bottom: ( valPercent ) + "%" }, o.animate );
            }
            if ( i === 1 ) {
              that.range[ animate ? "animate" : "css" ]( { height: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
            }
          }
        }
        lastValPercent = valPercent;
      });
    } else {
      value = this.value();
      valueMin = this._valueMin();
      valueMax = this._valueMax();
      valPercent = ( valueMax !== valueMin ) ?
          ( value - valueMin ) / ( valueMax - valueMin ) * 100 :
          0;
      _set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
      this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );

      if ( oRange === "min" && this.orientation === "horizontal" ) {
        this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { width: valPercent + "%" }, o.animate );
      }
      if ( oRange === "max" && this.orientation === "horizontal" ) {
        this.range[ animate ? "animate" : "css" ]( { width: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
      }
      if ( oRange === "min" && this.orientation === "vertical" ) {
        this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { height: valPercent + "%" }, o.animate );
      }
      if ( oRange === "max" && this.orientation === "vertical" ) {
        this.range[ animate ? "animate" : "css" ]( { height: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
      }
    }
  }

});

}(jQuery));

/*!
 * jQuery UI Draggable 1.9.2
 * http://jqueryui.com
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/draggable/
 *
 * Depends:
 *  jquery.ui.core.js
 *  jquery.ui.mouse.js
 *  jquery.ui.widget.js
 */
(function( $, undefined ) {

$.widget("ui.draggable", $.ui.mouse, {
  version: "1.9.2",
  widgetEventPrefix: "drag",
  options: {
    addClasses: true,
    appendTo: "parent",
    axis: false,
    connectToSortable: false,
    containment: false,
    cursor: "auto",
    cursorAt: false,
    grid: false,
    handle: false,
    helper: "original",
    iframeFix: false,
    opacity: false,
    refreshPositions: false,
    revert: false,
    revertDuration: 500,
    scope: "default",
    scroll: true,
    scrollSensitivity: 20,
    scrollSpeed: 20,
    snap: false,
    snapMode: "both",
    snapTolerance: 20,
    stack: false,
    zIndex: false
  },
  _create: function() {

    if (this.options.helper == 'original' && !(/^(?:r|a|f)/).test(this.element.css("position")))
      this.element[0].style.position = 'relative';

    (this.options.addClasses && this.element.addClass("ui-draggable"));
    (this.options.disabled && this.element.addClass("ui-draggable-disabled"));

    this._mouseInit();

  },

  _destroy: function() {
    this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );
    this._mouseDestroy();
  },

  _mouseCapture: function(event) {

    var o = this.options;

    // among others, prevent a drag on a resizable-handle
    if (this.helper || o.disabled || $(event.target).is('.ui-resizable-handle'))
      return false;

    //Quit if we're not on a valid handle
    this.handle = this._getHandle(event);
    if (!this.handle)
      return false;

    $(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {
      $('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>')
      .css({
        width: this.offsetWidth+"px", height: this.offsetHeight+"px",
        position: "absolute", opacity: "0.001", zIndex: 1000
      })
      .css($(this).offset())
      .appendTo("body");
    });

    return true;

  },

  _mouseStart: function(event) {

    var o = this.options;

    //Create and append the visible helper
    this.helper = this._createHelper(event);

    this.helper.addClass("ui-draggable-dragging");

    //Cache the helper size
    this._cacheHelperProportions();

    //If ddmanager is used for droppables, set the global draggable
    if($.ui.ddmanager)
      $.ui.ddmanager.current = this;

    /*
     * - Position generation -
     * This block generates everything position related - it's the core of draggables.
     */

    //Cache the margins of the original element
    this._cacheMargins();

    //Store the helper's css position
    this.cssPosition = this.helper.css("position");
    this.scrollParent = this.helper.scrollParent();

    //The element's absolute position on the page minus margins
    this.offset = this.positionAbs = this.element.offset();
    this.offset = {
      top: this.offset.top - this.margins.top,
      left: this.offset.left - this.margins.left
    };

    $.extend(this.offset, {
      click: { //Where the click happened, relative to the element
        left: event.pageX - this.offset.left,
        top: event.pageY - this.offset.top
      },
      parent: this._getParentOffset(),
      relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
    });

    //Generate the original position
    this.originalPosition = this.position = this._generatePosition(event);
    this.originalPageX = event.pageX;
    this.originalPageY = event.pageY;

    //Adjust the mouse offset relative to the helper if 'cursorAt' is supplied
    (o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

    //Set a containment if given in the options
    if(o.containment)
      this._setContainment();

    //Trigger event + callbacks
    if(this._trigger("start", event) === false) {
      this._clear();
      return false;
    }

    //Recache the helper size
    this._cacheHelperProportions();

    //Prepare the droppable offsets
    if ($.ui.ddmanager && !o.dropBehaviour)
      $.ui.ddmanager.prepareOffsets(this, event);


    this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position

    //If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
    if ( $.ui.ddmanager ) $.ui.ddmanager.dragStart(this, event);

    return true;
  },

  _mouseDrag: function(event, noPropagation) {
    var support = $.browser.msie;
    var version = $.browser.version;
    support = support && (version.length > 3);
    support = support || $.browser.mozilla;
    // \u9488\u5bf9Firefox\u548cIE9\u4ee5\u4e0a\u7248\u672c\u5904\u7406\uff0c\u907f\u514d\u62d6\u62fd\u8fc7\u7a0b\u4e2d\u9f20\u6807\u91ca\u653e\u62d6\u62fd\u4e0d\u91ca\u653e
    if(support){
      if(event.buttons != 1 ){
          this._mouseUp({});
          return false;
      }
    }
    //Compute the helpers position
    this.position = this._generatePosition(event);
    this.positionAbs = this._convertPositionTo("absolute");

    //Call plugins and callbacks and use the resulting position if something is returned
    if (!noPropagation) {
      var ui = this._uiHash();
      if(this._trigger('drag', event, ui) === false) {
        this._mouseUp({});
        return false;
      }
      this.position = ui.position;
    }

    if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left+'px';
    if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top+'px';
    if($.ui.ddmanager) $.ui.ddmanager.drag(this, event);

    return false;
  },

  _mouseStop: function(event) {

    //If we are using droppables, inform the manager about the drop
    var dropped = false;
    if ($.ui.ddmanager && !this.options.dropBehaviour)
      dropped = $.ui.ddmanager.drop(this, event);

    //if a drop comes from outside (a sortable)
    if(this.dropped) {
      dropped = this.dropped;
      this.dropped = false;
    }

    //if the original element is no longer in the DOM don't bother to continue (see #8269)
    var element = this.element[0], elementInDom = false;
    while ( element && (element = element.parentNode) ) {
      if (element == document ) {
        elementInDom = true;
      }
    }
    if ( !elementInDom && this.options.helper === "original" )
      return false;

    if((this.options.revert == "invalid" && !dropped) || (this.options.revert == "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
      var that = this;
      $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
        if(that._trigger("stop", event) !== false) {
          that._clear();
        }
      });
    } else {
      if(this._trigger("stop", event) !== false) {
        this._clear();
      }
    }

    return false;
  },

  _mouseUp: function(event) {
    //Remove frame helpers
    $("div.ui-draggable-iframeFix").each(function() {
      this.parentNode.removeChild(this);
    });

    //If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
    if( $.ui.ddmanager ) $.ui.ddmanager.dragStop(this, event);

    return $.ui.mouse.prototype._mouseUp.call(this, event);
  },

  cancel: function() {

    if(this.helper.is(".ui-draggable-dragging")) {
      this._mouseUp({});
    } else {
      this._clear();
    }

    return this;

  },

  _getHandle: function(event) {

    var handle = !this.options.handle || !$(this.options.handle, this.element).length ? true : false;
    $(this.options.handle, this.element)
      .find("*")
      .andSelf()
      .each(function() {
        if(this == event.target) handle = true;
      });

    return handle;

  },

  _createHelper: function(event) {

    var o = this.options;
    var helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper == 'clone' ? this.element.clone().removeAttr('id') : this.element);

    if(!helper.parents('body').length)
      helper.appendTo((o.appendTo == 'parent' ? this.element[0].parentNode : o.appendTo));

    if(helper[0] != this.element[0] && !(/(fixed|absolute)/).test(helper.css("position")))
      helper.css("position", "absolute");

    return helper;

  },

  _adjustOffsetFromHelper: function(obj) {
    if (typeof obj == 'string') {
      obj = obj.split(' ');
    }
    if ($.isArray(obj)) {
      obj = {left: +obj[0], top: +obj[1] || 0};
    }
    if ('left' in obj) {
      this.offset.click.left = obj.left + this.margins.left;
    }
    if ('right' in obj) {
      this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
    }
    if ('top' in obj) {
      this.offset.click.top = obj.top + this.margins.top;
    }
    if ('bottom' in obj) {
      this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
    }
  },

  _getParentOffset: function() {

    //Get the offsetParent and cache its position
    this.offsetParent = this.helper.offsetParent();
    var po = this.offsetParent.offset();

    // This is a special case where we need to modify a offset calculated on start, since the following happened:
    // 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
    // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
    //    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
    if(this.cssPosition == 'absolute' && this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
      po.left += this.scrollParent.scrollLeft();
      po.top += this.scrollParent.scrollTop();
    }

    if((this.offsetParent[0] == document.body) //This needs to be actually done for all browsers, since pageX/pageY includes this information
    || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == 'html' && $.ui.ie)) //Ugly IE fix
      po = { top: 0, left: 0 };

    return {
      top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
      left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
    };

  },

  _getRelativeOffset: function() {

    if(this.cssPosition == "relative") {
      var p = this.element.position();
      return {
        top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
        left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
      };
    } else {
      return { top: 0, left: 0 };
    }

  },

  _cacheMargins: function() {
    this.margins = {
      left: (parseInt(this.element.css("marginLeft"),10) || 0),
      top: (parseInt(this.element.css("marginTop"),10) || 0),
      right: (parseInt(this.element.css("marginRight"),10) || 0),
      bottom: (parseInt(this.element.css("marginBottom"),10) || 0)
    };
  },

  _cacheHelperProportions: function() {
    this.helperProportions = {
      width: this.helper.outerWidth(),
      height: this.helper.outerHeight()
    };
  },

  _setContainment: function() {

    var o = this.options;
    if(o.containment == 'parent') o.containment = this.helper[0].parentNode;
    if(o.containment == 'document' || o.containment == 'window') this.containment = [
      o.containment == 'document' ? 0 : $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
      o.containment == 'document' ? 0 : $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
      (o.containment == 'document' ? 0 : $(window).scrollLeft()) + $(o.containment == 'document' ? document : window).width() - this.helperProportions.width - this.margins.left,
      (o.containment == 'document' ? 0 : $(window).scrollTop()) + ($(o.containment == 'document' ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
    ];

    if(!(/^(document|window|parent)$/).test(o.containment) && o.containment.constructor != Array) {
      var c = $(o.containment);
      var ce = c[0]; if(!ce) return;
      var co = c.offset();
      var over = ($(ce).css("overflow") != 'hidden');

      this.containment = [
        (parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0),
        (parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0),
        (over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right,
        (over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top  - this.margins.bottom
      ];
      this.relative_container = c;

    } else if(o.containment.constructor == Array) {
      this.containment = o.containment;
    }

  },

  _convertPositionTo: function(d, pos) {

    if(!pos) pos = this.position;
    var mod = d == "absolute" ? 1 : -1;
    var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

    return {
      top: (
        pos.top                                 // The absolute mouse position
        + this.offset.relative.top * mod                    // Only for relative positioned nodes: Relative offset from element to offset parent
        + this.offset.parent.top * mod                      // The offsetParent's offset without borders (offset + border)
        - ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)
      ),
      left: (
        pos.left                                // The absolute mouse position
        + this.offset.relative.left * mod                   // Only for relative positioned nodes: Relative offset from element to offset parent
        + this.offset.parent.left * mod                     // The offsetParent's offset without borders (offset + border)
        - ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)
      )
    };

  },

  _generatePosition: function(event) {

    var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);
    var pageX = event.pageX;
    var pageY = event.pageY;

    /*
     * - Position constraining -
     * Constrain the position to a mix of grid, containment.
     */

    if(this.originalPosition) { //If we are not dragging yet, we won't check for options
      var containment;
      if(this.containment) {
      if (this.relative_container){
        var co = this.relative_container.offset();
        containment = [ this.containment[0] + co.left,
          this.containment[1] + co.top,
          this.containment[2] + co.left,
          this.containment[3] + co.top ];
      }
      else {
        containment = this.containment;
      }

        if(event.pageX - this.offset.click.left < containment[0]) pageX = containment[0] + this.offset.click.left;
        if(event.pageY - this.offset.click.top < containment[1]) pageY = containment[1] + this.offset.click.top;
        if(event.pageX - this.offset.click.left > containment[2]) pageX = containment[2] + this.offset.click.left;
        if(event.pageY - this.offset.click.top > containment[3]) pageY = containment[3] + this.offset.click.top;
      }

      if(o.grid) {
        //Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
        var top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
        pageY = containment ? (!(top - this.offset.click.top < containment[1] || top - this.offset.click.top > containment[3]) ? top : (!(top - this.offset.click.top < containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

        var left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
        pageX = containment ? (!(left - this.offset.click.left < containment[0] || left - this.offset.click.left > containment[2]) ? left : (!(left - this.offset.click.left < containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
      }

    }

    return {
      top: (
        pageY                               // The absolute mouse position
        - this.offset.click.top                         // Click offset (relative to the element)
        - this.offset.relative.top                        // Only for relative positioned nodes: Relative offset from element to offset parent
        - this.offset.parent.top                        // The offsetParent's offset without borders (offset + border)
        + ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))
      ),
      left: (
        pageX                               // The absolute mouse position
        - this.offset.click.left                        // Click offset (relative to the element)
        - this.offset.relative.left                       // Only for relative positioned nodes: Relative offset from element to offset parent
        - this.offset.parent.left                       // The offsetParent's offset without borders (offset + border)
        + ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))
      )
    };

  },

  _clear: function() {
    this.helper.removeClass("ui-draggable-dragging");
    if(this.helper[0] != this.element[0] && !this.cancelHelperRemoval) this.helper.remove();
    //if($.ui.ddmanager) $.ui.ddmanager.current = null;
    this.helper = null;
    this.cancelHelperRemoval = false;
  },

  // From now on bulk stuff - mainly helpers

  _trigger: function(type, event, ui) {
    ui = ui || this._uiHash();
    $.ui.plugin.call(this, type, [event, ui]);
    if(type == "drag") this.positionAbs = this._convertPositionTo("absolute"); //The absolute position has to be recalculated after plugins
    return $.Widget.prototype._trigger.call(this, type, event, ui);
  },

  plugins: {},

  _uiHash: function(event) {
    return {
      helper: this.helper,
      position: this.position,
      originalPosition: this.originalPosition,
      offset: this.positionAbs
    };
  }

});

$.ui.plugin.add("draggable", "connectToSortable", {
  start: function(event, ui) {

    var inst = $(this).data("draggable"), o = inst.options,
      uiSortable = $.extend({}, ui, { item: inst.element });
    inst.sortables = [];
    $(o.connectToSortable).each(function() {
      var sortable = $.data(this, 'sortable');
      if (sortable && !sortable.options.disabled) {
        inst.sortables.push({
          instance: sortable,
          shouldRevert: sortable.options.revert
        });
        sortable.refreshPositions();  // Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).
        sortable._trigger("activate", event, uiSortable);
      }
    });

  },
  stop: function(event, ui) {

    //If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
    var inst = $(this).data("draggable"),
      uiSortable = $.extend({}, ui, { item: inst.element });

    $.each(inst.sortables, function() {
      if(this.instance.isOver) {

        this.instance.isOver = 0;

        inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
        this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

        //The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: 'valid/invalid'
        if(this.shouldRevert) this.instance.options.revert = true;

        //Trigger the stop of the sortable
        this.instance._mouseStop(event);

        this.instance.options.helper = this.instance.options._helper;

        //If the helper has been the original item, restore properties in the sortable
        if(inst.options.helper == 'original')
          this.instance.currentItem.css({ top: 'auto', left: 'auto' });

      } else {
        this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
        this.instance._trigger("deactivate", event, uiSortable);
      }

    });

  },
  drag: function(event, ui) {

    var inst = $(this).data("draggable"), that = this;

    var checkPos = function(o) {
      var dyClick = this.offset.click.top, dxClick = this.offset.click.left;
      var helperTop = this.positionAbs.top, helperLeft = this.positionAbs.left;
      var itemHeight = o.height, itemWidth = o.width;
      var itemTop = o.top, itemLeft = o.left;

      return $.ui.isOver(helperTop + dyClick, helperLeft + dxClick, itemTop, itemLeft, itemHeight, itemWidth);
    };

    $.each(inst.sortables, function(i) {

      var innermostIntersecting = false;
      var thisSortable = this;
      //Copy over some variables to allow calling the sortable's native _intersectsWith
      this.instance.positionAbs = inst.positionAbs;
      this.instance.helperProportions = inst.helperProportions;
      this.instance.offset.click = inst.offset.click;

      if(this.instance._intersectsWith(this.instance.containerCache)) {
        innermostIntersecting = true;
        $.each(inst.sortables, function () {
          this.instance.positionAbs = inst.positionAbs;
          this.instance.helperProportions = inst.helperProportions;
          this.instance.offset.click = inst.offset.click;
          if  (this != thisSortable
            && this.instance._intersectsWith(this.instance.containerCache)
            && $.ui.contains(thisSortable.instance.element[0], this.instance.element[0]))
            innermostIntersecting = false;
            return innermostIntersecting;
        });
      }


      if(innermostIntersecting) {
        //If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
        if(!this.instance.isOver) {

          this.instance.isOver = 1;
          //Now we fake the start of dragging for the sortable instance,
          //by cloning the list group item, appending it to the sortable and using it as inst.currentItem
          //We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
          this.instance.currentItem = $(that).clone().removeAttr('id').appendTo(this.instance.element).data("sortable-item", true);
          this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
          this.instance.options.helper = function() { return ui.helper[0]; };

          event.target = this.instance.currentItem[0];
          this.instance._mouseCapture(event, true);
          this.instance._mouseStart(event, true, true);

          //Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
          this.instance.offset.click.top = inst.offset.click.top;
          this.instance.offset.click.left = inst.offset.click.left;
          this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
          this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

          inst._trigger("toSortable", event);
          inst.dropped = this.instance.element; //draggable revert needs that
          //hack so receive/update callbacks work (mostly)
          inst.currentItem = inst.element;
          this.instance.fromOutside = inst;

        }

        //Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
        if(this.instance.currentItem) this.instance._mouseDrag(event);

      } else {

        //If it doesn't intersect with the sortable, and it intersected before,
        //we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
        if(this.instance.isOver) {

          this.instance.isOver = 0;
          this.instance.cancelHelperRemoval = true;

          //Prevent reverting on this forced stop
          this.instance.options.revert = false;

          // The out event needs to be triggered independently
          this.instance._trigger('out', event, this.instance._uiHash(this.instance));

          this.instance._mouseStop(event, true);
          this.instance.options.helper = this.instance.options._helper;

          //Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
          this.instance.currentItem.remove();
          if(this.instance.placeholder) this.instance.placeholder.remove();

          inst._trigger("fromSortable", event);
          inst.dropped = false; //draggable revert needs that
        }

      };

    });

  }
});

$.ui.plugin.add("draggable", "cursor", {
  start: function(event, ui) {
    var t = $('body'), o = $(this).data('draggable').options;
    if (t.css("cursor")) o._cursor = t.css("cursor");
    t.css("cursor", o.cursor);
  },
  stop: function(event, ui) {
    var o = $(this).data('draggable').options;
    if (o._cursor) $('body').css("cursor", o._cursor);
  }
});

$.ui.plugin.add("draggable", "opacity", {
  start: function(event, ui) {
    var t = $(ui.helper), o = $(this).data('draggable').options;
    if(t.css("opacity")) o._opacity = t.css("opacity");
    t.css('opacity', o.opacity);
  },
  stop: function(event, ui) {
    var o = $(this).data('draggable').options;
    if(o._opacity) $(ui.helper).css('opacity', o._opacity);
  }
});

$.ui.plugin.add("draggable", "scroll", {
  start: function(event, ui) {
    var i = $(this).data("draggable");
    if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') i.overflowOffset = i.scrollParent.offset();
  },
  drag: function(event, ui) {

    var i = $(this).data("draggable"), o = i.options, scrolled = false;

    if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') {

      if(!o.axis || o.axis != 'x') {
        if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity)
          i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
        else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity)
          i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
      }

      if(!o.axis || o.axis != 'y') {
        if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity)
          i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
        else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity)
          i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
      }

    } else {

      if(!o.axis || o.axis != 'x') {
        if(event.pageY - $(document).scrollTop() < o.scrollSensitivity)
          scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
        else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity)
          scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
      }

      if(!o.axis || o.axis != 'y') {
        if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity)
          scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
        else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity)
          scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
      }

    }

    if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)
      $.ui.ddmanager.prepareOffsets(i, event);

  }
});

$.ui.plugin.add("draggable", "snap", {
  start: function(event, ui) {

    var i = $(this).data("draggable"), o = i.options;
    i.snapElements = [];

    $(o.snap.constructor != String ? ( o.snap.items || ':data(draggable)' ) : o.snap).each(function() {
      var $t = $(this); var $o = $t.offset();
      if(this != i.element[0]) i.snapElements.push({
        item: this,
        width: $t.outerWidth(), height: $t.outerHeight(),
        top: $o.top, left: $o.left
      });
    });

  },
  drag: function(event, ui) {

    var inst = $(this).data("draggable"), o = inst.options;
    var d = o.snapTolerance;

    var x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
      y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

    for (var i = inst.snapElements.length - 1; i >= 0; i--){

      var l = inst.snapElements[i].left, r = l + inst.snapElements[i].width,
        t = inst.snapElements[i].top, b = t + inst.snapElements[i].height;

      //Yes, I know, this is insane ;)
      if(!((l-d < x1 && x1 < r+d && t-d < y1 && y1 < b+d) || (l-d < x1 && x1 < r+d && t-d < y2 && y2 < b+d) || (l-d < x2 && x2 < r+d && t-d < y1 && y1 < b+d) || (l-d < x2 && x2 < r+d && t-d < y2 && y2 < b+d))) {
        if(inst.snapElements[i].snapping) (inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
        inst.snapElements[i].snapping = false;
        continue;
      }

      if(o.snapMode != 'inner') {
        var ts = Math.abs(t - y2) <= d;
        var bs = Math.abs(b - y1) <= d;
        var ls = Math.abs(l - x2) <= d;
        var rs = Math.abs(r - x1) <= d;
        if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
        if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
        if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
        if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
      }

      var first = (ts || bs || ls || rs);

      if(o.snapMode != 'outer') {
        var ts = Math.abs(t - y1) <= d;
        var bs = Math.abs(b - y2) <= d;
        var ls = Math.abs(l - x1) <= d;
        var rs = Math.abs(r - x2) <= d;
        if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
        if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
        if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
        if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
      }

      if(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first))
        (inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
      inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

    };

  }
});

$.ui.plugin.add("draggable", "stack", {
  start: function(event, ui) {

    var o = $(this).data("draggable").options;

    var group = $.makeArray($(o.stack)).sort(function(a,b) {
      return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);
    });
    if (!group.length) { return; }

    var min = parseInt(group[0].style.zIndex) || 0;
    $(group).each(function(i) {
      this.style.zIndex = min + i;
    });

    this[0].style.zIndex = min + group.length;

  }
});

$.ui.plugin.add("draggable", "zIndex", {
  start: function(event, ui) {
    var t = $(ui.helper), o = $(this).data("draggable").options;
    if(t.css("zIndex")) o._zIndex = t.css("zIndex");
    t.css('zIndex', o.zIndex);
  },
  stop: function(event, ui) {
    var o = $(this).data("draggable").options;
    if(o._zIndex) $(ui.helper).css('zIndex', o._zIndex);
  }
});

})(jQuery);
/*!
 * jQuery resize event - v1.1 - 3/14/2010
 * http://benalman.com/projects/jquery-resize-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery resize event
//
// *Version: 1.1, Last updated: 3/14/2010*
// 
// Project Home - http://benalman.com/projects/jquery-resize-plugin/
// GitHub       - http://github.com/cowboy/jquery-resize/
// Source       - http://github.com/cowboy/jquery-resize/raw/master/jquery.ba-resize.js
// (Minified)   - http://github.com/cowboy/jquery-resize/raw/master/jquery.ba-resize.min.js (1.0kb)
// 
// About: License
// 
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// This working example, complete with fully commented code, illustrates a few
// ways in which this plugin can be used.
// 
// resize event - http://benalman.com/code/projects/jquery-resize/examples/resize/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
// 
// jQuery Versions - 1.3.2, 1.4.1, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome, Opera 9.6-10.1.
// Unit Tests      - http://benalman.com/code/projects/jquery-resize/unit/
// 
// About: Release History
// 
// 1.1 - (3/14/2010) Fixed a minor bug that was causing the event to trigger
//       immediately after bind in some circumstances. Also changed $.fn.data
//       to $.data to improve performance.
// 1.0 - (2/10/2010) Initial release

(function($,window,undefined){
  '$:nomunge'; // Used by YUI compressor.
  
  // A jQuery object containing all non-window elements to which the resize
  // event is bound.
  var elems = $([]),
    
    // Extend $.resize if it already exists, otherwise create it.
    jq_resize = $.resize = $.extend( $.resize, {} ),
    
    timeout_id,
    
    // Reused strings.
    str_setTimeout = 'setTimeout',
    str_resize = 'resize',
    str_data = str_resize + '-special-event',
    str_delay = 'delay',
    str_throttle = 'throttleWindow';
  
  // Property: jQuery.resize.delay
  // 
  // The numeric interval (in milliseconds) at which the resize event polling
  // loop executes. Defaults to 250.
  
  jq_resize[ str_delay ] = 250;
  
  // Property: jQuery.resize.throttleWindow
  // 
  // Throttle the native window object resize event to fire no more than once
  // every <jQuery.resize.delay> milliseconds. Defaults to true.
  // 
  // Because the window object has its own resize event, it doesn't need to be
  // provided by this plugin, and its execution can be left entirely up to the
  // browser. However, since certain browsers fire the resize event continuously
  // while others do not, enabling this will throttle the window resize event,
  // making event behavior consistent across all elements in all browsers.
  // 
  // While setting this property to false will disable window object resize
  // event throttling, please note that this property must be changed before any
  // window object resize event callbacks are bound.
  
  jq_resize[ str_throttle ] = true;
  
  // Event: resize event
  // 
  // Fired when an element's width or height changes. Because browsers only
  // provide this event for the window element, for other elements a polling
  // loop is initialized, running every <jQuery.resize.delay> milliseconds
  // to see if elements' dimensions have changed. You may bind with either
  // .resize( fn ) or .bind( "resize", fn ), and unbind with .unbind( "resize" ).
  // 
  // Usage:
  // 
  // > jQuery('selector').bind( 'resize', function(e) {
  // >   // element's width or height has changed!
  // >   ...
  // > });
  // 
  // Additional Notes:
  // 
  // * The polling loop is not created until at least one callback is actually
  //   bound to the 'resize' event, and this single polling loop is shared
  //   across all elements.
  // 
  // Double firing issue in jQuery 1.3.2:
  // 
  // While this plugin works in jQuery 1.3.2, if an element's event callbacks
  // are manually triggered via .trigger( 'resize' ) or .resize() those
  // callbacks may double-fire, due to limitations in the jQuery 1.3.2 special
  // events system. This is not an issue when using jQuery 1.4+.
  // 
  // > // While this works in jQuery 1.4+
  // > $(elem).css({ width: new_w, height: new_h }).resize();
  // > 
  // > // In jQuery 1.3.2, you need to do this:
  // > var elem = $(elem);
  // > elem.css({ width: new_w, height: new_h });
  // > elem.data( 'resize-special-event', { width: elem.width(), height: elem.height() } );
  // > elem.resize();
      
  $.event.special[ str_resize ] = {
    
    // Called only when the first 'resize' event callback is bound per element.
    setup: function() {
      // Since window has its own native 'resize' event, return false so that
      // jQuery will bind the event using DOM methods. Since only 'window'
      // objects have a .setTimeout method, this should be a sufficient test.
      // Unless, of course, we're throttling the 'resize' event for window.
      if ( !jq_resize[ str_throttle ] && this[ str_setTimeout ] ) { return false; }
      
      var elem = $(this);
      
      // Add this element to the list of internal elements to monitor.
      elems = elems.add( elem );
      
      // Initialize data store on the element.
      $.data( this, str_data, { w: elem.width(), h: elem.height() } );
      
      // If this is the first element added, start the polling loop.
      if ( elems.length === 1 ) {
        loopy();
      }
    },
    
    // Called only when the last 'resize' event callback is unbound per element.
    teardown: function() {
      // Since window has its own native 'resize' event, return false so that
      // jQuery will unbind the event using DOM methods. Since only 'window'
      // objects have a .setTimeout method, this should be a sufficient test.
      // Unless, of course, we're throttling the 'resize' event for window.
      if ( !jq_resize[ str_throttle ] && this[ str_setTimeout ] ) { return false; }
      
      var elem = $(this);
      
      // Remove this element from the list of internal elements to monitor.
      elems = elems.not( elem );
      
      // Remove any data stored on the element.
      elem.removeData( str_data );
      
      // If this is the last element removed, stop the polling loop.
      if ( !elems.length ) {
        clearTimeout( timeout_id );
      }
    },
    
    // Called every time a 'resize' event callback is bound per element (new in
    // jQuery 1.4).
    add: function( handleObj ) {
      // Since window has its own native 'resize' event, return false so that
      // jQuery doesn't modify the event object. Unless, of course, we're
      // throttling the 'resize' event for window.
      if ( !jq_resize[ str_throttle ] && this[ str_setTimeout ] ) { return false; }
      
      var old_handler;
      
      // The new_handler function is executed every time the event is triggered.
      // This is used to update the internal element data store with the width
      // and height when the event is triggered manually, to avoid double-firing
      // of the event callback. See the "Double firing issue in jQuery 1.3.2"
      // comments above for more information.
      
      function new_handler( e, w, h ) {
        var elem = $(this),
          data = $.data( this, str_data );
        
        // If called from the polling loop, w and h will be passed in as
        // arguments. If called manually, via .trigger( 'resize' ) or .resize(),
        // those values will need to be computed.
        data.w = w !== undefined ? w : elem.width();
        data.h = h !== undefined ? h : elem.height();
        
        old_handler.apply( this, arguments );
      };
      
      // This may seem a little complicated, but it normalizes the special event
      // .add method between jQuery 1.4/1.4.1 and 1.4.2+
      if ( $.isFunction( handleObj ) ) {
        // 1.4, 1.4.1
        old_handler = handleObj;
        return new_handler;
      } else {
        // 1.4.2+
        old_handler = handleObj.handler;
        handleObj.handler = new_handler;
      }
    }
    
  };
  
  function loopy() {
    
    // Start the polling loop, asynchronously.
    timeout_id = window[ str_setTimeout ](function(){
      
      // Iterate over all elements to which the 'resize' event is bound.
      elems.each(function(){
        var elem = $(this),
          width = elem.width(),
          height = elem.height(),
          data = $.data( this, str_data );
        
        // If element size has changed since the last time, update the element
        // data store and trigger the 'resize' event.
        if ( width !== data.w || height !== data.h ) {
          elem.trigger( str_resize, [ data.w = width, data.h = height ] );
        }
        
      });
      
      // Loop.
      loopy();
      
    }, jq_resize[ str_delay ] );
    
  };
  
})(jQuery,this);
/*
Script: Moo.js
	My Object Oriented javascript.

Author:
	Valerio Proietti, <http://mad4milk.net>

License:
	MIT-style license.

Mootools Credits:
	- Class is slightly based on Base.js <http://dean.edwards.name/weblog/2006/03/base/> (c) 2006 Dean Edwards, License <http://creativecommons.org/licenses/LGPL/2.1/>
	- Some functions are based on those found in prototype.js <http://prototype.conio.net/> (c) 2005 Sam Stephenson sam [at] conio [dot] net, MIT-style license
	- Documentation by Aaron Newton (aaron.newton [at] cnet [dot] com) and Valerio Proietti.
*/

/*
Class: Class
	The base class object of the <http://mootools.net> framework.

Arguments:
	properties - the collection of properties that apply to the class. Creates a new class, its initialize method will fire upon class instantiation.

Example:
	(start code)
	var Cat = new Class({
		initialize: function(name){
			this.name = name;
		}
	});
	var myCat = new Cat('Micia');
	alert(myCat.name); //alerts 'Micia'
	(end)
*/

var Class = function(properties){
	var klass = function(){
		if (this.initialize && arguments[0] != 'noinit') return this.initialize.apply(this, arguments);
		else return this;
	};
	for (var property in this) klass[property] = this[property];
	klass.prototype = properties;
	return klass;
};

/*
Property: empty
	Returns an empty function
*/

Class.empty = function(){};

Class.prototype = {

	/*
	Property: extend
		Returns the copy of the Class extended with the passed in properties.

	Arguments:
		properties - the properties to add to the base class in this new Class.

	Example:
		(start code)
		var Animal = new Class({
			initialize: function(age){
				this.age = age;
			}
		});
		var Cat = Animal.extend({
			initialize: function(name, age){
				this.parent(age); //will call the previous initialize;
				this.name = name;
			}
		});
		var myCat = new Cat('Micia', 20);
		alert(myCat.name); //alerts 'Micia'
		alert(myCat.age); //alerts 20
		(end)
	*/

	extend: function(properties){
		var pr0t0typ3 = new this('noinit');

		var parentize = function(previous, current){
			if (!previous.apply || !current.apply) return false;
			return function(){
				this.parent = previous;
				return current.apply(this, arguments);
			};
		};

		for (var property in properties){
			var previous = pr0t0typ3[property];
			var current = properties[property];
			if (previous && previous != current) current = parentize(previous, current) || current;
			pr0t0typ3[property] = current;
		}
		return new Class(pr0t0typ3);
	},

	/*
	Property: implement
		Implements the passed in properties to the base Class prototypes, altering the base class, unlike <Class.extend>.

	Arguments:
		properties - the properties to add to the base class.

	Example:
		(start code)
		var Animal = new Class({
			initialize: function(age){
				this.age = age;
			}
		});
		Animal.implement({
			setName: function(name){
				this.name = name
			}
		});
		var myAnimal = new Animal(20);
		myAnimal.setName('Micia');
		alert(myAnimal.name); //alerts 'Micia'
		(end)
	*/

	implement: function(properties){
		for (var property in properties) this.prototype[property] = properties[property];
	}

};

/* Section: Object related Functions */

/*
Function: Object.extend
	Copies all the properties from the second passed object to the first passed Object.
	If you do myWhatever.extend = Object.extend the first parameter will become myWhatever, and your extend function will only need one parameter.

Example:
	(start code)
	var firstOb = {
		'name': 'John',
		'lastName': 'Doe'
	};
	var secondOb = {
		'age': '20',
		'sex': 'male',
		'lastName': 'Dorian'
	};
	Object.extend(firstOb, secondOb);
	//firstOb will become: 
	{
		'name': 'John',
		'lastName': 'Dorian',
		'age': '20',
		'sex': 'male'
	};
	(end)

Returns:
	The first object, extended.
*/

Object.extend = function(){
	var args = arguments;
	args = (args[1]) ? [args[0], args[1]] : [this, args[0]];
	for (var property in args[1]) args[0][property] = args[1][property];
	return args[0];
};

/*
Function: Object.Native
	Will add a .extend method to the objects passed as a parameter, equivalent to <Class.implement>

Arguments:
	a number of classes/native javascript objects

*/

Object.Native = function(){
	for (var i = 0; i < arguments.length; i++) arguments[i].extend = Class.prototype.implement;
};

new Object.Native(Function, Array, String, Number, Class);
var CallerResponder = new Class({
  debug : false,
  context : new Object(),
  error : function(request, settings, e) {
    if (request.status == 500) {
      var jsonError = jQuery.parseJSON(request.responseText);
    }
    if (this.debug) {
      alert("ajax error: " + request.responseText);
      alert(e);
    }
  },
  complete : function(res, status) {
    if (this.debug) {
      alert("ajax complete");
    }
  },
  beforeSend : function(xml) {
    if (this.debug) {
      alert("ajax beforeSend:" + xml);
    }
  }
});

var RemoteJsonService = new Class({
  jsonGateway : "/json/",
  async : true,
  ajaxCall : function(args, bsMethod) {
    var callbackOption = null;
    if (args.length >= 1) {
      var tmpArg_2 = args[args.length - 1];
      if (tmpArg_2!=null && typeof (tmpArg_2.success) != "undefined"
          && $.isFunction(tmpArg_2.success)) {
        callbackOption = tmpArg_2;
        Array.prototype.splice.apply(args, [ args.length - 1, 1 ]);
      }
    }
    var newArgs = new Array();
    for ( var i = 0; i < args.length; i++) {
      newArgs[i] = args[i];
      // If this param object is invalid, hault this ajax
      if ($._isInValid(newArgs[i]))
        return null;
    }
    var data = new Object();
    data.managerMethod = bsMethod;
    data.arguments = $.toJSON(newArgs);

    var result = null;
    if (callbackOption && callbackOption.success) {
      this.async = true;
      callbackOption = $.extend(new CallerResponder(), callbackOption);
    } else {
      this.async = false;
      callbackOption = new CallerResponder();
      callbackOption.success = function(jsonObj) {
        if (typeof jsonObj === 'string') {
          try {
            result = $.parseJSON(jsonObj);
          }catch(e) {
            result = jsonObj;
          }
        } else
          result = jsonObj;
      }
    }

    jQuery.ajax({
      type : "POST",
      url : this.jsonGateway + '&rnd=' + parseInt(Math.random()*100000),
      data : data,
      dataType : "json",
      async : this.async,
      success : callbackOption.success,
      error : callbackOption.error,
      complete : callbackOption.complete
    });
    return result;
  }
});
(function ($) {
    var m = {
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"' : '\\"',
            '\\': '\\\\'
        },
        s = {
            'array': function (x) {
                var a = ['['], b, f, i, l = x.length, v;
                for (var i = 0; i < l; i += 1) {
                    v = x[i];
                    f = s[typeof v];
                    if (f) {
                        v = f(v);
                        if (typeof v == 'string') {
                            if (b) {
                                a[a.length] = ',';
                            }
                            a[a.length] = v;
                            b = true;
                        }
                    }
                }
                a[a.length] = ']';
                return a.join('');
            },
            'date': function (x) {
            	return s.string(x.dateFormat('Y-m-d'));
            },
            'boolean': function (x) {
                return String(x);
            },
            'null': function (x) {
                return "null";
            },
            'number': function (x) {
                return isFinite(x) ? String(x) : 'null';
            },
            'object': function (x) {
            	if (!(typeof(x) === 'object')) return 'null';           	
                if (x) {					              	
                    if (x instanceof Array) {
                        return s.array(x);
                    }else if (x instanceof Date) {
                        return s.date(x);
                    }
                    var a = ['{'], b, f, i, v;
                    for (var i in x) {
                        v = x[i];
                        f = s[typeof v];
                        if (f) {
                            v = f(v);
                            if (typeof v == 'string') {
                                if (b) {
                                    a[a.length] = ',';
                                }
                                a.push(s.string(i), ':', v);
                                b = true;
                            }
                        }
                    }
                    a[a.length] = '}';
                    return a.join('');
                }
                return 'null';
            },
            'string': function (x) {
                if (/["\\\x00-\x1f]/.test(x)) {
                    x = x.replace(/([\x00-\x1f\\"])/g, function(a, b) {
                        var c = m[b];
                        if (c) {
                            return c;
                        }
                        c = b.charCodeAt();
                        return '\\u00' +
                            Math.floor(c / 16).toString(16) +
                            (c % 16).toString(16);
                    });
                }
                return '"' + x + '"';
            },
            'function': function (x) {
                //extract function name
                return x.toString().match(/function\s+([^\s\(]+)/)[1];
            }
        };

	jQuery.toJSON = function(v) {		
		var f;
		if (isNaN(v)) { 
			f = s[typeof v];
		}
		else {
			f = (v instanceof Array) ? s["array"] : s["number"];
		}
		if (f) return f(v);
	};
	
	jQuery.parseJSON = function(v, safe) {
		if (safe === undefined) safe = jQuery.parseJSON.safe;
		if (safe && !/^("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/.test(v))
			return undefined;
		return eval('('+v+')');
	};
	
	jQuery.parseJSON.safe = false;

})(jQuery);
/*
 * jQuery Auto Fill Form Plugin @requires jQuery v1.1 or later @author Andy
 */
(function($) {
  /**
   * $.autofillform() provides a mechanism for fill form automatically, no more
   * script or code, very convenient.
   * 
   * $.autofillform() accepts a single option object argument, the following
   * attributes are supported:
   * 
   * fillformobj: Identifies the data to fill form.
   */
  $._autofill = new Object();

  $.autofillform = function(options) {
    var settings = {};
    options = $.extend(settings, options);

    var fillmaps = options.fillmaps ? options.fillmaps : new Object();
    $._autofill.filllists = fillmaps;

    for ( var f in fillmaps) {
      $("#" + f).fillform(fillmaps[f]);
    }
  }

  $.fn.clearform = function(options) {
    var settings = {
      clearHidden : false
    };
    this.resetValidate();
    options = $.extend(settings, options);
    this.find(':input').each(function() {
      switch (this.type) {
        case 'passsword':
        case 'select-multiple':
        case 'select-one':
        case 'text':
        case 'textarea':
          $(this).val('');
        case 'hidden':
          if (options.clearHidden)
            $(this).val('');
          break;
        case 'checkbox':
        case 'radio':
          this.checked = false;
      }
    });
  }

  $.fn.fillform = function(fillData) {
    if (this[0] == null)
      return;
    this.each(function(i) {
      var frm = $(this);
      frm.resetValidate();
      for ( var fi in fillData) {
        $("#" + fi, frm).each(function(i) {
          $(this).fill(fillData[fi], fi, frm);
        });
      }
      frm = null;
    });
  }

  $.fn.fill = function(v, fi, frm) {
    var el = this[0], eq = $(el), tag = el.tagName.toLowerCase();
    if (v && typeof v == "string")
      v = v.replace(/<\/\/script>/gi, "</script>");
    var t = el.type, val = el.value;
    switch (tag) {
      case "input":
        switch (t) {
          case "text":
            eq.val(v);
            break;
          case "hidden":
            var cp = eq.attrObj("_comp"), ctp;
            if (cp) {
              ctp = cp.attr("compType");
              if (ctp === "selectPeople") {
                var pv = "", pt = "";
                if (v && v.startsWith("{")) {
                  v = $.parseJSON(v);
                  cp.comp(v);
                  pv = v.value;
                  pt = v.text;
                }
                cp.val(pt);
                eq.val(pv);
                break;
              }
            }
            eq.val(v);
            break;
          case "checkbox":
            if (v == val)
              el.checked = true;
            else
              el.checked = false;
            break;
          case "radio":
            if (frm) {
              $("input[type=radio]", frm).each(
                  function() {
                    if ((this.id == fi || this.name == fi) && v == this.value
                        && !this.checked)
                      this.checked = true;
                  });
            } else if (v == el.value && !el.checked) {
              el.checked = true;
            }
        }
        break;
      case "textarea":
        eq.val(v);
        break;
      case "select":
        switch (t) {
          case "select-one":
            eq.val(v);
            break;
          case "select-multiple":
            var ops = el.options;
            var sv = v.split(",");
            for ( var i = 0; i < ops.length; i++) {
              var op = ops[i];
              // extra pain for IE...
              var opv = $.browser.msie && !(op.attributes['value'].specified) ? op.text
                  : op.value;
              for ( var j = 0; j < sv.length; j++) {
                if (opv == sv[j]) {
                  op.selected = true;
                }
              }
            }
        }
        break;
      default:
        if (!((!v || v == '') && $(this)[0].innerHTML.indexOf('&nbsp;') != -1)) {
          if(v && eq.parent('.text_overflow').length == 1) {
            eq.attr('title', v);
          }
          if (v && typeof v == "string")
            v = v.replace(/\n/g, '<br/>');
          el.innerHTML = v;
        }
    }
    if (this.attr('validate')) {
      this.validate();
    }
  };

  $.fn.fillgrid = function(d) {
    this.each(function(i) {
      var t = this.tagName.toLowerCase(), e = $(this);
      switch (t) {
        case "table":
          elem.grid.addData(d);
          break;
      }
    });
  };
})(jQuery);
/*
 * jQuery Json Form Submit Plugin @requires jQuery v1.1 or later, json plugin
 * and form plugin @author Andy
 */
(function($) {
  /**
   * jsonSubmit() provides a mechanism for submitting an HTML form using json
   * data package, json data can be grouped by domain.
   * 
   * jsonSubmit accepts a single option object argument, the following
   * attributes are supported:
   * 
   * domains: Identifies the domain(s) in current forms. The value is an array
   * that contains ids of the domain elements. default value: null, this form
   * will be treated as one domain egridFilter: EGrid data filter function.
   * egridFilterRemoved: If filter removed records in Egrid get data.
   * 
   * beforeSubmit: Callback method to be invoked before the form is submitted.
   * default value: null
   */
  $.fn.jsonSubmit = function(options) {
    showMask && showMask();
  	var iframeId = '_js_frm'+new Date().getTime();
    var settings = {
      validate : true
      ,ajax : false
    };
    options = $.extend(settings, options);
	  //\u5f00\u59cb\u906e\u7f69
	  //try{if(getCtpTop() && getCtpTop().startProc)getCtpTop().startProc();}catch(e){}
    var jsonObj = this.formobj(options);
    if(options.paramObj){
        if($.isArray(jsonObj)){
            jsonObj = {};
        }
        for(var name in options.paramObj){
            jsonObj[name] = options.paramObj[name];
        }
    }
    var action = options.action || this.attr("action");
    if (action == null || $.trim(action) == "") {
      alert("you don't set action attribute!");
      hideMask && hideMask();
      return;
    }
    if (options.validate && $._isInValid(jsonObj)){
      hideMask && hideMask();
      return;
    }
    if (options.beforeSubmit
        && options.beforeSubmit(jsonObj, this, options) === false){
      hideMask && hideMask();
      return;
    }
    var jsonStr = $.toJSON(jsonObj);
    if(options.ajax==true){
    	$.ajax({
    		async:false
    		,type:"post"
    		,url:action
    		,data:{
    			_json_params:jsonStr
    		}
    		,error:function(){
    			alert("error\uff0cform submit fail!");
    		}
    		,success:function(json){
    			if (typeof options.callback == 'function') {
    				options.callback(json);
    			}
    		}
    	});
    }else{
	    var targetWindow = window;
	    if(options.targetWindow){
	      targetWindow = options.targetWindow;
	    }
	    var jsonForm = $('<form method="post" action="'
	        + action
	        + '"><input type="hidden" id="_json_params" name="_json_params" value=""/></form>', targetWindow.document);
	    $(targetWindow.document.body).append(jsonForm);
	    targetWindow = null;
	    if (typeof options.callback == 'function') {
	      var tempIframe = $(
	          '<iframe id="'+iframeId+'" name="'+iframeId+'" style="display:none;"></iframe>',
	          jsonForm[0].ownerDocument);
	      $("body", jsonForm[0].ownerDocument).append(tempIframe);
	      tempIframe.load(function() {
	          //\u53d6\u6d88\u906e\u7f69 
	          //try{if(getCtpTop() && getCtpTop().endProc)getCtpTop().endProc();}catch(e){}
	        var response = $(this).contents().find("body").html();
	        response = response.replace(/<embed[^<>]*>/,"");
	        if(response && response.trim().startsWith('<pre>')){
	          response = response.trim();
	          response = response.substr(5,response.length-11);;
	        }
	        options.callback(response);
	        $(this).remove();
	      });
	      tempIframe = null;
	      jsonForm.attr('target', iframeId);
	    } else if (options.target) {
	      jsonForm.attr('target', options.target);
	    }
	    jsonForm.find("#_json_params").val(jsonStr);
	    if (options.debug && _isDevelop) {
	      alert("JSON data format:\n" + jsonStr);
	    }
	    $.confirmClose(false);
	    jsonForm.submit();
	
	    jsonForm.remove();
	    jsonForm = null;
    }
    try{
    	hideMask && hideMask();
    }catch(e){}
  };

  $.fn.formobj = function(options) {
    if (this[0] == null)
      return {};
    var settings = {
      gridFilter : null,
      validate : true,
      errorIcon : true,
	    errorAlert:false,
	    errorBg:false,
	    includeDisabled:true
    };
    options = $.extend(settings, options);
    var domains = options.domains;
    if (domains && domains.length > 0) {
      var domainsObj = {};
      if ($("#attachmentArea").length > 0) {
	  var e1 = $("<div></div>");
	  e1.attr("id", "attachmentInputs");
	  e1.attr("style", "display:none;");
	  e1.attr("isGrid", "true");
	  this.append(e1);
	  saveAttachment();
	  domains.push("attachmentInputs");
      }
      for ( var i = 0; i < domains.length; i++) {
        var domainId = domains[i], $domain = domainId == this.attr("id") ? this
            : $("#" + domainId, this), val;
        var nd = $("." + domainId), n = nd.length;
        if (n > 0 && options.matchClass) {
          val = [];
          var ds = [];
          for ( var j = 0; j < domains.length; j++) {
            if (j != i)
              ds.push(domains[j]);
          }
          nd.each(function(i) {
            $domain = $(this);
            var vv = $.jsonDomain($domain, options);
            if ($._isInValid(vv) && !$._isInValid(val))
              $._invalidObj(val);
            val.push(vv);
            for ( var k = 0; k < ds.length; k++) {
              var vd = $.jsonDomain($("#" + ds[k], $domain), options);
              if ($._isInValid(vd) && !$._isInValid(val))
                $._invalidObj(val);
              vv[ds[k]] = vd;
            }
          });
          if (options.isGrid)
            domainsObj = val;
          else if (val.length == 1)
            domainsObj = val[0];
          break;
        } else {
          val = $.jsonDomain($domain, options);
          domainsObj[domainId] = val;
          if ($._isInValid(val) && !$._isInValid(domainsObj))
            $._invalidObj(domainsObj);
        }
      }
      return domainsObj;
    } else {
      return $.jsonDomain(this, options);
    }
  };

  $.jsonDomain = function(e, options) {
    options = options || {};
    var a = [], obj = null, gf = options.gridFilter, isgrid = e.attr("isGrid") ? e
        .attr("isGrid")
        : false, vl = true, rt, ex = [], ds = options.domains, idb = options.includeDisabled;
    if (ds) {
      for ( var i = 0; i < ds.length; i++) {
        var v = ds[i];
        if (e[0] && v != e[0].id && $("#" + v, e).length > 0)
          ex.push(v);
      }
    }
    $("*", e).add(e).filter(
        function(idx) {
          // if too much options, the program will die. so return when the
          // tag name is option
          if (!this.id && !this.name) {
            return false;
          }
          for ( var i = 0; i < ex.length; i++) {
            var v = ex[i];
            if ($(this).parents("#" + v).length > 0)
              return false;
          }
          var el = this, t = el.tagName.toLowerCase(), n = el.id ? el.id
              : el.name;
          if (t && n && (idb || !el.disabled) && !el.ignore) {
            switch (t) {
              case "table":
                if (el.grid && el.p.datas) {
                  var ds = el.p.datas.rows;
                  $(ds).each(function(i) {
                    if (gf && !gf(ds[i], $("tbody tr", $(el)).get(i)))
                      return;
                    a.push(ds[i]);
                  });
                  isgrid = true;
                }
                break;
              case "input":
                var tp = el.type;
                if (tp == "button" || tp == "reset" || tp == "submit"
                    || tp == "image" || n == "_json_params")
                  break;
              case "textarea":
                if (t == "textarea") {
                  var cmp = $(el).attr('comp');
                  if (cmp && $.parseJSON('{' + cmp + '}').type == "editor") {
                    $(el).val($(el).getEditorContent());
                    break;
                  }
                }
              case "select":
                if (obj && n in obj) {
                  if (el.type != 'radio') {
                    obj = {};
                    a.push(obj);
                  }
                }
                var v = $.fieldValue(el, true, idb);
                if (!obj) {
                  obj = new Object();
                  a.push(obj);
                }
                if (!obj[n])
                  obj[n] = v;
            }
          }
          return false;
        });
    if (options.validate) {
      vl = $(e).validate({
        errorIcon : options.errorIcon,
		    errorAlert : options.errorAlert,
		    errorBg : options.errorBg
      });
    }
    if (a.length == 1 && !isgrid) {
      rt = a[0];
    } else {
      if (gf) {
        var aa = [];
        for ( var i = 0; i < a.length; i++) {
          if (!gf(a[i]))
            continue;
          aa.push(a[i]);
        }
        a = aa;
      }
      rt = a;
    }
    if (!vl)
      $._invalidObj(rt);
    return rt;
  };
  $.fieldValue = function(el, successful, idb) {
    var n = el.id ? el.id : el.dataIndex ? el.dataIndex : el.name, t = el.type, tag = el.tagName
        .toLowerCase();
    if (typeof successful == 'undefined')
      successful = true;

    if (successful
        && (!n || (!idb && el.disabled) || t == 'reset' || t == 'button'
            || (t == 'checkbox' || t == 'radio') && !el.checked
            || (t == 'submit' || t == 'image') && el.form && el.form.clk != el || tag == 'select'
            && el.selectedIndex == -1))
      return null;

    if (tag == 'select') {
      var index = el.selectedIndex;
      if (index < 0)
        return null;
      var a = [], ops = el.options;
      var one = (t == 'select-one');
      var max = (one ? index + 1 : ops.length);
      for ( var i = (one ? index : 0); i < max; i++) {
        var op = ops[i];
        if (op.selected) {
          // extra pain for IE...
          var v = $.browser.msie && !(op.attributes['value'].specified) ? op.text
              : op.value;
          if (one)
            return v;
          a.push(v);
        }
      }
      return a;
    }
    return el.value;
  };
})(jQuery);
(function($) {
// \u6570\u636e\u6e90\u3002\u5b58\u50a8\u539f\u59cb\u4e0b\u62c9\u6570\u636e\u5e76\u5339\u914d\u3002
function ACDatasource(options){
    var setting = $.extend({data:[],value:null},options);
    this.data = setting.data;
    this.value = setting.value;
    this.onChange = setting.onChange;
    this.originValue = this.value;

    function escapeRegex( value ) {
        return value.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    };
    this.filter = function(array, term) {
        var matcher = new RegExp( escapeRegex(term), "i" );
        return $.grep( array, function(value) {
            return matcher.test( value.label || value.value || value );
        });
    };
    return this;
};
// \u6309\u6587\u672c\u6a21\u7cca\u5339\u914d\u6570\u636e\u9879
ACDatasource.prototype.search = function(value,event){
        //value = value != null ? value : this.element.val();

        // always save the actual value, not the one passed as an argument
        //this.term = this.element.val();
/*
        if ( value.length < this.options.minLength ) {
            return this.close( event );
        }

        clearTimeout( this.closing );
        if ( this._trigger( "search", event ) === false ) {
            return;
        }
*/
        return this.filter( this.data,value );
};
// \u6309\u503c\u67e5\u627e\u6570\u636e\u9879
ACDatasource.prototype.get = function(value){
    var v = $.grep( this.data, function(item) {
        return item.value == value;
    });
    if(v.length>0){
        return v[0];
    }
    return null;
};
ACDatasource.prototype.getAll = function(value){
    return this.data;
};
ACDatasource.prototype.val = function(value){
    if(value){
        this.value = value;
        $(this).trigger('change',value);
    }
    return this.value;
}
// \u6062\u590d\u4e0a\u4e00\u6b21\u6709\u6548\u503c
ACDatasource.prototype.restore= function(){
    this.val(this.originValue);
}

ACDatasource.prototype.destroy = function(event){
    this.data = null;
    this.value = null;
    $(this).unbind('change');
}
//==================================================================================
// \u7ba1\u7406\u5f39\u51fa\u663e\u793a\uff0c\u6570\u636e\u6e32\u67d3\u3002
function ACPopup(options){
    this.id = Math.random()*10000;
    this.setting = $.extend({autoSize:false},options);
    this.onSelect = options.onSelect;
    this.ui = options.ui;
    this._cursor = null; 
    this.cursor = function(cursor){
        if(cursor===null || cursor){
            this._cursor = cursor;
        };
        return this._cursor;
    }
    // if(options.container) this.container = $(options.container);
    this.ds = options.ds;
    this.data = options.ds.getAll();
    var _this = this;
    function create(){
        var id = 'autocomplete_popup';
        var popup = $('#' + id);
        if(popup.length==0){
            popup = $('<div></div>')
                .attr('id',id)
                .addClass('autocomplete-popup')
                .append($('<div></div>').addClass('menu'))
                .appendTo($('body'));
            popup.hide();
            popup.mousedown(function(evt){
                var onScrollbar = $( evt.target ).closest( ".item" ).length==0;
                if(!onScrollbar){
                    _this.close();
                }else{
                    setTimeout(function() {
                        $( document ).one( 'mousedown', function( event ) {
                            //console.log(event.target.html());
                            if(popup[0]!=event.target && !$.contains(popup,event.target)){
                                _this.close();
                            }

                        });
                    }, 1 );                    
                }
                // use another timeout to make sure the blur-event-handler on the input was already triggered
                setTimeout(function() {
                    clearTimeout( popup.closing );
                }, 13);
                // \u5148\u89e6\u53d1popup\u7684mousedown\uff0c\u624d\u89e6\u53d1input\u7684blur
                $(_this).trigger('clicked');
            });
        }
        // \u521b\u5efa\u906e\u7f69iframe\uff0c\u907f\u514dIE\u4e0b\u88abActiveX\u906e\u4f4f
        if($('#' + id + '_mask').length==0){
            $('<iframe></iframe>')
                .attr('id',id + '_mask')
                .addClass('autocomplete-popup-mask')
                .appendTo($('body'));
        };
        // event
        $(this).unbind('moveFirst').bind('moveFirst',function(e,item){
           _this.moveFirst();
        }).unbind('moveNext').bind('moveNext',function(e,item){
           _this.moveNext();
        }).bind('movePrevious',function(e,item){
           _this.movePrevious();
        });

        return popup;
    };
    this.container = create();
    this.moveFirst = function(){
        _this.cursor($(_this.container).find('div.menu div:first-child'));
        _this.highlight();
    }
    this.moveNext = function(){
        if(_this.cursor()==null){
            _this.moveFirst();
            return;
        }
        var next = _this.cursor().next()
        if(next.length>0){
            _this.cursor( next);
            _this.highlight();
        }
    }
    this.movePrevious = function(){
        if(_this.cursor()==null){
            _this.moveFirst();
            return;
        }
        var previous = _this.cursor().prev();
        if(previous.length>0){
            _this.cursor (previous);
            _this.highlight();
        }       
    }
    this.highlight = function (){
        $('.item-selected').removeClass('item-selected');
        _this.cursor().addClass('item-selected');
        // _this.cursor()[0].scrollIntoView();
    };
    this.calcPosition = function(){
        var maxHeight = 300;
        var scrollTop = $(document).scrollTop();
        var viewWidth = document.documentElement.clientWidth + $(document).scrollLeft();
        var viewHeight = document.documentElement.clientHeight + scrollTop;
        
        if(maxHeight>viewHeight){
            maxHeight = viewHeight;
        }        
        var input = $(_this.ui);
        var inputTop = input.offset().top-1;
        var inputHeight = input.outerHeight();

        var pos = {left:0,top:0,width:0,height:0};
        pos.left = input.offset().left;
        pos.width = input.width();//.outerWidth();
        var hasButton = input.next('input[name="acToggle"]').length>0;
        if(hasButton){
            pos.width = pos.width + input.next('input[name="acToggle"]').outerWidth() - 3;
        }
        // jQuery ui flip\u6a21\u5f0ftop\u6821\u6b63
        var popup = _this.container;
        var uiTop = inputTop + inputHeight;
        var uiHeight = popup.height('').outerHeight();
        var height = uiHeight;

        if(uiHeight>maxHeight){
            uiHeight=maxHeight;
        }    

        // \u6539\u4e3a\u5728input\u4e0a\u9762\u663e\u793a
        if(( uiTop + uiHeight > viewHeight)&&(uiTop>(viewHeight/2))){
            uiTop = inputTop - uiHeight - 2;
        }
        if(uiTop<scrollTop){
            uiTop = scrollTop;
        }
        if(uiTop<0){
            uiTop = 0;
            if(uiHeight<inputTop){
                uiTop = inputTop - uiHeight;
            }
            uiHeight = inputTop-uiTop;
        }
        // \u98d8\u5728\u4e0a\u65b9
        if(uiTop + uiHeight + 5 < inputTop){
            uiTop = inputTop - uiHeight - 5;
        }
        //console.log(uiTop+' ' + uiHeight + ' ' + inputTop+ ' ' +inputHeight);
        // \u906e\u4f4f\u4e86Input
        if(uiTop+uiHeight>inputTop+inputHeight){
            uiTop = inputTop + inputHeight;
        }
        // \u5728\u4e0b\u9762\u663e\u793a\uff0c\u4f46\u592a\u9ad8
        if(uiTop+uiHeight>viewHeight){
            uiHeight = viewHeight - uiTop - 10;
        }
        if(height>uiHeight){
            pos.scroll = true;
        }
        pos.height = uiHeight;
        pos.top = uiTop;

        // \u8ba1\u7b97\u5bbd\u5ea6
        if(_this.setting.autoSize){
            var maxLen = 0;
            $.each(_this.data,function(i,item){
                var len = item.label.length;
                if(len>maxLen) maxLen = len; 
            });
            var width = maxLen*8 + 24
            pos.width = pos.width>width ? pos.width:width;
        }
        return pos;
    }

};
ACPopup.prototype.refresh= function(){
    var menu = this.container.find('div.menu');
    menu.empty();
    var _this = this;
    var selectedItem = this.ds.value;
    $.each( this.data, function( index, item ) {
        var selected = selectedItem && (item.value == selectedItem.value)?' item-selected':'';
        var l = $('<div></div>').html(item.label)
            .data('item',item)
            .attr('title',item.label)
            .addClass('item' + selected)
            .hover(function(event){
                _this.cursor($(this));
                _this.highlight();
            })
            .mousedown(function(event){
                _this.select(event);
            })
            .appendTo(menu);
        if(selected) _this.cursor(l);
    });
    if(this.cursor()==null){
        this.moveFirst();
    }
    this.highlight();
    if(this.data.length==0){
        menu.addClass('empty-menu');
    }else{
        menu.removeClass('empty-menu');
    }
    // this.container.html(html.join(''));
}
ACPopup.prototype.search= function(value){
    this.data = this.ds.search(value);
    this.cursor(null);
    this.refresh();
}
ACPopup.prototype.hide= function(event){
    $('#autocomplete_popup_mask').hide();
    this.container.hide();
}
ACPopup.prototype.show= function(){
    var _this = this;
    var pos = this.calcPosition();
    var container = this.container;
    if(pos.scroll){
        container.css('overflow-y', 'auto')
            .css('overflow-x', 'hidden')
            .css('height',pos.height +'px');
    }else{
        container.css('height','auto');
    }
    container.css({width:pos.width - 1 + 'px',
        top : pos.top + 1 + 'px',
        left : pos.left + 1 + 'px' });
    var height = container.height();
    $('#autocomplete_popup_mask').css({width:pos.width + 2 + 'px',
        top : pos.top - 0 + 'px',
        left : pos.left - 0 + 'px',
        height: height +'px'}).show();   
    // \u6eda\u52a8\u5219\u9690\u85cf,\u907f\u514d\u7236\u5bb9\u5668height:100% + overflow:auto \u65f6\u4e0b\u62c9\u9762\u677f\u4e0d\u8ddf\u968f\u6eda\u52a8
    $(container.parents()).scroll(function() {
        _this.hide();
    });
    var inputTop = $(_this.ui).offset().top;

    setTimeout(function(){var newTop = $(_this.ui).offset().top;if(newTop!=inputTop){_this.hide();}}, 500);
    this.container.show();
}
ACPopup.prototype.toggle= function(){
    this.container.toggle();
}
ACPopup.prototype.close= function(event){
    this.hide();
    //$(this).trigger( "close", event );
}
ACPopup.prototype.visible= function(){
    return $(this.container).is(':visible')
}

ACPopup.prototype.select= function(event){
    var c = this.cursor();
    if(c != null){
        this.ds.val(c.data('item'));
    }
    $(this.ui.ui).focus();
}
ACPopup.prototype.destroy= function(event){
    $(this).unbind('moveFirst')
        .unbind('movePrevious')
        .unbind('moveNext');
}
// \u4fdd\u5b58\u72b6\u6001\u4fe1\u606f\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u53d8\u91cf\u3002
var autocompleteStatus = {isClickPopup:false};
//====================================================================================
// \u6e32\u67d3\u5f55\u5165\u63a7\u4ef6\uff1b\u7ec4\u88c5\u8c03\u5ea6Popup\u3001DataSource
function GenericAutocomplete(options){
    var autoSelect = false;
    var keyCode = this.keyCode;
    var ui = $(options.ui);
    var _this = this;
    var value = options.value ;
    this.ds = new ACDatasource({data:options.data,value:value});
    $(this.ds).unbind('change')
        .bind('change',function(e,item){
        if(item){
            var noselectChanged = ui.data("value")==item.value;
            GenericAutocomplete.updateUi(ui,item,noselectChanged);
            if(options.onSelect){
                options.onSelect(item);
            };
        };
    });
    var popup = new ACPopup($.extend(options,{ds:this.ds,input:this}));
    var suppressKeyPress;
    ui.unbind('keyup').bind('keyup',function(event){
        switch( event.keyCode ) {
            case keyCode.PAGE_UP:
                // self._move( "previousPage", event );
                break;
            case keyCode.PAGE_DOWN:
                // self._move( "nextPage", event );
                break;
            case keyCode.UP:
                if(_this.popup.visible()){
                    $(popup).trigger('movePrevious');
                }else{
                    _this.popup.refresh();
                    _this.popup.show();
                }                
                // prevent moving cursor to beginning of text field in some browsers
                event.preventDefault();
                break;
            case keyCode.DOWN:
                if(_this.popup.visible()){
                    $(popup).trigger('moveNext');
                }else{
                    _this.popup.refresh();                  
                    _this.popup.show();
                }
                // prevent moving cursor to end of text field in some browsers
                event.preventDefault();
                break;
            case keyCode.ENTER:
            case keyCode.NUMPAD_ENTER:
                // when menu is open and has focus
                if ( _this.popup.visible()) {
                    // #6055 - Opera still allows the keypress to occur
                    // which causes forms to submit
                    suppressKeyPress = true;
                    popup.select();
                    popup.close();
                    event.preventDefault();
                }
                //passthrough - ENTER and TAB both select the current element
            case keyCode.TAB:
/*                if ( !self.menu.active ) {
                    return;
                }
                self.menu.select( event );*/
                break;
            case keyCode.ESCAPE:
                // self.element.val( self.term );
                // self.close( event );
                popup.close(event);
                break;
            default:
                // keypress is triggered before the input value is changed
                clearTimeout( _this.searching );
                var value = $(this).val();
                _this.searching = setTimeout(function() {
                    // only search if the value has changed
/*                    if ( self.term != self.element.val() ) {
                        self.selectedItem = null;
                        self.search( null, event );
                    }*/
                    popup.search(value);
                    popup.show();
                }, 150 );
                break;
        };

    }).keypress(function(event){
        if ( suppressKeyPress ) {
            suppressKeyPress = false;
            event.preventDefault();
        }
    }).unbind('click').bind('click',function(event){
        popup.refresh();
        popup.show();
    }).unbind('blur').bind('blur',function( event ) {
        
        // \u8f93\u5165\u65e0\u6548\u503c\u65f6\u9700\u8981\u6062\u590d
        $(this).val($(this).data('label'));
        // clearTimeout( _this.searching );
        // clicks on the menu (or a button to trigger a search) will cause a blur event
        // popup.closing = setTimeout(function() {
            //console.log('blur closing' + autocompleteStatus.isClickPopup);
            if(autocompleteStatus.isClickPopup){
                autocompleteStatus.isClickPopup = false;
                return;
            }
            autocompleteStatus.isClickPopup = false;
            popup.close();

            if(autoSelect){
                popup.select();
            }
            _this.destroy();
        // }, 150 );

    });
    $(popup).unbind('clicked').bind('clicked',function(event){
        //console.log('click menu');
        autocompleteStatus.isClickPopup = true;
    })
    // \u6eda\u52a8\u5219\u9690\u85cf,\u907f\u514d\u7236\u5bb9\u5668height:100% + overflow:auto \u65f6\u4e0b\u62c9\u9762\u677f\u4e0d\u8ddf\u968f\u6eda\u52a8
    $(ui.parents()).scroll(function() {
        popup.close();
    });
    this.ui = ui;
    this.popup = popup;
}
GenericAutocomplete.prototype.destroy = function(event){
    this.popup.destroy(event);
    this.ds.destroy(event);
}
// \u9759\u6001\u65b9\u6cd5\uff0c\u8bbe\u7f6eAutocomplete UI\u7684\u503c
GenericAutocomplete.updateUi = function(input,item, notInitChange){
    input.val(item.label)
        .attr('title',item.label)
        .data('value',item.value)
        .data('label',item.label);
    if(!notInitChange)
      input.trigger('changed',item);
}
GenericAutocomplete.prototype.keyCode={
    ALT: 18,
    BACKSPACE: 8,
    CAPS_LOCK: 20,
    COMMA: 188,
    COMMAND: 91,
    COMMAND_LEFT: 91, // COMMAND
    COMMAND_RIGHT: 93,
    CONTROL: 17,
    DELETE: 46,
    DOWN: 40,
    END: 35,
    ENTER: 13,
    ESCAPE: 27,
    HOME: 36,
    INSERT: 45,
    LEFT: 37,
    MENU: 93, // COMMAND_RIGHT
    NUMPAD_ADD: 107,
    NUMPAD_DECIMAL: 110,
    NUMPAD_DIVIDE: 111,
    NUMPAD_ENTER: 108,
    NUMPAD_MULTIPLY: 106,
    NUMPAD_SUBTRACT: 109,
    PAGE_DOWN: 34,
    PAGE_UP: 33,
    PERIOD: 190,
    RIGHT: 39,
    SHIFT: 16,
    SPACE: 32,
    TAB: 9,
    UP: 38,
    WINDOWS: 91 // COMMAND
};
// \u5fc5\u987b\u8db3\u591f\u8f7b\uff0c\u53ea\u505a\u4e24\u4ef6\u4e8b\uff1a\u7ed1\u5b9afocus\u4e8b\u4ef6\uff1b\u5982\u679c\u662fSelect\uff0c\u751f\u6210Input\u3002
$.fn.autocomplete = function(options){
    // \u4e3a\u63d0\u9ad8\u6027\u80fd\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5c4f\u853d\u89e6\u53d1\u4e8b\u4ef6\uff0c\u907f\u514d\u7ea7\u8054\u89e6\u53d1\u3002
    var preventTrigger = false;
    if(this.length==0) return;
    var nullValue = {value:'',label:''};
    var tagName=this[0].nodeName.toLowerCase();

    function _trigger(object,event,param){
        if(!preventTrigger) object.trigger(event,param);
    }
    function toggle(input){
        // \u65e0\u6570\u636e\u505c\u7528\uff0c\u5426\u5219\u53ef\u7528
        if(data&&data.length>0){
            input.removeAttr('disabled');
        }else{
            input.attr('disabled',true);
        };
    }
    // \u4eceSelect\u63d0\u53d6\u6570\u636e
    function select2Data(select){
      var data = [];
        select.find('option').each(function() {
            var option = $(this);
            data.push({value:option.val(),label:option.text()});
        });
        return data;
    }
    // \u53d6select\u7684\u9009\u4e2d\u503c\uff0c\u65e0\u9009\u4e2d\u9879\u8fd4\u56de\u7b2c\u4e00\u9879
    function getSelectedItem(select){
        var selected = select.find('option:selected');
        selected = (selected.length > 0) ? selected : select.find('option:first');
        if( selected.length > 0){
            return {value:selected.val(),label:selected.text()};
        }else{
            return {value:'',label:''};
        }
    }
    if(tagName == 'select'){
        var binding = this;
        // \u5efa\u7acb\u5f71\u5b50Input\uff0c\u9690\u85cfSelect
        var input = this.data('binding');
        if(!input){
            var width = this.width();
            var inpId = this.attr("id")!=undefined?('id="'+this.attr("id")+'_txt" '):'';
            input = $('<input '+inpId+'type="text" width="'+width+'"/>').insertAfter(this);
            input.width(width-(input.outerWidth(true)-input.width()));
            // TODO \u6027\u80fd\u70b9
            input.data('binding',binding);
            binding.data('binding',input);
            binding.change(function(event,item){
                // \u81ea\u5df1\u53d1\u8d77\u7684\u4e8b\u4ef6\uff0c\u5ffd\u7565
                if(item) return;
                // \u624b\u52a8\u6216\u4ee3\u7801\u6539\u53d8Select\u503c\u65f6\uff0c\u66f4\u65b0Input\u7684\u663e\u793a
                // \u4f46\u4e0d\u80fd\u89e6\u53d1\u4e8b\u4ef6\uff0c\u907f\u514d\u5faa\u73af\u5f80\u590d
                var select = $(this);
                var selectedItem = getSelectedItem(select);
                var noSelectChanged = input.data("value")==selectedItem.value;
                GenericAutocomplete.updateUi(input,selectedItem,noSelectChanged);
                input.autocomplete({data:select2Data(select),
                    value:getSelectedItem(select)
                });
            });

            // select\u8ddf\u968finput\u6539\u53d8
            input.bind('changed',function(event,item){
            binding.val(item.value);
            _trigger(binding,'change', item);
        });
        }
        // input.data('data',select2Data(this));
        var item = getSelectedItem(this);
        // if( item!=null){
        //     input.data('value',item.value);
        //     input.val(item.label);
        //     _trigger(input,'change', item);
        // }else{
        //     input.data('value',null);
        //     input.val('');
        //     _trigger(input,'change', nullValue);
        // }
        // input.data('value',item.value);
        // input.val(item.label);
        this.hide();
        _trigger(input,'change', item);
        GenericAutocomplete.updateUi(input,item,true);
        var op = $.extend({data : select2Data(this)},options);
        return input.autocomplete(op);
    }
    // \u76ee\u524d\u53ea\u652f\u6301input
    if(tagName != 'input') return;
    var _this = $(this);
    this.showButton = true;
    var data = this.data('data');
    if(options){
        if(options.data) data = options.data;
        if(options.value) {
            this.data('value', options.value);
        }
    }
    if(this.showButton){
      var hasButton = this.next('input[name="acToggle"]').length>0;
      if(!hasButton){
        var ctxPath = _ctxPath;
        if(!ctxPath) ctxPath = '';
        //var style = "background-image:url('"+ctxPath+"/common/images/desc.gif');background-repeat:no-repeat;background-color: #ececec;background-position:center;width:"+13+"px;height:"+ this.outerHeight() +"px;border:1px #d1d1d1 solid;vertical-align:middle";
        var style = "background-image:url('"+ctxPath+"/common/images/desc.gif');background-repeat:no-repeat;background-color: #ececec;background-position:center;width:"+13+"px;height:22px;border:1px #d1d1d1 solid;vertical-align:middle";
        var button = $('<input type="button" name="acToggle" tabindex="-1" onclick="$(this.previousSibling).trigger(\'focus\').trigger(\'click\');" style="'+style+'"/>');
        this.after(button);
    	var w = this.width()-(this.outerWidth(true)-this.width()) - button.outerWidth(true) - 1;
    	if(w>0){
    		this.width(w);
    	}else{//IE8 \u4e0b \u8ba1\u7b97\u51fa\u6765\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6b64\u5904\u5982\u679c\u5bbd\u5ea6\u5c0f\u4e8e0 \u5219300ms\u540e\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21\u3002
    		var input = this;
    		setTimeout(function(){
    			var sel = $("select",input.parent());
    			if(sel.length>0){
	    			var oldDis = sel.css("display");
	    			sel.css("display","");
	    			var wd = sel.width();
	    			sel.css("display",oldDis);
	    			var w = wd - button.outerWidth(true) - 3;
	    			input.width(w);
    			}
    		},300);
    	}
      }
    }   
    toggle(this);
    var setting = $.extend({data:data,
            ui : _this,
            value : _this.data('value'),
            autoSize : false
        },
        options);
    this.focus(function(){
        this.select();
        new GenericAutocomplete(setting);         
    });    
}    
})(jQuery);
/*
 * jQuery Code Option Plugin @requires jQuery v1.1 or later, jquery.json,
 * jquery.jsongateway @author Andy
 */
(function($) {
  var coi = 1;
  $.fn.codeoption = function(options) {
    var settings = {};
    options = $.extend(settings, options);
    var arr = new Array;
    $(".codecfg", this).add(this).each(
        function(i) {
          var tag = this.tagName;
          if (!tag)
            return;
          tag = tag.toLowerCase();
          var codecfg = options.codecfg ? options.codecfg : $(this).attr(
              "codecfg");
          if (codecfg) {
            var cfgObj = $.codecfgobj(this, codecfg);
            if (options.tags && !options.tags.contains(tag) && !cfgObj.render)
              return;
            arr.push(cfgObj);
          }
        });
    $.genoption(arr, options);
  };

  $.codeoption = function(options) {
    var settings = {
      tags : [ 'select' ]
    };
    options = $.extend(settings, options);
    $(document).codeoption(options);
  };

  $.fn.codetext = function(options) {
    var settings = {};
    options = $.extend(settings, options);
    var arr = new Array;
    $(".codecfg", this).add(this).each(
        function(i) {
          if (!$(this).attr("codecfg"))
            return;
          var tag = this.tagName.toLowerCase();
          if (tag != "select") {
            var codecfg = options.codecfg ? options.codecfg : $(this).attr(
                "codecfg");
            if (codecfg) {
              var cfgObj = $.codecfgobj(this, codecfg);
              if (cfgObj.render)
                return;
              var text = tag == "input" ? $(this).val() : $(this).text();
              if (text) {
                /*
                 * var valueField = cfgObj["valueField"] ? cfgObj["valueField"] :
                 * "code_value"; var w = valueField + "='" + text + "'";
                 */
                arr.push(cfgObj);
              }
            }
          }
        });
    $.genoption(arr, options);
  };

  $.codetext = function(options) {
    $(document).codetext(options);
  };

  $.codecfgobj = function(ele, codecfg) {
    if (codecfg) {
      var idx = codecfg.indexOf('{');
      var cfgObj = $.parseJSON(idx == 0 ? codecfg : ('{' + codecfg + '}'));
      var eid = ele.id ? ele.id : ele.name;
      if (!eid || eid.indexOf("coi_") == 0) {
        eid = "coi_" + coi;
        $(ele).attr("id", eid);
        coi++;
      }
      cfgObj["eleid"] = eid;
      return cfgObj;
    } else
      return {};
  };

  $.genoption = function(arr, options) {
    if (arr.length > 0) {
      var codeBS = new ctpCodeManager();
      var jsonStr = $.toJSON(arr);
      $.fillOption(codeBS.selectCode(jsonStr));
    }
  };

  $.fillOption = function(codeOpt) {
    if (codeOpt) {
      for ( var i = 0; i < codeOpt.length; i++) {
        var ele = $.findTag(codeOpt[i]);
        var codeOptions = codeOpt[i].options;
        var def = codeOpt[i]["defaultValue"];
        if (ele) {
          ele.each(function() {
            var tag = this.tagName.toLowerCase(), t = $(this);
            var ren = codeOpt[i].render;
            if (ren == "radioh") {
              renderRadio(t, codeOptions);
            } else if (ren == "radiov") {
              renderRadio(t, codeOptions, true);
            } else {
              if (tag == "select") {
                $("option[tmp]", t).remove();
                for ( var opt in codeOptions) {
                  var option = new Option(codeOptions[opt], opt);
                  option.tmp = 'tmp';
                  this.options[this.options.length] = option;
                  if (def && def == opt)
                    option.selected = true;
                }
                if (ren == 'new') {
                  var dr = $.dropdown({
                    id : this.id
                  });
                  if (def)
                    dr.setValue(def);
                }
              } else if (tag == "input") {
                $(this).val(codeOptions[$(this).val()]);
              } else {
                var val = codeOptions[$(this).text()];
                $(this).text(val);
                if ($(this).attr("title"))
                  $(this).attr("title", val);
              }
            }
            function renderRadio(t, codeOptions, f) {
              var id = t.attr("id"), at = t;
              t.attr("id", id + "_hid");
              for ( var opt in codeOptions) {
                var rlb = $('<label class="margin_r_10 hand"></label>');
                rlb.text(codeOptions[opt]);
                if (f)
                  rlb.addClass('display_block');
                //OA-27642 \u4fee\u590dhtml\u65b9\u5f0f\u5f39\u51fadialog\u65f6\u751f\u6210\u7684radio\u6ca1\u6709name\u7684\u95ee\u9898
                var rd = $('<input class="radio_com" type="radio" name="' + id + '">');
                rd.attr("id", id);
                //rd.attr("name", id);
                rd.val(opt);
                rlb.prepend(rd);
                at.after(rlb);
                at = rlb;
                if (def && def == opt)
                  rd.attr("checked", true);
              }
              t.remove();
            }
          });
        }
      }
    }
  };

  $.findTag = function(obj) {
    var ele;
    if (obj.eleid) {
      ele = $("#" + obj.eleid).length == 0 ? $("[name='" + obj.eleid + "']")
          : $("#" + obj.eleid);
    }
    if (!ele) {
      $(".codecfg").each(
          function(i) {
            var varCodecfg = this.codecfg;
            if (varCodecfg) {
              if (varCodecfg.indexOf("codeType") != -1
                  && varCodecfg.indexOf(obj.codeType) != -1) {
                ele = $(this);
              }
              if (varCodecfg.indexOf("codeType") == -1
                  && varCodecfg.indexOf(obj.tableName) != -1) {
                ele = $(this);
              }
            }
          });
    }
    return ele;
  };
})(jQuery);
$.ctx = {};
var isFormSubmit = true;
$.extend(Function.prototype, {
  defer : function(delay) {
    var timer, callback = this, fn = function() {
      var that = this, args = arguments;
      window.clearTimeout(timer);
      timer = window.setTimeout(function() {
        callback.apply(that, args);
      }, delay);
    };
    fn();
    return 0;
  }
});
$.extendParam = function(tpl, para) {
  for ( var v in para) {
    if (!(para[v] instanceof Array)) {
      tpl[v] = para[v];
    }
  }
  return tpl;
};
$.ctx.isOfficeEnabled = function(officeType) {
  var mt = officeType, f = true;
  try{
    if(!$.ctx._mainbodyOcxObj && (mt == ".doc" || mt == ".xls" || mt == ".wps" || mt == ".et" || (mt > 40 && mt < 45)))
      $.ctx._mainbodyOcxObj = new ActiveXObject("HandWrite.HandWriteCtrl");
    if(mt == ".doc" || mt == 41)
      f = $.ctx._mainbodyOcxObj.WebApplication(".doc");
    else if(mt == ".xls" || mt == 42)
      f = $.ctx._mainbodyOcxObj.WebApplication(".xls");
    else if(mt == ".wps" || mt == 43)
      f = $.ctx._mainbodyOcxObj.WebApplication(".wps");
    else if(mt == ".et" || mt == 44)
      f = $.ctx._mainbodyOcxObj.WebApplication(".et");
    else if(mt == ".pdf" || mt == 45)
      new ActiveXObject("iWebPDF.PDFReader");
  }catch(e) {
    f = false;
  }
  return f;
};
$.ctx._hasPrivJudge = function(pc, isPlugin) {
  var flag = false, pcs;
  if(pc && (isPlugin ? $.ctx.plugins : $.ctx.resources)) {
    if(pc.indexOf("&") != -1) {
      flag = true;
      pcs = pc.split("&");
      for(var i = 0; i < pcs.length; i++) {
        if(isPlugin ? !$.ctx.plugins.contains(pcs[i].trim()) : !$.ctx.resources.contains(pcs[i].trim())) {
          flag = false;
          break;
        }
      }
    }else if(pc.indexOf("|") != -1) {
      pcs = pc.split("|");
      for(var i = 0; i < pcs.length; i++) {
        if(isPlugin ? $.ctx.plugins.contains(pcs[i].trim()) : $.ctx.resources.contains(pcs[i].trim())) {
          flag = true;
          break;
        }
      }
    }else
      flag = isPlugin ? $.ctx.plugins.contains(pc.trim()) : $.ctx.resources.contains(pc.trim());
  }
  return flag;
};
$.ctx.hasPlugin = function(pi) {
  return $.ctx._hasPrivJudge(pi, true);
};
$.ctx.hasResource = function(rc) {
  return $.ctx._hasPrivJudge(rc, false);
};
$.privCheck = function(rc, pi, passCallback, failCallback) {
  if (!passCallback)
    passCallback = function() {
    };
  if (!failCallback)
    failCallback = function() {
    };
  if (_isDevelop) {
    passCallback();
  } else {
    if (pi && $.ctx.hasPlugin(pi)) {
      if (rc && $.ctx.hasResource(rc))
        passCallback();
      else if (!rc)
        passCallback();
      else
        failCallback();
    } else if (!pi && rc) {
      if ($.ctx.hasResource(rc))
        passCallback();
      else
        failCallback();
    } else if (!pi && !rc)
      passCallback();
    else
      failCallback();
  }
};
var _safriDoubleKeyIgnoreKeys = [32,192,186,187,188,189,190,191,219,220,221,222,13];
$.handleModalDialogInputKeyEvent = function() {
  var ua = navigator.vendor,pf = navigator.platform;
  if(ua && ua.indexOf('Apple') != -1 && pf && pf.indexOf('Win') != -1) {
      var ime = false;
      $(":input").keyup(function(evt){
        handleSafriDoubleKey(this, evt);
      }).keydown(function(evt){
        if(evt.keyCode == 229) 
          ime = true;
        else
          ime = false;
      });
      function handleSafriDoubleKey(obj,evt) {
        if(ime)
          return;
        var kc = evt.keyCode;
        if(((kc < 48 || kc > 111) && !_safriDoubleKeyIgnoreKeys.contains(kc)) || evt.ctrlKey || evt.altKey) {
          return;
        }
        if(kc == 13 && obj.type !== 'textarea')
          return;
        var st = obj.selectionStart,vl = obj.value,v;
        if(st > 0) {
          v = vl.substring(0, st-1);
          if(st < vl.length) {
            v += vl.substring(st);
          }
        }
        obj.value = v;
        obj.setSelectionRange(st-1,st-1);
      }
  }
};
// disable mouse context menu
// document.oncontextmenu=new Function("event.returnValue=false;");
$()
    .ready(
        function() {
          $(".comp").each(function(i) {
            $(this).compThis();
          });
          $.codeoption();
          $.autofillform({
            fillmaps : $.ctx.fillmaps
          });
          $.codetext();
          $(".resCode").each(function(i) {
            var t = $(this), rc = t.attr("resCode"), pi = t.attr("pluginId");
            $.privCheck(rc, pi, function() {
              t.show();
            }, function() {
              t.hide();
            });
          });
          CallerResponder.prototype = {
            error : function(request, settings, e) {
              try {
                var eo = $.parseJSON(request.responseText);
                if (!eo.details) {
// $.messageBox({
// title : 'Message',
// msg : eo.message
// });
                    $.alert({
                      'msg':eo.message,
                      'close_fn':function(){
                        try{if(getCtpTop() && getCtpTop().endProc)getCtpTop().endProc();}catch(e){}
                      },
                      'ok_fn':function(){
                        try{if(getCtpTop() && getCtpTop().endProc)getCtpTop().endProc();}catch(e){}
                      }
                    });
                } else {
                  $("body")
                      .append(
                          '<div id="errorDiv" style="display: none" width="600"><div id="errMsg"></div><br><textarea id="errDetails" rows="15" style="width: 500; font-size: 10pt" readonly="readonly"></textarea></div>');
                  $("#errMsg").text(
                      'Error message(' + eo.code + '):' + eo.message);
                  $("#errDetails").text(eo.details);
                  var dialog = $.dialog({
                    title : 'Error!',
                    htmlId : 'errorDiv',
                    width : 520,
                    height : 300,
                    targetWindow:getCtpTop(),
                    buttons : [ {
                      text : "Close",
                      handler : function() {
                        $("#errorDiv").remove();
                        var el = dialog.getObjectById('errorDiv');
                        if(el)
                          el.remove();
                        dialog.close();
                        hideMask();
                      }
                    } ]
                  });
                }
              } catch (ee) {
              }
            }
          };
          (function() {
            try{
              if(_isModalDialog) {
                $.handleModalDialogInputKeyEvent();
                // fix session invalid problem caused by modal dialog block
                var hangup_interval = setInterval(function(){
                  $.ajax({
                    url : _ctxPath + "/main.do?method=hangup",
                    async : true
                  });
                },30000);
              }
            }catch(e){}
            // change the default action of reset button
            $("input:reset").each(
                function() {
                  $("input:text,select,input:checkbox,input:password",
                      $(this).parents("form")).each(function() {
                    if (this.type == 'checkbox') {
                      $(this).attr("coriginValue", this.checked);
                    }
                    $(this).attr("originValue", $(this).val());
                  });
                  var t = $(this);
                  var c = $("<input type='button' />");
                  c.attr("id", t.attr("id"));
                  c.attr("className", t.attr("className") + " button_3");
                  c.attr("style", t.attr("style"));
                  c.attr("name", t.attr("name"));
                  c.onmuseover = this["onmuseover"];
                  c.val(t.val());
                  t.after(c);
                  t.remove();
                  c.click(function() {
                    $("input:text,select,input:checkbox,input:password",
                        $(this).parents("form")).each(
                        function() {
                          if ($(this).attr("originValue"))
                            $(this).val($(this).attr("originValue"));
                          else
                            $(this).val("");
                          if (this.tagName.toUpperCase() == 'SELECT') {
                            for ( var i = 0; i < this.options.length; i++) {
                              if (this.options[i].value == $(this).attr(
                                  "originValue")) {
                                this.options[i].selected = true;
                              }
                            }
                          }
                          if (this.type == 'checkbox') {
                            if ($(this).attr("coriginValue") != 'true') {
                              this.checked = false;
                            } else {
                              this.checked = true;
                            }
                          }
                        });
                  });

                });

            function parseDate(str) {
              if (typeof str == 'string' && str.length > 10) {
                return str.substring(0, 10);
              }
              return str;
            }
            /*
             * $("#savebtn").attr("alt", "\u5feb\u6377\u952e:(alt+s)");
             * $("#returnbtn").attr("alt", "\u5feb\u6377\u952e:(alt+c)");
             * $("#resetbtn").attr("alt", "\u5feb\u6377\u952e:(alt+r)");
             * $("#findbtn").attr("alt", "\u5feb\u6377\u952e:(alt+w)");
             * $("#calbtn").attr("alt", "\u5feb\u6377\u952e:(alt+z)");
             * $("#addbtn").attr("alt", "\u5feb\u6377\u952e:(alt+x)");
             * $("#deletebtn").attr("alt", "\u5feb\u6377\u952e:(alt+q)");
             * $("#printbtn").attr("alt", "\u5feb\u6377\u952e:(alt+p)");
             * $("#readicbtn").attr("alt", "\u5feb\u6377\u952e:(alt+b)");
             * $("#choosebtn").attr("alt", "\u5feb\u6377\u952e:(alt+g)");
             */
            if(document.all){
              $("a[href='javascript:void(0)']").live("click",function (e){
                e.preventDefault();
              });
            }

          }).defer(0, this);
          /*
           * $.hotkeys.add(keyObj.savebtn, function() { $('#savebtn').click();
           * }); $.hotkeys.add(keyObj.returnbtn, function() {
           * $('#returnbtn').click(); }); $.hotkeys.add(keyObj.resetbtn,
           * function() { $('#resetbtn').click(); });
           * $.hotkeys.add(keyObj.findbtn, function() { $('#findbtn').click();
           * }); $.hotkeys.add(keyObj.calbtn, function() { $('#calbtn').click();
           * }); $.hotkeys.add(keyObj.addbtn, function() { $('#addbtn').click();
           * }); $.hotkeys.add(keyObj.deletebtn, function() {
           * $('#deletebtn').click(); }); $.hotkeys.add(keyObj.printbtn,
           * function() { $('#printbtn').click(); });
           * $.hotkeys.add(keyObj.readicbtn, function() {
           * $('#readicbtn').click(); }); $.hotkeys.add(keyObj.choosebtn,
           * function() { $('#choosebtn').click(); });
           */
        });
Date.prototype.isBefore = function(odate) {
  var t1 = parseInt(this.format('Ymd')), t2 = parseInt(odate.format('Ymd'));
  return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);
};
Date.prototype.before = function(interval, odate) {
  if (!interval || !odate)
    return 0;
  var before = 0, d, positive = true, bdate = this, adate = odate;
  if (this.isBefore(odate) == -1) {
    positive = false;
    bdate = odate;
    adate = this;
  }
  d = bdate.clone();
  switch (interval.toLowerCase()) {
    case Date.MONTH:
      while (true) {
        if (d.getYear() == adate.getYear() && d.getMonth() == adate.getMonth()) {
          break;
        } else {
          before++;
          d = d.add(Date.MONTH, 1);
        }
      }
      break;
    case Date.YEAR:
      while (true) {
        if (d.getYear() == adate.getYear()) {
          break;
        } else {
          before++;
          d = d.add(Date.YEAR, 1);
        }
      }
      break;
  }
  if (!positive)
    before *= -1;
  return before;
};
Date.prototype.roundBefore = function(interval, odate) {
  var before, bDate = this, aDate = odate, positive = true;
  if (this.isBefore(odate) == -1) {
    positive = false;
    bdate = odate;
    adate = this;
  }

  before = bDate.before(interval, aDate);

  var bDay = bDate.getDate(), aDay = aDate.getDate();
  switch (interval.toLowerCase()) {
    case Date.MONTH:
      if (aDay < bDay) {
        before--;
      }
      break;
    case Date.YEAR:
      var bMonth = bDate.getMonth(), aMonth = aDate.getMonth();
      if (aMonth < bMonth) {
        before--;
      } else if (aMonth == bMonth) {
        if (aDay < bDay) {
          before--;
        }
      }
      break;
  }

  if (!positive)
    before *= -1;
  return before;
};
function isBefore(bDateStr, aDateStr) {
  var bDate = Date.parseDate(bDateStr, 'Y-m-d');
  var aDate = Date.parseDate(aDateStr, 'Y-m-d');
  return bDate.isBefore(aDate);
}
function before(interval, bDateStr, aDateStr) {
  var bDate = Date.parseDate(bDateStr, 'Y-m-d');
  var aDate = Date.parseDate(aDateStr, 'Y-m-d');
  return bDate.before(interval, aDate);
}
function roundBefore(interval, bDateStr, aDateStr) {
  var bDate = Date.parseDate(bDateStr, 'Y-m-d');
  var aDate = Date.parseDate(aDateStr, 'Y-m-d');
  return bDate.roundBefore(interval, aDate);
}
/*
 * var keyObj = new Object(); keyObj.savebtn = "alt+s"; keyObj.returnbtn =
 * "alt+c"; keyObj.resetbtn = "alt+r"; keyObj.findbtn = "alt+w"; keyObj.calbtn =
 * "alt+z"; keyObj.addbtn = "alt+x"; keyObj.deletebtn = "alt+q"; keyObj.printbtn =
 * "alt+p"; keyObj.readicbtn = "alt+b"; keyObj.choosebtn = "alt+g";
 */
(function($) {
  $.fn.switchClone = function(da, hc) {
    var t = this;
    if (!t.attr("_isclone")) {
      var tc = t.attrObj("tmpclone");
      if (!tc) {
        tc = t.clone();
        if (hc) {
          hc(t[0].tagName.toLowerCase(), tc);
        }
        tc.attr("_isclone", 1);
        t.attrObj("tmpclone", tc);
        t.after(tc);
      }
      if (t.attr("_hide") == 1) {
        if (!da) {
          t.show();
          t.attr("_hide", 0);
          tc.hide();
        }
      } else {
        if (da) {
          t.hide();
          t.attr("_hide", 1);
          tc.show();
        }
      }
    }
  };
  $.fn.disable = function() {
    this.each(function(i) {
      $(this).find(':input,a.common_button').add(this).each(function() {
        var id = this.id, t = $(this), c = t.attrObj("_rel");
        /*
         * if (keyObj[id]) $.hotkeys.remove(keyObj[id]);
         */
        switch (this.tagName.toLowerCase()) {
          case 'textarea':
          case 'select':
            var dd = t.attrObj("_dropdown");
            if (dd) {
              dd.disabled = "true";
            }
          case 'input':
            t.attr("disabled", "yes");
            t.attr("_da", true);
            if (c) {
              c.switchClone(true, function(tn, sc) {
                if (tn == 'a')
                  sc.addClass("common_button_disable");
                else
                  sc.attr("disabled", "yes");
              });
            }
            break;
          case 'a':
            if (!t.attr("_isrel")) {
              t.switchClone(true, function(tn, sc) {
                sc.addClass("common_button_disable");
              });
              t.attr("_da", true);
            }
            break;
        }
      });
    });
  };
  $.fn.enable = function() {
    this.each(function(i) {
      $(this).find(':input,a.common_button').add(this).each(function() {
        var id = this.id, t = $(this), c = t.attrObj("_rel");
        if (t.attr("_da")) {
          /*
           * if (keyObj[id]) $.hotkeys.add(keyObj[id], function() { t.click();
           * });
           */
          switch (this.tagName.toLowerCase()) {
            case 'textarea':
            case 'select':
              var dd = t.attrObj("_dropdown");
              if (dd) {
                dd.disabled = null;
              }
            case 'input':
              t.removeAttr("disabled");
              t.attr("_da", false);
              if (c) {
                c.switchClone(false);
              }
              break;
            case 'a':
              if (!t.attr("_isrel")) {
                t.switchClone(false);
                t.attr("_da", false);
              }
              break;
          }
        }
      });
    });
  };
  var attrObjs = [];
  $.fn.attrObj = function(name, value) {
    var obj;
    for ( var i = 0; i < attrObjs.length; i++) {
      if (attrObjs[i].o == this[0]) {
        obj = attrObjs[i];
        break;
      }
    }
    if (!obj) {
      obj = new Object();
      obj.o = this[0];
      obj.v = new Object();
      attrObjs.push(obj);
    }
    if (value) {
      obj.v[name] = value;
    } else {
      return obj.v[name];
    }
  };
  $.fn.removeAttrObj = function(name) {
    for ( var i = 0; i < attrObjs.length; i++) {
      if (attrObjs[i].o == this[0]) {
        var obj = attrObjs[i];
        obj.v[name] = null;
        break;
      }
    }
  };
  $.confirmClose = function(){
    var mute = arguments.length > 0;
    document.body.onbeforeunload = function(){
      // submit\u65f6\u5c4f\u853d\u63d0\u793a
      if(!mute && isFormSubmit){
        window.event.returnValue = "";
      }
    };
  };
  $.i18n = function(key) {
    try {
      var lang = CTPLang[_locale];
      if (!lang)
        return key;
      var msg = lang[key];

      if (msg && arguments.length > 1) {
        var messageRegEx_0 = /\{0\}/g;
        var messageRegEx_1 = /\{1\}/g;
        var messageRegEx_2 = /\{2\}/g;
        var messageRegEx_3 = /\{3\}/g;
        var messageRegEx_4 = /\{4\}/g;
        var messageRegEx_5 = /\{5\}/g;
        var messageRegEx_6 = /\{6\}/g;
        var messageRegEx_7 = /\{7\}/g;
        var messageRegEx_8 = /\{8\}/g;
        var messageRegEx_9 = /\{9\}/g;
        var messageRegEx_10 = /\{10\}/g;
        var messageRegEx_11 = /\{11\}/g;
        var messageRegEx_12 = /\{12\}/g;
        var messageRegEx_13 = /\{13\}/g;
        var messageRegEx_14 = /\{14\}/g;
        var messageRegEx_15 = /\{15\}/g;
        for ( var i = 0; i < arguments.length - 1; i++) {
          var regEx = eval("messageRegEx_" + i);
          var repMe = "" + arguments[i + 1];
          if (repMe.indexOf("$_") != -1) {
            repMe = repMe.replace("$_", "$$_");
          }
          msg = msg.replace(regEx, repMe);
        }
      }

      return msg;
    } catch (e) {
    }

    return "";
  }
})(jQuery);

var ctpCodeManager = RemoteJsonService.extend({
  jsonGateway : _ctxPath
      + "/ajax.do?method=ajaxAction&managerName=ctpCodeManager",
  selectCode : function() {
    return this.ajaxCall(arguments, "selectCode");
  }
});

var ctpUserPreferenceManager = RemoteJsonService.extend({
  jsonGateway : _ctxPath
      + "/ajax.do?method=ajaxAction&managerName=ctpUserPreferenceManager",
  saveGridPreference : function() {
    return this.ajaxCall(arguments, "saveGridPreference");
  }
});

// \u7528\u4e8eAJAX\u65b9\u5f0f\u8f7d\u5165\u9875\u9762\u7b49\u4f7f\u7528
var AjaxDataLoader = {
  load : function(url, data, callback) {
    jQuery.ajax({
      type : "POST",
      url : url,
      data : data,
      async : true,
      success : function(dataStr) {
        if ($.isFunction(callback)) {
          callback(dataStr);
        }
      }
    });
  }
}

Array.prototype.contains = function(element) {
  for ( var i = 0; i < this.length; i++) {
    if (this[i] == element) {
      return true;
    }
  }
  return false;
}

String.prototype.format = function() {
  var args = arguments;

  return this.replace(/\{(\d+)\}/g, function() {
    return args[arguments[1]];
  });
}
function showMask(){
	// \u5f00\u59cb\u906e\u7f69
	try{if(getCtpTop() && getCtpTop().startProc)getCtpTop().startProc();}catch(e){}
}
function hideMask(){
	// \u53d6\u6d88\u906e\u7f69
	try{if(getCtpTop() && getCtpTop().endProc)getCtpTop().endProc();}catch(e){}
}
function getCtpTop(){
  try {
    var A8TopWindow =  getCtpParentWindow(window);
    if(A8TopWindow){
      return A8TopWindow;
    }else{
      return top;
    }
  }
  catch (e) {
    return top;
  }
}
function getCtpParentWindow(win){
	var currentWin = win;
	for(var i = 0; i < 20; i++){
		if(typeof currentWin.isCtpTop != 'undefined' && currentWin.isCtpTop){
			return currentWin;
		}
		else{
			currentWin = currentWin.parent;
		}
	}
}
/// <reference path="../scriptes/jquery.js" />

/**
 * @author macj
 */
function setDialogFocusDom(id){
	try{
		var _win = document.getElementById(id);
		if(_win){
			var _con = _win.contentWindow;
			var _body = _con.document.getElementsByTagName('body')[0];
			var _style = _body.style.display;
			if(_style == '' || _style == 'block'){
				_body.focus();
			}
		}
	}catch(e){}
}
/***
$(document).keydown(function(e){
	var target = e.target ;
	var tag = e.target.tagName.toUpperCase();
	if(e.keyCode == 8){
		if((tag == 'INPUT' && !$(target).attr("readonly"))||(tag == 'TEXTAREA' && !$(target).attr("readonly"))){
			if((target.type.toUpperCase() == "RADIO") || (target.type.toUpperCase() == "CHECKBOX")){
				return false ;
			}else{
				return true ; 
			}
		}else{
			return false ;
		}
	}
}); 
**/
function MxtDialog(options){
    this.id = options.id ? options.id : Math.floor(Math.random() * 100000000);
    this.title = options.title ? options.title : 'Dialog';
    this.html = options.html ? options.html : '';
    this.url = options.url ? options.url : '';
    this.width = options.width ? parseInt(options.width) : 400;
    this.height = options.height ? parseInt(options.height) : 350;
    this.buttons = options.buttons ? options.buttons : [];
    this.isDrag = options.isDrag == undefined ? true : options.isDrag;
    this.showMask = options.showMask == undefined ? false : options.showMask;
    this.borderSize = 1;//\u8fb9\u6846\u5c3a\u5bf8(\u50cf\u7d20)
    
	this.shadow = options.shadow == undefined? true : false;
	    
    this.closeTitle = options.closeTitle ? options.closeTitle : $.i18n('common.button.close.label');//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
    this.minTitle = options.minTitle ? options.minTitle : 'min';//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
    this.maxTitle = options.maxTitle ? options.maxTitle : 'max';//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
	this.autoTitle = options.autoTitle ? options.autoTitle : 'auto';//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
	
    this.headerHeight = 28;
    this.footerHeight = 40;
    
	this.isFrountEvent = options.isFrountEvent ? options.isFrountEvent : false;//\u70b9\u51fb\u8be6\u60c5\u540e\u6267\u884c\u7684\u51fd\u6570;
	this.targetWindow = options.targetWindow == null ? window : options.targetWindow;
	
	this.isHead = options.isHead ==undefined?true: options.isHead;//\u70b9\u51fb\u8be6\u60c5\u540e\u6267\u884c\u7684\u51fd\u6570;
	
	this.minParam = options.minParam;
	this.maxParam = options.maxParam;
	this.closeParam = options.closeParam;
	this.panelParam = options.panelParam;
	this.bottomHTML = options.bottomHTML;
	this.overflow = options.overflow == undefined?'auto':options.overflow;
	this.formSubmitBtn = options.formSubmitBtn ? options.formSubmitBtn : false;
	this.w_space=options.w_space?options.w_space:0; //\u8ba1\u7b97panel\u4f4d\u7f6e\u65f6\u4f7f\u7528\uff0c\u573a\u666f\uff1a\u65f6\u95f4\u89c6\u56fe\u65e5\u5386\u5c55\u793a
	if(options.checkMax==true)
    this.ifMax();//\u5224\u65ad\u5b9a\u4e49\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u4e0d\u8d85\u8fc7\u6d4f\u89c8\u5668\u53ef\u662f\u533a\u57df
	if(this.minParam == undefined){
		this.minParam = {'show':false,handler:function(){}};
	}
	if(this.maxParam == undefined){
		this.maxParam = {'show':false,handler:function(){}};
	}
	if(this.closeParam == undefined){
		this.closeParam = {'show':true,handler:function(){}};
	}
	
	this.left = options.left;
	this.top = options.top;
	
	this.type = options.type == null?'dialog':'panel';
	this.targetId = options.targetId;
	this.htmlId = options.htmlId;
	this.htmlObj=null;
	this.buttonAlign =  options.buttonAlign?options.buttonAlign:'align_right';
	
	
	this.transParamsCopy = null;
	
	this.zIndex = 1000;
	this.transParams = options.transParams;//\u4ece\u7236\u9875\u9762\u4f20\u5165\u5230\u5b50\u9875\u9762\u7684js\u53d8\u91cfdiv
	this.isFromModle = options.isFromModle == undefined?false:options.isFromModle;//\u5728\u6a21\u6001\u5bf9\u8bdd\u6846\u4e2d\u5f39\u51fadialig div
	this.isFormItem = options.isFormItem ? options.isFormItem : false;
	this.isHide = options.isHide == undefined?false:options.isHide;//\u70b9\u51fb\u5173\u95ed\u6309\u94ae(X),\u4e0d\u8c03\u7528close,\u8c03\u7528hideDialog
	if ($('#' + this.id,this.targetWindow.document).size() > 0) {
	    var _client_width = document.body.clientWidth;
	    var _client_height = (document.documentElement.scrollHeight > document.documentElement.clientHeight ? document.documentElement.scrollHeight : document.documentElement.clientHeight);
	    if (this.targetId != null) {
	        var tarobj = document.getElementById(this.targetId);
	        var leftTemp = tarobj.getBoundingClientRect().left;
	        if ((leftTemp + this.width) > _client_width) {
	            leftTemp = leftTemp + tarobj.clientWidth - this.width;
	            shadowLeft = "left:-3px;"
	        }
	        this.left = leftTemp;
			var _scrollTop = document.documentElement.scrollTop;
			if($.browser.chrome){
				_scrollTop = $('body').scrollTop()
			}
	        this.top = tarobj.getBoundingClientRect().top + tarobj.offsetHeight + _scrollTop;
	        this.left = this.left+this.width<_client_width? this.left : this.left-this.width-tarobj.offsetWidth;
			this.top = this.top+this.height<_client_height? this.top : (this.top-this.height-tarobj.offsetHeight<0 ? 0:this.top-this.height-tarobj.offsetHeight);
	    }
	    else{

			this.left = this.left+this.width<_client_width? this.left+this.w_space : this.left-this.width-options.w_space;
			this.top = this.top+this.height<_client_height? this.top : (this.top-this.height<0 ? 0:this.top-this.height);
			if (this.left < 0) 
			{
				this.left = 0;
			};
		}
	    this.targetWindow.$("#" + this.id).css({"left":this.left,"top":this.top});
	  	this.showDialog();
	  //this.reloadUrl(this.url);
	  return;
	}
	if(this.type == 'dialog'){
		if (typeof($("#" + this.id)[0]) == "undefined") {
		    this.getDialog();
		    this.drag();
		}else{
			if (typeof($("#" + this.id+'_min')[0]) != "undefined") {
				$("#" + this.id+'_auto_min').click();
			}
		}
	}else{
		this.getPanel();
	}
	var _this = this;
	this.targetWindow.$(document).bind("keyup", function (e) {
	    if ($('#' + _this.id)) {
	        if (e.keyCode == 27) {//ESC
	            _this.close();
	        }
	    }
		var target = e.target ;
		var tag = e.target.tagName.toUpperCase();
		if(e.keyCode == 8){
		    if ((tag == 'INPUT' && !$(target).attr("readonly")) || (tag == 'TEXTAREA' && !$(target).attr("readonly")) || (tag == 'DIV' && $(target).attr("contenteditable") == 'true')) {
		        if (target.type) {
		            if ((target.type.toUpperCase() == "RADIO") || (target.type.toUpperCase() == "CHECKBOX")) {
		                return false;
		            } else {
		                return true;
		            }
		        }
			}else{
				return false ;
			}
		}
	});
	//\u9690\u85cfoffice\u63d2\u4ef6
	this.officeAction(false)

}
MxtDialog.prototype.getPanel = function(){
    
    //\u906e\u7f69id
    var maskId = this.id + "_mask";
    
    //\u83b7\u53d6\u5ba2\u6237\u7aef\u9875\u9762\u5bbd\u9ad8
    var _client_width = document.body.clientWidth;
    var _client_height = (document.documentElement.scrollHeight>document.documentElement.clientHeight?document.documentElement.scrollHeight:document.documentElement.clientHeight);
    
	
	var masks =  this.targetWindow.$('.mask');
	if(masks.size() == 0){
		//\u8001\u6846\u67b6mxtwindow\u4e2d\u5f39\u51fa\u65b0dialog\u5c42\u7ea7\u6298\u53e0\u95ee\u9898
		masks =  this.targetWindow.$('.shield');
	}
	if(masks.size()>0){
		var zindexstr = parseInt(masks.eq(0).css('z-index'));
		this.zIndex = parseInt(zindexstr)+2;
	}
	
    //\u906e\u7f69
	if (this.showMask && typeof ($("#" + maskId)[0]) == "undefined") {
        this.targetWindow.$('body').prepend("<div id='" + maskId + "' class='mask' style='width:100%;height:" + _client_height + "px;z-index:"+this.zIndex+"'>&nbsp;</div>");
    }
    
    //\u5224\u65ad\u662f\u5426\u5b58\u5728.\u5b58\u5728\u5c31\u5148\u79fb\u5904
    if (typeof($("#" + this.id)[0]) != "undefined") {
        return;
    }
    //\u5236\u4f5cdialog
    var htmlStr = "";
    var _left = (_client_width - (this.width + this.borderSize * 2 + 5)) / 2;
    var _top = (document.documentElement.clientHeight - (this.height + this.borderSize * 2 + 15 + 5)) / 2;
    
	if(this.left==null)this.left = _left;
	if(this.top==null)this.top = _top;
	var shadowLeft = "";
	if(this.targetId!=null){
		var tarobj = document.getElementById(this.targetId);
		var leftTemp  = tarobj.getBoundingClientRect().left;
		if((leftTemp+this.width)>_client_width){
			leftTemp = leftTemp+tarobj.clientWidth-this.width;
			//OA-34362\u5e94\u7528\u68c0\u67e5\uff1a\u5f85\u529e\u4f1a\u8bae\uff0c\u6d6e\u52a8Tips\u6837\u5f0f\u4e0e\u9700\u6c42\u4e0d\u7b26\uff0c\u56de\u590d\u4eba\u6570\u7edf\u8ba1\u5e94\u8be5\u662f\u659c\u6760\uff0c\u4e0d\u662f\u65b9\u6846
			//shadowLeft = "left:-3px;"
		}
		 	this.left = leftTemp;
	        this.top = tarobj.getBoundingClientRect().top + tarobj.offsetHeight +  document.documentElement.scrollTop;
	        this.left = this.left+this.width<_client_width? this.left : this.left-this.width-tarobj.offsetWidth;
			this.top = this.top+this.height<_client_height? this.top: (this.top-this.height-tarobj.offsetHeight<0 ? 0:this.top-this.height-tarobj.offsetHeight);
	}
	else{
		this.left = this.left+this.width<_client_width? this.left+this.w_space : this.left-this.width-this.w_space;
		this.top = this.top+this.height<_client_height? this.top : (this.top-this.height<0 ? 0:this.top-this.height);
	}
	var closeHeight = 15;
	var margins = this.borderSize * 2;
	if (this.panelParam!=undefined && !this.panelParam.show) {
		closeHeight = 0;
	}
	if (this.panelParam!=undefined && !this.panelParam.margins) {
		margins = 0;
	}
	
    //left \u8fb9\u6846*2 \u9634\u5f715
    //top \u8fb9\u6846*2 \u9634\u5f715 header30 bottom50
	htmlStr += "<div id='" + this.id + "' class='dialog_box absolute' style='z-index:"+(this.zIndex+1)+";left:" + (parseInt(this.left < 0 ? 0 : this.left) + document.documentElement.scrollLeft)+ "px;top:" + (parseInt(this.top < 0 ? 0 : this.top)) + "px;'>";
    //\u9634\u5f71
	if(this.shadow){
	    htmlStr += "<div id='" + this.id + "_shadow' class='dialog_shadow absolute' style='"+shadowLeft+"width:" + (this.width + this.borderSize * 2) + "px;height:" + (this.height + margins + closeHeight) + "px;'>&nbsp;</div>"
	}
    //iframe \u906e\u6321office\u63d2\u4ef6
    htmlStr += "<iframe id='" + this.id + "_iframe_shadow' class='absolute' style='"+shadowLeft+"width:" + this.width+ "px;height:" + (this.height + margins) + "px;border:0'></iframe>"

	    //main
	    htmlStr += "<div id='" + this.id + "_main' class='dialog_main absolute' style='width:" + this.width + "px'>";
		    //header
		    htmlStr += "<div id='" + this.id + "_main_head' >";
		    htmlStr += "</div>";//header
		    //body
		    htmlStr += "<div id='" + this.id + "_main_body' class='dialog_main_body left' style='width:" + this.width + "px;height:" + this.height + "px;'>";
			    //iframe \u906e\u7f69\u5c42
			    htmlStr += "<div id='" + this.id + "_main_iframe' class='dialog_main_iframe absolute' style='top:" + this.headerHeight + "px;width:" + this.width + "px;height:" + this.height + "px;display:none;'>&nbsp;</div>";
			    
			    //iframe \u5bb9\u5668
			    htmlStr += "<div id='" + this.id + "_main_content' class='dialog_main_content absolute'>";
					if(this.url!=''){
				    	htmlStr += "<iframe id='" + this.id + "_main_iframe_content' name='" + this.id + "_main_iframe' class='dialog_main_content_html "+(margins==0?'':'margin_5 padding_5')+"' src='" + this.url + "' scrolling='no' frameborder='0' width='" + (this.width-(margins==0?0:22)) + "' height='" + (this.height-(margins==0?0:22)) + "' />";
					}else{
						//12:[\u4e0a\u4e0b\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u5de6\u53f3\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u4e0a\u4e0b\u8fb9\u6846 1+1 \u5de6\u53f3\u8fb9\u6846 1+1]
						htmlStr+="<div id='" + this.id + "_main_iframe_div' class='dialog_main_content_html "+(margins==0?'':'margin_5 padding_5')+"' style='width:"+(this.width-(margins==0?0:22))+"px;height:"+(this.height-(margins==0?0:22))+"px;border-width:"+(margins==0?0:1)+"px;background:#fff;'>"+(this.htmlId==undefined?this.html:'')+"</div>";
					}
			    htmlStr += "</div>";
				
		    htmlStr += "</div>";
		    //body
		    
		    //bottom
			if (this.buttons.length > 0) {
				htmlStr += "<div id='" + this.id + "_main_footer' class='dialog_main_footer left padding_t_5 w100b'>";
				htmlStr += "<div class='left over_hidden margin_l_5 padding_t_5 padding_b_5'  style='font-size:12px;'>";
				if(this.bottomHTML != undefined){
					htmlStr+=this.bottomHTML;
				}
				htmlStr += "</div>";
				htmlStr += "<div class='right "+this.buttonAlign+"' >";
				if (this.buttons.length > 0) {
					for (var i = 0; i < this.buttons.length; i++) {
						var jsonTemp = this.buttons[i];
						if(jsonTemp.id == undefined){
							jsonTemp.id = Math.floor(Math.random() * 100000000)+'_btn';
						}
						if(!this.isFrountEvent){
							//href='javascript:void(0)'
							if(jsonTemp.id == 'btnok') $.hotkeys.returnKeys.push(jsonTemp.id+this.id);
						  if(jsonTemp.id == 'btncancel') $.hotkeys.cancelKeys.push(jsonTemp.id+this.id);
							htmlStr+="<a id='"+jsonTemp.id+this.id+"' class='common_button "+(jsonTemp.disabled?'common_button_disable':'common_button_gray')+" margin_r_10' style='cursor:pointer;display:"+(jsonTemp.hide?'none':'')+"'>"+jsonTemp.text+"</a>";
						}
					};
				}
				htmlStr += "</div>";
				htmlStr += "</div>";
				//bottom
			}
			
			
	    htmlStr += "</div>";
	    //main
	    htmlStr += "</div>";
	    this.targetWindow.$('body').prepend(htmlStr);

	    var temp = $('#'+this.id+'_main_iframe_content',this.targetWindow.document);
		if(temp.size()>0 && temp[0].contentWindow){
			try{
		        if(temp[0].contentWindow.parentDialogObj == undefined)temp[0].contentWindow.parentDialogObj = new Object();
		        eval("temp[0].contentWindow.parentDialogObj['" + this.id + "'] = this;");
			}catch(e){}
	    }

	    if (this.htmlId != null) {
	        this.htmlObj = $('#' + this.htmlId).clone(true);
	        $("#" + this.htmlId).after("<div id=\"" + this.htmlId + "_area\"></div>");
	        this.targetWindow.$("#" + this.id + "_main_iframe_div").append($('#' + this.htmlId).show());
	}
	//\u5173\u95ed\u6309\u94ae
	var self = this;
	if (this.panelParam == undefined || this.panelParam.show) {
	    if (this.panelParam && this.panelParam.inside)
	        $("#" + this.id + "_main_head", this.targetWindow.document).css({
	        "position": "absolute",
	        "z-index": "9999",
            "right":5
	    })
		$("<span id='" + this.id + "_close' class='dialog_close right margin_t_0' title='" + this.closeTitle + "'></span>").click(function(){
			self.close();
		}).appendTo($("#" + this.id + "_main_head", this.targetWindow.document));
	}
	
	if (this.buttons.length > 0) {
		for (var i = 0; i < this.buttons.length; i++) {
			var jsonTemp = this.buttons[i];
			if(!this.isFrountEvent){
				if(jsonTemp.disabled){
					continue;
				}else{
					this.targetWindow.$("#"+jsonTemp.id+this.id).click(jsonTemp.handler).click(function(){
						self.close();
					});
				}
			}
		};
		this.targetWindow.$("#"+this.buttons[0].id+this.id).focus();
	}else{
		this.targetWindow.$("#"+this.id).focus();
	}
}
MxtDialog.prototype.getDialog = function(){
    //\u906e\u7f69id
    var maskId = this.id + "_mask";
    
    //\u83b7\u53d6\u5ba2\u6237\u7aef\u9875\u9762\u5bbd\u9ad8
    var _client_width = this.targetWindow.document.body.clientWidth;
    var _client_height = (this.targetWindow.document.documentElement.scrollHeight>this.targetWindow.document.documentElement.clientHeight?this.targetWindow.document.documentElement.scrollHeight:this.targetWindow.document.documentElement.clientHeight);
    
	
	var masks =  this.targetWindow.$('.mask');
	if(masks.size() == 0){
		//\u8001\u6846\u67b6mxtwindow\u4e2d\u5f39\u51fa\u65b0dialog\u5c42\u7ea7\u6298\u53e0\u95ee\u9898
		masks =  this.targetWindow.$('.shield');
	}
	if(masks.size()>0){
		if(masks.size() == 1){
			this.zIndex = parseInt(masks.eq(0).css('z-index'));
		}
		if(masks.size() > 1){
			for (var j=0; j<masks.size(); j++) {
				var _mm = masks.eq(j);
				var _index = parseInt(_mm.css('z-index'));
				if(_index>this.zIndex){
					this.zIndex = _index;
				}
			};
		}
		this.zIndex = this.zIndex+2;
	}
	
    //\u906e\u7f69
    if (typeof($("#" + maskId)[0]) == "undefined") {
        this.targetWindow.$('body').prepend("<div id='" + maskId + "' class='mask' style='width:100%;height:" + _client_height + "px;z-index:"+this.zIndex+"'>&nbsp;</div>");
    }
    //\u5224\u65ad\u662f\u5426\u5b58\u5728.\u5b58\u5728\u5c31\u5148\u79fb\u5904
    if (typeof($("#" + this.id)[0]) != "undefined") {
		return;
       // this.targetWindow.$("#" + this.id).remove();
    }
    //\u5236\u4f5cdialog
    var htmlStr = "";
    var _left = (_client_width - (this.width + this.borderSize * 2 + 5)) / 2;
    var _top = (this.targetWindow.document.documentElement.clientHeight - (this.height + this.borderSize * 2 + this.headerHeight + this.footerHeight + 5)) / 2;
    
	if(this.left==undefined)this.left = _left;
	if(this.top==undefined)this.top = _top;
	
    //left \u8fb9\u6846*2 \u9634\u5f715
    //top \u8fb9\u6846*2 \u9634\u5f715 header30 bottom50
    htmlStr += "<div id='" + this.id + "' class='dialog_box absolute' style='z-index:"+(this.zIndex+1)+";left:" + ((this.left < 0 ? 0 : this.left) + this.targetWindow.document.documentElement.scrollLeft) + "px;top:" + ((this.top < 0 ? 0 : this.top) + this.targetWindow.document.documentElement.scrollTop) + "px;'>";
    //\u9634\u5f71
	if(this.shadow){
    	htmlStr += "<div id='" + this.id + "_shadow' class='dialog_shadow absolute' style='width:" + (this.width + this.borderSize * 2) + "px;height:" + (this.height + this.borderSize * 2 + this.headerHeight + (this.buttons.length > 0?this.footerHeight:0)) + "px;'>&nbsp;</div>"
	}
    //iframe \u906e\u6321office\u63d2\u4ef6
    htmlStr += "<iframe id='" + this.id + "_iframe_shadow' class='absolute' style='width:" + this.width+ "px;height:" + (this.height +  this.headerHeight + (this.buttons.length > 0?this.footerHeight:0)) + "px;border:0'></iframe>"
	    //main
	    htmlStr += "<div id='" + this.id + "_main' class='dialog_main absolute' style='width:" + this.width + "px'>";
		    //header
			
			if(this.isHead){
			    htmlStr += "<div id='" + this.id + "_main_head' class='dialog_main_head'>";
				    htmlStr += "<span id='" + this.id + "_title' class='dialog_title left' style='width:"+(this.width-100)+"px;  white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" + this.title + "</span>";
					if (this.closeParam && this.closeParam.show) {
						htmlStr += "<span id='" + this.id + "_close' class='dialog_close right' title='" + this.closeTitle + "'></span>";
					}
					if(this.maxParam && this.maxParam.show){
						htmlStr+="<span id='" + this.id + "_max' class='dialog_max right' title='" + this.maxTitle + "'></span>";
					}
					if(this.minParam && this.minParam.show){
						htmlStr+="<span id='" + this.id + "_min' class='dialog_min right' title='" + this.minTitle + "'></span>";
					}
			    htmlStr += "</div>";//header
			}
		    
			
			
		    //body
		    htmlStr += "<div id='" + this.id + "_main_body' class='dialog_main_body left' style='width:" + this.width + "px;height:" + this.height + "px'>";
			    //iframe \u906e\u7f69\u5c42
			    htmlStr += "<div id='" + this.id + "_main_iframe' class='dialog_main_iframe absolute' style='left:5px;top:" + (this.headerHeight+5) + "px;width:" + (this.width-10) + "px;height:" + (this.height-10) + "px;display:none;'>&nbsp;</div>";
			    
			    //iframe \u5bb9\u5668
			    htmlStr += "<div id='" + this.id + "_main_content' class='dialog_main_content absolute'>";
					if(this.url!=''){
				    	htmlStr += "<iframe id='" + this.id + "_main_iframe_content' name='" + this.id + "_main_iframe' class='dialog_main_content_html  margin_5' src='" + this.url + "' scrolling='auto' frameborder='0' width='" + (this.width-12) + "' height='" + (this.height-12) + "' />";
					}else{
						//12:[\u4e0a\u4e0b\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u5de6\u53f3\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u4e0a\u4e0b\u8fb9\u6846 1+1 \u5de6\u53f3\u8fb9\u6846 1+1]
						htmlStr+="<div id='" + this.id + "_main_iframe_div' class='dialog_main_content_html padding_5 margin_5' style='width:"+(this.width-22)+"px;height:"+(this.height-22)+"px;overflow:"+this.overflow+";'>"+(this.htmlId==undefined?this.html:'')+"</div>";
					}
			    htmlStr += "</div>";
				
		    htmlStr += "</div>";
		    //body
		    
		    //bottom
			if (this.buttons.length > 0) {
				htmlStr += "<div id='" + this.id + "_main_footer' class='dialog_main_footer left padding_t_5 w100b'>";
				htmlStr += "<div class='left over_hidden margin_l_5 padding_t_5 padding_b_5'  style='font-size:12px;'>";
				if(this.bottomHTML != undefined){
					htmlStr+=this.bottomHTML;
				}
				htmlStr += "</div>";
				htmlStr += "<div class='right "+this.buttonAlign+"' >";
				if (this.buttons.length > 0) {
					for (var i = 0; i < this.buttons.length; i++) {
						var jsonTemp = this.buttons[i];
						if(jsonTemp.id == undefined){
							jsonTemp.id = Math.floor(Math.random() * 100000000)+'_btn';
						}
						if(!this.isFrountEvent){
							//href='javascript:void(0)'
							if(jsonTemp.id == 'btnok') $.hotkeys.returnKeys.push(jsonTemp.id+this.id);
						  if(jsonTemp.id == 'btncancel') $.hotkeys.cancelKeys.push(jsonTemp.id+this.id);
							htmlStr+="<a id='"+jsonTemp.id+this.id+"' class='common_button "+(jsonTemp.disabled?'common_button_disable':'common_button_gray')+" margin_r_10' style='cursor:pointer;display:"+(jsonTemp.hide?'none':'')+"'>"+jsonTemp.text+"</a>";
						}
					};
				}
				htmlStr += "</div>";
				htmlStr += "</div>";
				//bottom
			}
	    htmlStr += "</div>";
	    //main
    htmlStr += "</div>";
    this.targetWindow.$('body').prepend(htmlStr);
    var temp = $('#'+this.id+'_main_iframe_content',this.targetWindow.document);
	if(temp.size()>0 && temp[0].contentWindow){
		try{
	        if(temp[0].contentWindow.parentDialogObj == undefined)temp[0].contentWindow.parentDialogObj = new Object();
	        eval("temp[0].contentWindow.parentDialogObj['" + this.id + "'] = this;");
		}catch(e){}
    }
    if(temp.size()>0 && this.transParams!=undefined){
		try{
			if(!this.isFromModle){
				this.transParamsCopy = this.transParams;
				temp[0].contentWindow.dialogArguments = this.transParams;
			}else{
				this.transParamsCopy = this.transParams;
				temp[0].contentWindow.transParams = this.transParams;
			}
		}catch(e){
			this.transParamsCopy = this.transParams;
			temp[0].contentWindow.transParams = this.transParams;
		}
    }
    if (this.htmlId != null) {
        this.htmlObj = $('#' + this.htmlId).clone(true);
        $("#" + this.htmlId).after("<div id=\"" + this.htmlId + "_area\"></div>");
        this.targetWindow.$("#" + this.id + "_main_iframe_div").append($('#' + this.htmlId).show());
	}
	
	//\u5173\u95ed\u6309\u94ae
	var self = this;
	if (this.closeParam && this.closeParam.show) {
		if(this.closeParam.autoClose == false){
			this.targetWindow.$('#' + this.id + '_close').click(this.closeParam.handler);
		}else{
			this.targetWindow.$('#' + this.id + '_close').click(this.closeParam.handler).click(function(){
				self.close();
			});
		}
	}
	if(this.maxParam && this.maxParam.show){
		this.targetWindow.$('#'+this.id+'_max').click(function(){
			self.maxfn();
		}).click(this.maxParam.handler);
	}
	
	if(this.minParam && this.minParam.show){
		this.targetWindow.$('#'+this.id+'_min').click(function(){
			self.minfn();
		}).click(this.minParam.handler);
	}
	if (this.buttons.length > 0) {
		for (var i = 0; i < this.buttons.length; i++) {
			var jsonTemp = this.buttons[i];
			if(!this.isFrountEvent){
				if(jsonTemp.disabled){
					continue;
				}else{
					this.targetWindow.$("#"+jsonTemp.id+this.id).click(jsonTemp.handler);
				}
			}
		};
		this.targetWindow.$("#"+this.buttons[0].id+this.id).parent().focus();
	}else{
		this.targetWindow.$("#"+this.id).parent().focus();
	}
	$(window).scroll(function(){
	    //\u83b7\u53d6\u5ba2\u6237\u7aef\u9875\u9762\u5bbd\u9ad8
	    var _client_width2 = document.documentElement.scrollWidth;
	    var _client_height2 = document.documentElement.scrollHeight;
	    $('.mask').css({
			'width':_client_width2,
			'height':_client_height2
		});
	}); 
}
MxtDialog.prototype.hideBtn = function(id){
	for (var i = 0; i < this.buttons.length; i++) {
		var jsonTemp = this.buttons[i];
		if(jsonTemp.id == id){
			this.targetWindow.$("#"+jsonTemp.id+this.id).hide();
		}
	};
}
MxtDialog.prototype.showBtn = function(id){
	for (var i = 0; i < this.buttons.length; i++) {
		var jsonTemp = this.buttons[i];
		if(jsonTemp.id == id){
			this.targetWindow.$("#"+jsonTemp.id+this.id).show();
		}
	};
}
MxtDialog.prototype.enabledBtn = function(id){
	for (var i = 0; i < this.buttons.length; i++) {
		var jsonTemp = this.buttons[i];
		if(jsonTemp.id == id){
			this.targetWindow.$("#"+jsonTemp.id+this.id).show().removeClass('common_button_disable').addClass('common_button_gray').click(jsonTemp.handler);
		}
	};
}
MxtDialog.prototype.disabledBtn = function(id){
	for (var i = 0; i < this.buttons.length; i++) {
		var jsonTemp = this.buttons[i];
		if(jsonTemp.id == id){
			this.targetWindow.$("#"+jsonTemp.id+this.id).show().removeClass('common_button_gray').addClass('common_button_disable').unbind('click');
		}
	};
}
MxtDialog.prototype.drag = function(){
    if (this.isDrag) {
        var _dialog = this.targetWindow.$("#" + this.id);
        var _dialog_m_h = this.targetWindow.$("#" + this.id + "_main_head");
        //if (this.isDrag && this.targetWindow.DragDiv) {
		//OA-35405\u5f39\u51fa\u7a97\u53e3\u62d6\u52a8\u5230\u53f3\u4fa7\u540e\uff0c\u8be5\u9875\u9762\u5185\u53ef\u4ee5\u64cd\u4f5c\uff0c\u4f46\u662f\u8be5\u7a97\u53e3\u7126\u70b9\u4e22\u5931\uff0c\u65e0\u6cd5\u62d6\u52a8\uff0c\u53ea\u80fd\u901a\u8fc7\u5173\u95edIE\u89e3\u51b3\u3002
			this.targetWindow.$( "#"+this.id ).draggable({cancel:".dialog_main_body,.dialog_main_content_html,.dialog_main_footer",handle:'.dialog_main_head',containment:'body',scroll:false,delay:150,distance:10,iframeFix:true});
            //this.targetWindow.DragDiv.Register(_dialog[0], _dialog_m_h[0]);
        //}
    }
}
MxtDialog.prototype.close = function (json) {
	try{
		this.targetWindow.$("#" + this.id + '_main_iframe_content')[0].contentWindow.document.getElementById('docOpenBodyFrame').contentWindow.document.getElementById('officeEditorFrame').contentWindow.pdfOcxUnLoad();
	}catch(e){
	}
	
    /*\u5224\u65ad\u9690\u85cf\u5904\u7406\uff0c\u76f4\u63a5\u8fd4\u56de*/
    if (this.isHide) {
        this.hideDialog();
        return;
    }
    /*\u5224\u65ad\u662f\u5426\u4fdd\u5b58\u64cd\u4f5c\u8bb0\u5f55*/
    var _isFormItem = this.isFormItem;
    var _hasSelect = false;
    var json = json;
    json ? null : json = [];
    if (json.isFormItem != undefined) {
        _isFormItem = json.isFormItem;
    }
    if (this.htmlId != undefined) {
        //\u9ed8\u8ba4\u8fd8\u539f\u64cd\u4f5c\u8bb0\u5f55
        if (_isFormItem) {
            //\u7531\u4e8e\u514b\u9686\u4e0d\u5230select\u503c\u7684\u7279\u6b8a\u5904\u7406,\u5faa\u73af\u53d6\u503c
            var _selectObj = this.targetWindow.$("#" + this.htmlId).find("select");
            if (_selectObj.size() > 0) {
                _hasSelect = true;
                var _select_val = [];
                _selectObj.each(function () {
                    _select_val.push($(this).find("option:selected").val());
                });
            }
            //\u514b\u9686
            this.htmlObj = this.targetWindow.$("#" + this.htmlId).clone(true);
        }
        //\u628a\u5185\u5bb9\u6293\u56de\u539f\u9875\u9762,\u653e\u56de\u539f\u4f4d
        if (this.htmlObj!=null) {
            this.htmlObj.hide();
        }
        $("#" + this.htmlId + "_area").after(this.htmlObj);
        $("#" + this.htmlId + "_area").remove();
    }
    /*\u5220\u9664\u906e\u7f69\u5c42\uff0cdialog*/
    this.targetWindow.$("#" + this.id + "_mask").remove();
    this.targetWindow.$("#" + this.id + '_main_iframe_content').attr('src', '');
    this.targetWindow.$("#" + this.id).remove();

    this.officeAction(true);
    //\u7531\u4e8e\u514b\u9686\u4e0d\u5230select\u503c\u7684\u7279\u6b8a\u5904\u7406,\u5faa\u73af\u8d4b\u503c
    if (_hasSelect) {
        $("#" + this.htmlId + " select").each(function (j) {
            var _this=$(this);
            $(this).find("option").each(function (i) {
                if ($(this).val() == _select_val[j]) {
                    _this.find("option").eq(i).attr("selected", "selected");
                }
            });
        });
    }
}
MxtDialog.prototype.officeAction = function(flag){
	/**
	this.officeIframe = null;
	var officeFrameDiv = $('#officeFrameDiv');
	if(officeFrameDiv.size()>0){
		var _ww = officeFrameDiv.width();
		var _hh = officeFrameDiv.height();
		var _off = officeFrameDiv.offset();
		this.officeIframe = $("<iframe allowtransparency=true src='about:blank' frameborder='0' class='absolute'></iframe> ");
		this.officeIframe.css({
			'width':_ww,
			'height':_hh,
			'top':_off.top,
			'left':_off.left,
			'z-index':900
		}).appendTo($('body'));
	}**/
	this.officeIframe = $('#officeFrameDiv');
	this.qianzhangIframe = $("[classid='clsid:2294689C-9EDF-40BC-86AE-0438112CA439']");
	if(!flag){
		if(this.officeIframe.size()>0){
			this.officeIframe.css({
				'visibility':'hidden'
			})
		}
		if(this.qianzhangIframe.size()>0){
			this.qianzhangIframe.css({
				'visibility':'hidden'
			})
		}
	}else{
		if(this.officeIframe.size()>0){
			this.officeIframe.css({
				'visibility':'visible'
			})
		}
		if(this.qianzhangIframe.size()>0){
			this.qianzhangIframe.css({
				'visibility':'visible'
			})
		}
	}
}
MxtDialog.prototype.closeMin = function(){
    this.targetWindow.$("#" + this.id + "_mask").remove();
	this.targetWindow.$("#" + this.id+'_main_iframe_content').attr('src','');
    this.targetWindow.$("#" + this.id).remove();
	this.targetWindow.$("#" + this.id+"_div_min").remove();
	if(this.targetWindow.$('#min-divs .dialog_box_min').length == 0){
		this.targetWindow.$('#min-divs').remove();
	}
	
}
MxtDialog.prototype.minfn = function(){
	this.targetWindow.$('#'+this.id).hide();
	this.targetWindow.$('#'+this.id+'_mask').hide();
	 
	var htmlStr = ""; 
	var minDivs = this.targetWindow.$('#min-divs');
	var _w = 0;
	if(minDivs.length<=0){
		htmlStr +="<div id='min-divs' class='absolute' style='left:10px;bottom:33px;z-index:"+(this.zIndex+1)+";'>";
	}else{
		_w = minDivs.children().length;
	}
    htmlStr += "<div id='" + this.id + "_div_min' class='dialog_box_min absolute' style='left:"+_w*150+"px'>";
	    //main
	    htmlStr += "<div id='" + this.id + "_main_min' class='dialog_main absolute' style='width:150px'>";
		    //header
		    htmlStr += "<div id='" + this.id + "_main_head_min' class='dialog_main_head'>";
			    htmlStr += "<span id='" + this.id + "_title_min' class='dialog_title left' style='width:50px;  white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" + this.title + "</span>";
				htmlStr+="<span id='" + this.id + "_close_min' class='dialog_close right' title='" + this.closeTitle + "'></span>";
				
				if(this.maxParam){
					htmlStr+="<span id='" + this.id + "_auto_min' class='dialog_auto right' title='" + this.autoTitle + "'></span>";
				}
				
		    htmlStr += "</div>";//header
	    htmlStr += "</div>";
	    //main
    htmlStr += "</div>";
	if (minDivs.length <= 0) {
		htmlStr += "</div>";
		this.targetWindow.$("body").prepend(htmlStr);
	}else{
		minDivs.append(htmlStr);
	}
	
	//\u5173\u95ed\u6309\u94ae
	var self = this;
	this.targetWindow.$("#"+this.id+"_close_min").click(function(){
		self.closeMin();
	});
	if(this.maxParam){
		this.targetWindow.$("#"+this.id+"_auto_min").click(function(){
			self.autoMinfn();
		});
	}
}
MxtDialog.prototype.ifMax=function(){//\u5f39\u51fa\u7a97\u53e3\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u4e0d\u8d85\u8fc7\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u53ef\u89c6\u5bbd\u5ea6\u548c\u9ad8\u5ea6
	var _w_window = this.targetWindow.document.body.clientWidth-40;
	var _h_window = this.targetWindow.document.documentElement.clientHeight-80;
	var _w_temp = this.width;
	var _h_temp = this.height;
	this.width= _w_temp > _w_window ? _w_window : _w_temp;
	this.height= _h_temp > _h_window ? _h_window : _h_temp;
}
MxtDialog.prototype.maxfn = function(){
	var _w = this.targetWindow.document.body.clientWidth;
	var _h = this.targetWindow.document.documentElement.clientHeight-(this.isHead?70:40);
	
	this.targetWindow.$('#'+this.id+'_main').width(_w);
	this.targetWindow.$('#'+this.id+'_shadow').width(_w+ this.borderSize * 2).height(_h + this.borderSize * 2 + this.headerHeight + this.footerHeight);
	this.targetWindow.$('#'+this.id+'_main_body').width(_w).height(_h);
	this.targetWindow.$('#'+this.id+'_main_iframe').width(_w).height(_h);

	if (this.url != '') {
		this.targetWindow.$('#'+this.id+'_main_iframe_content').css({
			'width':(_w-22)+'px',
			'height':(_h-22)+'px'
		});
	}else{
		this.targetWindow.$('#'+this.id+'_main_iframe_div').width(_w-22).height(_h-22);
	}
	
	this.targetWindow.$('#'+this.id).css({
		'top':'0px',
		'left':'0px'
	});
	
	var self = this;
	this.targetWindow.$('#'+this.id+'_max').addClass("dialog_auto").unbind('click').click(function(){
		self.autofn();
	}).click(this.maxParam.handler);
}
MxtDialog.prototype.autofn = function(){
	var _w = this.width;
	var _h = this.height;
	
	this.targetWindow.$('#'+this.id+'_main').width(_w);
	this.targetWindow.$('#'+this.id+'_shadow').width(_w+ this.borderSize * 2).height(_h + this.borderSize * 2 + this.headerHeight + this.footerHeight);
	this.targetWindow.$('#'+this.id+'_main_body').width(_w).height(_h);
	this.targetWindow.$('#'+this.id+'_main_iframe').width(_w).height(_h);
	
	if (this.url != '') {
		this.targetWindow.$('#'+this.id+'_main_iframe_content').width(_w-22).height(_h-22);
	}else{
		this.targetWindow.$('#'+this.id+'_main_iframe_div').width(_w-22).height(_h-22);
	}
	
	this.targetWindow.$('#'+this.id).css({
		'top':this.top+'px',
		'left':this.left+'px'
	});
	
	var self = this;
	this.targetWindow.$('#'+this.id+'_max').removeClass("dialog_auto").unbind('click').click(function(){
		self.maxfn();
	}).click(this.maxParam.handler);
}
MxtDialog.prototype.removeMinDiv = function(){
	var minDivs = $('#min-divs');
	if(minDivs.length>0){
		if(minDivs.children().length == 0){
			minDivs.remove();
		}
	}
}
MxtDialog.prototype.autoMinfn = function(){
	this.targetWindow.$('#'+this.id+'_div_min').remove();
	this.targetWindow.$('#'+this.id).show();
	this.targetWindow.$('#'+this.id+'_mask').show();
	this.removeMinDiv();
}
MxtDialog.prototype.reSize = function (json) {
    var _client_width = this.targetWindow.document.body.clientWidth;
	var _client_Height =  document.documentElement.clientHeight;
	if(json.cHeight){
		_client_Height = json.cHeight;
	}
	if(json.cWidth){
		_client_width = json.cWidth;
	}
    var _w = json.width;
    var _h = json.height;
    var _left = (_client_width - (_w + this.borderSize * 2 + 5)) / 2;
    var _top = (_client_Height - (_h + this.borderSize * 2 + 15 + 5)) / 2;
	if(this.buttons.length == 0)this.footerHeight = 0;

    this.targetWindow.$('#' + this.id + '_main').width(_w);
    this.targetWindow.$('#' + this.id + '_shadow').width(_w + this.borderSize * 2).height(_h + this.borderSize * 2 + this.headerHeight + this.footerHeight);
    this.targetWindow.$('#' + this.id + '_main_body').width(_w).height(_h);
    this.targetWindow.$('#' + this.id + '_main_iframe').width(_w).height(_h);
	this.targetWindow.$('#' + this.id + '_iframe_shadow').width(_w).height(_h);
	

    if (this.url != '') {
        this.targetWindow.$('#' + this.id + '_main_iframe_content').css({
            'width': (_w - 22) + 'px',
            'height': (_h - 22) + 'px'
        });
    } else {
        this.targetWindow.$('#' + this.id + '_main_iframe_div').width(_w - 22).height(_h - 22);
    }
    this.targetWindow.$(".dialog_title").width(_w - 100);
    this.targetWindow.$('#' + this.id).css({
        left: _left + "px",
        top: _top + "px"
    });
}
MxtDialog.prototype.getReturnValue = function(json){
	if(json == null){json = {};}
	var iframeId = this.id+"_main_iframe_content";
	var index = null;
	var topWindow = this.targetWindow;
	var win = topWindow.document.getElementById(iframeId);
	if(win!=null){
		var returnValues = null;
		if(win.contentWindow && typeof(win.contentWindow.OK) == "function"){
			returnValues = win.contentWindow.OK(json); 
		}else{
			return null;
		}
		return returnValues;
	}else{
		return null;
	}
}
MxtDialog.prototype.getMin = function(json){
	if(json == null){json = {};}
	var iframeId = this.id+"_main_iframe_content";
	var index = null;
	var topWindow = this.targetWindow;
	var win = topWindow.document.getElementById(iframeId);
	if(win!=null){
		var returnValues = null;
		if(win.contentWindow){
			returnValues = win.contentWindow.MIN(json); 
		}else{
			returnValues = win.MIN(json); 
		}
		return returnValues;
	}else{
		return null;
	}
}
MxtDialog.prototype.getMax = function(json){
	if(json == null){json = {};}
	var iframeId = this.id+"_main_iframe_content";
	var index = null;
	var topWindow = this.targetWindow;
	var win = topWindow.document.getElementById(iframeId);
	if(win!=null){
		var returnValues = null;
		if(win.contentWindow){
			returnValues = win.contentWindow.MAX(json); 
		}else{
			returnValues = win.MAX(json); 
		}
		return returnValues;
	}else{
		return null;
	}
}
MxtDialog.prototype.getClose = function(json){
	if(json == null){json = {};}
	var iframeId = this.id+"_main_iframe_content";
	var index = null;
	var topWindow = this.targetWindow;
	var win = topWindow.document.getElementById(iframeId);
	if(win!=null){
		var returnValues = null;
		if(win.contentWindow){
			returnValues = win.contentWindow.CLOSE(json); 
		}else{
			returnValues = win.CLOSE(json); 
		}
		return returnValues;
	}else{
		return null;
	}
}

MxtDialog.prototype.getWidth = function(){
	return this.targetWindow.$('#'+this.id+'_main_iframe_content').css('width');
}		
MxtDialog.prototype.getHeight = function(){
	return this.targetWindow.$('#'+this.id+'_main_iframe_content').css('height');
}	

MxtDialog.prototype.getTransParams = function(){
	return this.transParamsCopy;
}	


MxtDialog.prototype.reloadUrl = function (url) {
    var _url = url;
    _url ? null : _url = this.url;
    this.targetWindow.$('#' + this.id + '_main_iframe_content').attr("src", _url);
    var temp = $('#'+this.id+'_main_iframe_content',this.targetWindow.document);
	if(temp.size()>0 && temp[0].contentWindow){
		try{
	        if(temp[0].contentWindow.parentDialogObj == undefined)temp[0].contentWindow.parentDialogObj = new Object();
	        eval("temp[0].contentWindow.parentDialogObj['" + this.id + "'] = this;");
		}catch(e){}
    }
    if(temp.size()>0 && this.transParams!=undefined){
		try{
			if(!this.isFromModle){
				this.transParamsCopy = this.transParams;
				temp[0].contentWindow.dialogArguments = this.transParams;
			}else{
				this.transParamsCopy = this.transParams;
				temp[0].contentWindow.transParams = this.transParams;
			}
		}catch(e){
			this.transParamsCopy = this.transParams;
			temp[0].contentWindow.transParams = this.transParams;
		}
    }
}
MxtDialog.prototype.setTitle = function(newtitle){
    this.targetWindow.$('#' + this.id + '_title').html(newtitle);
}	
MxtDialog.prototype.hideDialog = function(){
  this.targetWindow.$("#" + this.id + "_main_iframe_content").attr('src','');
  this.targetWindow.$("#" + this.id + "_mask").hide();
  this.targetWindow.$("#" + this.id).hide();
  this.officeAction(true);
} 
MxtDialog.prototype.showDialog = function(){
  this.targetWindow.$("#" + this.id + "_main_iframe_content").attr('src',this.url);
  this.targetWindow.$("#" + this.id + "_mask").show();
  this.targetWindow.$("#" + this.id).show();
  this.officeAction(false);
} 
MxtDialog.prototype.getObjectById = function(id){
    return this.targetWindow?this.targetWindow.$('#'+id):null;
}  
MxtDialog.prototype.getObjectByClass = function(className){
  return this.targetWindow?this.targetWindow.$('.'+className):null;
}
MxtDialog.prototype.startLoading = function(options){
	if(this.targetWindow) this.targetWindow.$("#" + this.id+"_main_iframe").show();
} 
MxtDialog.prototype.endLoading = function(){
    if(this.targetWindow) this.targetWindow.$("#" + this.id+"_main_iframe").hide();
} 
/**\u6d88\u606f\u7a97\u53e3**/
function MxtMsgBox(options){
    this.id = options.id ? options.id : Math.floor(Math.random() * 100000000);
    this.title = options.title ? options.title : 'MessageBox';
	this.type = options.type ? options.type : 0;
    this.msg = options.msg ? options.msg : '';
    this.buttons = options.buttons ? options.buttons : [];
    this.width = options.width ? options.width : 350;
    this.height = options.height ? options.height : 120;
    this.isDrag = options.isDrag ? options.isDrag : true;
    this.borderSize = 1;//\u8fb9\u6846\u5c3a\u5bf8(\u50cf\u7d20)
    //this.closeTitle = options.closeTitle ? options.closeTitle : 'close';//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
    this.closeTitle = options.closeTitle ? options.closeTitle : $.i18n('common.button.close.label');//\u9f20\u6807\u79fb\u4e0a\u53bb\u65f6\u7684\u63d0\u793a\u6587\u5b57
    this.submitText = options.submitText ? options.submitText : 'submit';
	
	this.headerHeight = 28;
    this.footerHeight = 40;
	
	this.imgType = options.imgType==null ? null :options.imgType;
	
	//$.i18n('validate.notJson.js')
    this.okText = options.okText ? options.okText : $.i18n('message.ok.js');
    this.cancelText = options.cancelText ? options.cancelText : $.i18n('message.cancel.js');
	this.yesText = options.yesText ? options.yesText : $.i18n('message.yes.js');
	this.noText = options.noText ? options.noText : $.i18n('message.no.js');
	this.retryText = options.retryText ? options.retryText : $.i18n('message.retry.js');
	this.detailText = options.detailText ? options.detailText : $.i18n('message.detail.js');
	
	
	this.ok_fn = options.ok_fn ? options.ok_fn : null;//\u70b9\u51fb\u786e\u5b9a\u540e\u6267\u884c\u7684\u51fd\u6570
	this.cancel_fn = options.cancel_fn ? options.cancel_fn : null;//\u70b9\u51fb\u53d6\u6d88\u540e\u6267\u884c\u7684\u51fd\u6570
	this.yes_fn = options.yes_fn ? options.yes_fn : null;//\u70b9\u51fb\u662f\u540e\u6267\u884c\u7684\u51fd\u6570
	this.no_fn = options.no_fn ? options.no_fn : null;//\u70b9\u51fb\u5426\u540e\u6267\u884c\u7684\u51fd\u6570
	this.retry_fn = options.retry_fn ? options.retry_fn : null;//\u70b9\u51fb\u91cd\u8bd5\u540e\u6267\u884c\u7684\u51fd\u6570
	this.detail_fn = options.detail_fn ? options.detail_fn : null;//\u70b9\u51fb\u8be6\u60c5\u540e\u6267\u884c\u7684\u51fd\u6570
	this.close_fn = options.close_fn ? options.close_fn : null;//\u70b9\u51fb\u53f3\u4e0a\u89d2X\u540e\u6267\u884c\u7684\u51fd\u6570
	this.close_show = options.close_show ? options.close_show : true;//\u53f3\u4e0a\u89d2X,\u663e\u793a
	this.zIndex = 5000;
	this.isFrountEvent = options.isFrountEvent ? options.isFrountEvent : false;//\u70b9\u51fb\u8be6\u60c5\u540e\u6267\u884c\u7684\u51fd\u6570;
	this.targetWindow = options.targetWindow == null ? getCtpTop() : options.targetWindow;
	//this.targetWindow = window.top;
	//var mainobj = window.top.document.getElementById('main');
	//if(mainobj){
	//    this.targetWindow = window.top.document.getElementById('main').contentWindow;
	//	this.isDrag = false;
	//}else{
		//this.targetWindow = window; //\u4fee\u6539targetWindow:window.parent\u65e0\u6548 byxiexp
	//	this.isDrag = true;
	//}
    this.init();
    this.drag();

    var _this = this;
    $(document).keyup(function (e) {
        if ($('#' + _this.id)) {
            if (e.keyCode == 27) {//ESC
                _this.close();
            }
        }
    })
}

MxtMsgBox.prototype.init = function(){
    //\u906e\u7f69id
    var maskId = this.id + "_mask";
    
    //\u83b7\u53d6\u5ba2\u6237\u7aef\u9875\u9762\u5bbd\u9ad8
    var _client_width = this.targetWindow.document.body.clientWidth;
    var _client_height = (this.targetWindow.document.documentElement.scrollHeight>this.targetWindow.document.documentElement.clientHeight?this.targetWindow.document.documentElement.scrollHeight:this.targetWindow.document.documentElement.clientHeight);
    
	
	var masks =  this.targetWindow.$('.mask');
	if(masks.size() == 0){
		//\u8001\u6846\u67b6mxtwindow\u4e2d\u5f39\u51fa\u65b0dialog\u5c42\u7ea7\u6298\u53e0\u95ee\u9898
		masks =  this.targetWindow.$('.shield');
	}
	if(masks.length>0){
		var zindexstr = parseInt(masks.eq(0).css('z-index'));
		this.zIndex = parseInt(zindexstr)+2;
	}
	
    //\u906e\u7f69
    if (typeof($("#" + maskId)[0]) == "undefined") {
        this.targetWindow.$('body').prepend("<div id='" + maskId + "' class='mask' style='width:" + _client_width + "px;height:" + _client_height + "px;z-index:"+this.zIndex+"'>&nbsp;</div>");
    }
    //\u5224\u65ad\u662f\u5426\u5b58\u5728.\u5b58\u5728\u5c31\u5148\u79fb\u5904
    if (typeof($("#" + this.id)[0]) != "undefined") {
        this.targetWindow.$("#" + this.id).remove();
    }
	
    //\u5236\u4f5cdialog
    var htmlStr = "";
    var _left = (_client_width - (this.width + this.borderSize * 2 + 5)) / 2;
    var _top = (this.targetWindow.document.documentElement.clientHeight - (this.height + this.borderSize * 2 + this.headerHeight + this.footerHeight + 5)) / 2;
    
	if(_top<=0){
      _top = ($(document.body).height() - (this.height + this.borderSize * 2 + this.headerHeight + this.footerHeight + 5)) / 2;
    }
	
    //left \u8fb9\u6846*2 \u9634\u5f715
    //top \u8fb9\u6846*2 \u9634\u5f715 header30 bottom50
    htmlStr += "<div id='" + this.id + "' class='dialog_box absolute' style='z-index:"+(this.zIndex+2)+";left:" + ((_left < 0 ? 0 : _left) + this.targetWindow.document.documentElement.scrollLeft) + "px;top:" + ((_top < 0 ? 0 : _top) + this.targetWindow.document.documentElement.scrollTop) + "px;'>";
    //\u9634\u5f71
    htmlStr += "<div id='" + this.id + "_shadow' class='dialog_shadow absolute' style='width:" + (this.width + this.borderSize * 2) + "px;height:" + (this.height + this.borderSize * 2 + this.headerHeight + this.footerHeight) + "px;'>&nbsp;</div>"
    //iframe \u906e\u6321office\u63d2\u4ef6
    htmlStr += "<iframe id='" + this.id + "_iframe_shadow' class='absolute' style='width:" + this.width+ "px;height:" + (this.height + this.headerHeight + this.footerHeight) + "px;border:0'></iframe>"
	
	    //main
	    htmlStr += "<div id='" + this.id + "_main' class='dialog_main absolute' style='width:" + this.width + "px'>";
		    //header
		    htmlStr += "<div id='" + this.id + "_main_head' class='dialog_main_head'>";
		    htmlStr += "<span id='" + this.id + "_title' class='dialog_title left'>" + this.title + "</span>";
		        if (this.close_show) {
		            htmlStr += "<span id='" + this.id + "_close' class='dialog_close right' title='" + this.closeTitle + "'></span>";
		        }
			    //htmlStr += "<div class='clear'></div>";
		    htmlStr += "</div>";//header
		    //body
		    htmlStr += "<div id='" + this.id + "_main_body' class='dialog_main_body left' style='width:" + this.width + "px;height:" + this.height + "px'>";
			    //iframe \u906e\u7f69\u5c42
			    htmlStr += "<div id='" + this.id + "_main_iframe' class='dialog_main_iframe absolute' style='top:" + this.headerHeight + "px;width:" + this.width + "px;height:" + this.height + "px;display:none;'>&nbsp;</div>";
			    
			    //iframe \u5bb9\u5668
			    htmlStr += "<div id='" + this.id + "_main_content' class='dialog_main_content absolute'>";
					//12:[\u4e0a\u4e0b\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u5de6\u53f3\u5185\u5916\u8fb9\u8ddd\u540410(5+5) \u4e0a\u4e0b\u8fb9\u6846 1+1 \u5de6\u53f3\u8fb9\u6846 1+1]
					htmlStr+="<div class='dialog_main_content_html padding_5 margin_5' style='width:"+(this.width-22)+"px;height:"+(this.height-22)+"px;overflow:auto'>";
						htmlStr+="<table width='100%' class='margin_t_20' style='font-size:12px;'><tr>";
						
						//\u663e\u793a\u63d0\u793a\u4fe1\u606f\u56fe\u7247
						if(this.imgType!= null){
						    htmlStr += "<td valign='top' width='24' class='padding_l_20'><span class='msgbox_img_" + this.imgType + "'></span>";
							htmlStr += "</td>";
						}
						//\u663e\u793a\u63d0\u793a\u4fe1\u606f\u5185\u5bb9
						htmlStr += "<td class='msgbox_content padding_l_10'>";
						htmlStr += this.msg;
						htmlStr += "</td>";
						
						htmlStr+="</tr></table>";
					htmlStr+="</div>";
			    htmlStr += "</div>";
				
		    htmlStr += "</div>";
		    //body
		    
		    //bottom
			htmlStr += "<div id='" + this.id + "_main_footer' class='dialog_main_footer left align_right padding_t_5 w100b'>";
			
			switch(this.type){
			   case 0:
				 htmlStr+="<a  id='ok_msg_btn_first'  class='common_button common_button_gray margin_r_10 hand'>"+this.okText+"</a>";
			     break
			   case 1:
				 htmlStr+="<a  id='ok_msg_btn_first'   class='common_button common_button_gray margin_r_10 hand'>"+this.okText+"</a>";
				 htmlStr+="<a  id='cancel_msg_btn'  class='common_button common_button_gray margin_r_10 hand'>"+this.cancelText+"</a>";
			     break
			   case 2:
				 htmlStr+="<a  id='yes_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.yesText+"</a>";
				 htmlStr+="<a  id='no_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.noText+"</a>";
				 htmlStr+="<a  id='cancel_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.cancelText+"</a>";
			     break
			   case 3:
				 htmlStr+="<a  id='yes_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.yesText+"</a>";
				 htmlStr+="<a  id='no_msg_btn'  class='common_button common_button_gray margin_r_10 hand'>"+this.noText+"</a>";
			     break 
			   case 4:
				 htmlStr+="<a  id='retry_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.retryText+"</a>";
				 htmlStr+="<a  id='cancel_msg_btn'  class='common_button common_button_gray margin_r_10 hand'>"+this.cancelText+"</a>";				 
			     break
			   case 5:
				 htmlStr+="<a  id='ok_msg_btn_first'  class='common_button common_button_gray margin_r_10 hand'>"+this.okText+"</a>";
				 htmlStr+="<a  id='detail_msg_btn'   class='common_button common_button_gray margin_r_10 hand'>"+this.detailText+"</a>";
			     break
				case 100:
				  //\u81ea\u5b9a\u4e49\u6309\u94ae
				  if (this.buttons.length > 0) {
				  	for (var i = 0; i < this.buttons.length; i++) {
				  		var jsonTemp = this.buttons[i];
						htmlStr+="<a  id='"+jsonTemp.id+"_btn'   class='common_button common_button_gray margin_r_10 hand' title='"+jsonTemp.text+"'>"+jsonTemp.text+"</a>";
					}
				}
				break
			   default:
			   	 htmlStr+="<a  id='ok_msg_btn_first'   class='common_button common_button_gray margin_r_10 hand'>"+this.okText+"</a>";
		    }
			
			htmlStr += "</div>";
			//bottom
	    htmlStr += "</div>";
	    //main
    htmlStr += "</div>";
    this.targetWindow.$("body").prepend(htmlStr);	
	
	//\u5173\u95ed\u6309\u94ae
	var self = this;
	this.targetWindow.$('#' + this.id + '_close').click(function(){
		self.close();
	}).click(this.close_fn);

	switch(this.type){
	   case 0:
	   	 if(!this.isFrountEvent){
		 	 this.targetWindow.$('#ok_msg_btn_first').click(function(){self.close()}).click(this.ok_fn);
		 }else{
		 	 this.targetWindow.$('#ok_msg_btn_first').click(this.ok_fn).click(function(){self.close()});
		 }	
	     break
	   case 1:
	     if (!this.isFrountEvent) {
			 this.targetWindow.$('#ok_msg_btn_first').click(function(){self.close()}).click(this.ok_fn);
			 this.targetWindow.$('#cancel_msg_btn').click(function(){self.close()}).click(this.cancel_fn);
		 }else{
			 this.targetWindow.$('#ok_msg_btn_first').click(this.ok_fn).click(function(){self.close()});
			 this.targetWindow.$('#cancel_msg_btn').click(this.cancel_fn).click(function(){self.close()});
		 }
	     break
	   case 2:
	   	 if (!this.isFrountEvent) {
		 	  this.targetWindow.$('#yes_msg_btn').click(function(){self.close()}).click(this.yes_fn);
			  this.targetWindow.$('#no_msg_btn').click(function(){self.close()}).click(this.no_fn);
			  this.targetWindow.$('#cancel_msg_btn').click(function(){self.close()}).click(this.cancel_fn);
		 }else{
		 	  this.targetWindow.$('#yes_msg_btn').click(this.yes_fn).click(function(){self.close()});
			  this.targetWindow.$('#no_msg_btn').click(this.no_fn).click(function(){self.close()});
			  this.targetWindow.$('#cancel_msg_btn').click(this.cancel_fn).click(function(){self.close()});
		 }	
	     break
	   case 3:
	   	 if (!this.isFrountEvent) {
		 	  this.targetWindow.$('#yes_msg_btn').click(function(){self.close()}).click(this.yes_fn);
			  this.targetWindow.$('#no_msg_btn').click(function(){self.close()}).click(this.no_fn);
		 }else{
		 	  this.targetWindow.$('#yes_msg_btn').click(this.yes_fn).click(function(){self.close()});
			  this.targetWindow.$('#no_msg_btn').click(this.no_fn).click(function(){self.close()});
		 }	
	     break 
	   case 4:
	     if (!this.isFrountEvent) {
		 	 this.targetWindow.$('#retry_msg_btn').click(function(){self.close()}).click(this.retry_fn);
			 this.targetWindow.$('#cancel_msg_btn').click(function(){self.close()}).click(this.cancel_fn);
		 }else{
		 	 this.targetWindow.$('#retry_msg_btn').click(this.retry_fn).click(function(){self.close()});
			 this.targetWindow.$('#cancel_msg_btn').click(this.cancel_fn).click(function(){self.close()});
		 }
	     break
	   case 5:
	     if (!this.isFrountEvent) {
			 this.targetWindow.$('#ok_msg_btn_first').click(function(){self.close()}).click(this.ok_fn);
			 this.targetWindow.$('#detail_msg_btn').click(function(){self.close()}).click(this.detail_fn);
		 }else{
			 this.targetWindow.$('#ok_msg_btn_first').click(this.ok_fn).click(function(){self.close()});
			 this.targetWindow.$('#detail_msg_btn').click(this.detail_fn).click(function(){self.close()});
		 }
	     break
		case 100:
		  //\u81ea\u5b9a\u4e49\u6309\u94ae
		  if (this.buttons.length > 0) {
		  	for (var i = 0; i < this.buttons.length; i++) {
		  		var jsonTemp = this.buttons[i];
		  		if (!this.isFrountEvent) {
		  			//\u5173\u95ed\u7a97\u53e3\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5 	
					this.targetWindow.$('#'+jsonTemp.id+'_btn').click(function(){self.close()}).click(jsonTemp.handler);
				}else {
					//\u6267\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5\u540e\u5173\u95ed\u7a97\u53e3
					this.targetWindow.$('#'+jsonTemp.id+'_btn').click(jsonTemp.handler).click(function(){self.close()});
				}
			};
		}
		break
	   default:
	   	 if(!this.isFrountEvent){
		 	 //\u5173\u95ed\u7a97\u53e3\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5 	
		   	 this.targetWindow.$('#ok_msg_btn_first').click(function(){self.close()}).click(this.ok_fn);
		 }else{
		 	 //\u6267\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5 	\u540e \u5173\u95ed\u7a97\u53e3
			 this.targetWindow.$('#ok_msg_btn_first').click(this.ok_fn).click(function(){self.close()});
		 }
    }
	if(this.targetWindow.$('#ok_msg_btn_first').size()>0){
		this.targetWindow.$('#ok_msg_btn_first').parent().focus();
	}
}
MxtMsgBox.prototype.drag = function(){
    if (this.isDrag) {
        //var _dialog = this.targetWindow.$("#" + this.id);
        //var _dialog_m_h = this.targetWindow.$("#" + this.id + "_main_head");
        //if (this.isDrag && this.targetWindow.DragDiv) {
			this.targetWindow.$( "#"+this.id ).draggable({cancel:".dialog_main_content_html,.dialog_main_footer",containment:'body',scroll:false});
            //this.targetWindow.DragDiv.Register(_dialog[0], _dialog_m_h[0]);
        //}
    }
}
MxtMsgBox.prototype.close = function(){
    this.targetWindow.$("#" + this.id + "_mask").remove();
    this.targetWindow.$("#" + this.id).remove();
}
//
//var DragDiv = function(){
//    
//    //\u5ba2\u6237\u7aef\u5f53\u524d\u5c4f\u5e55\u5c3a\u5bf8(\u5ffd\u7565\u6eda\u52a8\u6761)
//    var _clientWidth;
//    var _clientHeight;
//    
//    //\u62d6\u62fd\u63a7\u5236\u533a
//    var _controlObj;
//    //\u62d6\u62fd\u5bf9\u8c61
//    var _dragObj;
//    //\u62d6\u52a8\u72b6\u6001
//    var _flag = false;
//    
//    //\u62d6\u62fd\u5bf9\u8c61\u7684\u5f53\u524d\u4f4d\u7f6e
//    var _dragObjCurrentLocation;
//    
//    //\u9f20\u6807\u6700\u540e\u4f4d\u7f6e
//    var _mouseLastLocation;
//    
//    //\u4f7f\u7528\u5f02\u6b65\u7684Javascript\u4f7f\u62d6\u62fd\u6548\u679c\u66f4\u4e3a\u6d41\u7545
//    //var _timer;
//    
//    //\u5b9a\u65f6\u79fb\u52a8\uff0c\u7531_timer\u5b9a\u65f6\u8c03\u7528
//    //var intervalMove = function(){
//    //	$(_dragObj).css("left", _dragObjCurrentLocation.x + "px");
//    //	$(_dragObj).css("top", _dragObjCurrentLocation.y + "px");
//    //};
//    
//    var getElementDocument = function(element){
//    	
//        return element.ownerDocument || element.document;
//    };
//    //\u9f20\u6807\u6309\u4e0b
//    var dragMouseDownHandler = function(evt){
//    
//        if (_dragObj) {
//        
//            evt = evt || window.event;
//            
//            //\u83b7\u53d6\u5ba2\u6237\u7aef\u5c4f\u5e55\u5c3a\u5bf8
//            _clientWidth = document.body.clientWidth;
//            _clientHeight = document.documentElement.scrollHeight;
//            
//            //iframe\u906e\u7f69
//            $("#jd_dialog_m_b_1").css("display", "");
//            
//            //\u6807\u8bb0
//            _flag = true;
//            
//            //\u62d6\u62fd\u5bf9\u8c61\u4f4d\u7f6e\u521d\u59cb\u5316
//            _dragObjCurrentLocation = {
//                x: $(_dragObj).offset().left,
//                y: $(_dragObj).offset().top
//            };
//            
//            //\u9f20\u6807\u6700\u540e\u4f4d\u7f6e\u521d\u59cb\u5316
//            _mouseLastLocation = {
//                x: evt.screenX,
//                y: evt.screenY
//            };
//            
//            //\u6ce8\uff1amousemove\u4e0emouseup\u4e0b\u4ef6\u5747\u9488\u5bf9document\u6ce8\u518c\uff0c\u4ee5\u89e3\u51b3\u9f20\u6807\u79bb\u5f00_controlObj\u65f6\u4e8b\u4ef6\u4e22\u5931\u95ee\u9898
//            //\u6ce8\u518c\u4e8b\u4ef6(\u9f20\u6807\u79fb\u52a8)			
//            $(document).bind("mousemove", dragMouseMoveHandler);
//            //\u6ce8\u518c\u4e8b\u4ef6(\u9f20\u6807\u677e\u5f00)
//            $(document).bind("mouseup", dragMouseUpHandler);
//            
//            //\u53d6\u6d88\u4e8b\u4ef6\u7684\u9ed8\u8ba4\u52a8\u4f5c
//            if (evt.preventDefault) 
//                evt.preventDefault();
//            else 
//                evt.returnValue = false;
//            
//            //\u5f00\u542f\u5f02\u6b65\u79fb\u52a8
//            //_timer = setInterval(intervalMove, 10);
//        }
//    };
//    
//    //\u9f20\u6807\u79fb\u52a8
//    var dragMouseMoveHandler = function(evt){
//        if (_flag) {
//        
//            evt = evt || window.event;
//            
//            //\u5f53\u524d\u9f20\u6807\u7684x,y\u5ea7\u6807
//            var _mouseCurrentLocation = {
//                x: evt.screenX,
//                y: evt.screenY
//            };
//            
//            //\u62d6\u62fd\u5bf9\u8c61\u5ea7\u6807\u66f4\u65b0(\u53d8\u91cf)
//            _dragObjCurrentLocation.x = _dragObjCurrentLocation.x + (_mouseCurrentLocation.x - _mouseLastLocation.x);
//            _dragObjCurrentLocation.y = _dragObjCurrentLocation.y + (_mouseCurrentLocation.y - _mouseLastLocation.y);
//            
//            //\u5c06\u9f20\u6807\u6700\u540e\u4f4d\u7f6e\u8d4b\u503c\u4e3a\u5f53\u524d\u4f4d\u7f6e
//            _mouseLastLocation = _mouseCurrentLocation;
//            
//            //\u62d6\u62fd\u5bf9\u8c61\u5ea7\u6807\u66f4\u65b0(\u4f4d\u7f6e)
//            $(_dragObj).css("left", _dragObjCurrentLocation.x + "px");
//            $(_dragObj).css("top", _dragObjCurrentLocation.y + "px");
//            
//            //\u53d6\u6d88\u4e8b\u4ef6\u7684\u9ed8\u8ba4\u52a8\u4f5c
//            if (evt.preventDefault) 
//                evt.preventDefault();
//            else 
//                evt.returnValue = false;
//        }
//    };
//    
//    //\u9f20\u6807\u677e\u5f00
//    var dragMouseUpHandler = function(evt){
//        if (_flag) {
//            evt = evt || window.event;
//            
//            //\u53d6\u6d88iframe\u906e\u7f69
//            $("#jd_dialog_m_b_1").css("display", "none");
//            
//            //\u6ce8\u9500\u9f20\u6807\u4e8b\u4ef6(mousemove mouseup)
//            cleanMouseHandlers();
//            
//            //\u6807\u8bb0
//            _flag = false;
//            
//            //\u6e05\u9664\u5f02\u6b65\u79fb\u52a8
//            //if(_timer){
//            //	clearInterval(_timer);
//            //	_timer = null;
//            //}
//        }
//    };
//    
//    //\u6ce8\u9500\u9f20\u6807\u4e8b\u4ef6(mousemove mouseup)
//    var cleanMouseHandlers = function(){
//        if (_controlObj) {
//            $(_controlObj.document).unbind("mousemove");
//            $(_controlObj.document).unbind("mouseup");
//        }
//    };
//    
//    return {
//        //\u6ce8\u518c\u62d6\u62fd(\u53c2\u6570\u4e3adom\u5bf9\u8c61)
//        Register: function(dragObj, controlObj){
//            //\u8d4b\u503c
//            _dragObj = dragObj;
//            _controlObj = controlObj;
//            //\u6ce8\u518c\u4e8b\u4ef6(\u9f20\u6807\u6309\u4e0b)
//            $(_controlObj).bind("mousedown", dragMouseDownHandler);
//        }
//    }
//    
//}();
////-->
/**
 * @author macj
 */
function MxtProgressBar(options){
	if(options == undefined){options = {}}
	this.id = options.id ? options.id : Math.floor(Math.random() * 100000000);
    this.text = options.text ? options.text : '';
    this.progress = options.progress ? options.progress : '';
	this.width = options.width ? options.width : 600;
	this.height = options.height ? options.height : 70;
	this.isMode = options.isMode == undefined ? true : options.isMode;
	this.buttons = options.buttons;
	if(this.buttons!=null){
		this.height+=30;
	}
	this.borderSize = 1;
	this.init();
}
MxtProgressBar.prototype.init = function (){
	
    //\u906e\u7f69id
    var maskId = this.id + "_mask";
    
    //\u83b7\u53d6\u5ba2\u6237\u7aef\u9875\u9762\u5bbd\u9ad8
    var _client_width = document.body.clientWidth;
    var _client_height = (document.documentElement.scrollHeight>document.documentElement.clientHeight?document.documentElement.scrollHeight:document.documentElement.clientHeight);
    
	
    //\u906e\u7f69
    if (typeof($("#" + maskId)[0]) == "undefined" && this.isMode ==  true) {
        $("body").prepend("<div id='" + maskId + "' class='mask' style='width:" + _client_width + "px;height:" + _client_height + "px;'>&nbsp;</div>");
    }
    //\u5224\u65ad\u662f\u5426\u5b58\u5728.\u5b58\u5728\u5c31\u5148\u79fb\u5904
    if (typeof($("#" + this.id)[0]) != "undefined") {
        $("#" + this.id).remove();
    }
    //progressBar
    var htmlStr = "";
	if(this.progress == ''){
		//\u7b80\u5355\u7684\u52a0\u8f7d\u8fdb\u5ea6
		var _left = (_client_width - 66) / 2;
	    var _top = (document.documentElement.clientHeight - 66) / 2;
		htmlStr +="<div id='" + this.id + "' class='common_loading_progress_box absolute clearfix' style='left:" + (_left + document.documentElement.scrollLeft) + "px;top:" + (_top + document.documentElement.scrollTop) + "px;'></div>";
		if(this.text!='' && this.text!=undefined){
			htmlStr +="<div id='" + this.id + "_text' class='absolute clearfix' style='width:auto;overflow:hidden;border:0px #286fbf solid;background:#f8f8f8;z-index:1001;font-size:12px;padding:5px;left:" + (_left + document.documentElement.scrollLeft-76) + "px;top:" + (_top + document.documentElement.scrollTop+66) + "px;'>"+this.text+"</div>";
		}
	}else{
		//\u5305\u542b\u8fdb\u5ea6\u7684
	    var _left = (_client_width - (this.width + 5)) / 2;
	    var _top = (document.documentElement.clientHeight - (this.height + 5)) / 2;
		htmlStr +="<div id='" + this.id + "' class='common_progress_box absolute clearfix' style='left:" + ((_left < 0 ? 0 : _left) + document.documentElement.scrollLeft) + "px;top:" + ((_top < 0 ? 0 : _top) + document.documentElement.scrollTop) + "px;'>";
	    	//\u9634\u5f71
	    	htmlStr +="<div id='" + this.id + "_shadow' class='common_progress_shadow absolute' style='width:" + (this.width + this.borderSize * 2) + "px;height:" + (this.height + this.borderSize * 2) + "px;'>&nbsp;</div>"
			htmlStr +="<div class='common_progress_strip absolute padding_5' style='width:" + (this.width-10) + "px;height:" + (this.height-10) + "px;'>";
				if(this.text!=''){
					htmlStr +="<dl id='"+this.id+"_title' class='common_progress_strip_title margin_b_5 margin_t_5 '>"+this.text+"</dl>";
				}
				htmlStr +="<dl id='"+this.id+"_text' class='common_progress_strip_per margin_l_10 right margin_r_5'>"+this.progress+"%</dl>";
				htmlStr +="<dl class='common_progress_strip_content'>";
					htmlStr +="<dt id='"+this.id+"_progress' class='common_progress_strip_bg' style='width:"+this.progress+"%'></dt>";
				htmlStr +="</dl>";
				htmlStr +="<div class='padding_10'><table class='common_right'><tr><td class='clearfix' id='"+this.id+"_buttons'>";
						//<a  href="javascript:void(0)" class="common_button common_button_gray">\u5173\u6ce8</a>
				htmlStr +="</td></tr></table></div>";
			htmlStr +="</div>";
		htmlStr +="</div>";
	}
	$("body").prepend(htmlStr);
	if(this.buttons!=null){
		for(var i = 0;i<this.buttons.length;i++){
			var btnTemp = this.buttons[i];
			$("<a id='"+btnTemp.id+"' href='javascript:void(0)' class='common_button common_button_gray margin_r_10'>"+btnTemp.text+"</a>\n").click(btnTemp.handler).appendTo($('#'+this.id+'_buttons'));
		}
	}

	var fontBoxWidth = $("#" + this.id + "_text").width();
	$("#" + this.id + "_text").css("left", _left + document.documentElement.scrollLeft-((fontBoxWidth-56)/2) + "px");
	
}
MxtProgressBar.prototype.setProgress = function(prog){
	$('#'+this.id+"_progress").css('width',prog+'%');
	$('#'+this.id+"_text").html(prog+"%");
}
MxtProgressBar.prototype.setTitle = function(title){
	$('#'+this.id+"_title").html(title);
}
MxtProgressBar.prototype.close = function(){
    $("#" + this.id + "_mask").remove();
    $("#" + this.id).remove();
	if(this.text!='' && this.text!=undefined){
		$('#'+this.id + '_text').remove();
	}
}
MxtProgressBar.prototype.start = function(){
    $("#" + this.id + "_mask").show();
    $("#" + this.id).show();
	if(this.text!='' && this.text!=undefined){
		$('#'+this.id + '_text').show();
	}
}
/**
 * @author macj
 */
/**
 * StringStringBuffer\u5bf9\u8c61
 */
function StringBuffer(){
	this._strings_ = new Array();
}
StringBuffer.prototype.append = function(str){
	if(str){
		if(str instanceof Array){
			this._strings_ = this._strings_.concat(str);
		}
		else{
			this._strings_[this._strings_.length] = str;
		}
	}
	
	return this;
}
StringBuffer.prototype.reset = function(newStr){
	this.clear();
	this.append(newStr);
}
StringBuffer.prototype.clear = function(){
	this._strings_ = new Array();
}
StringBuffer.prototype.isBlank = function(){
	return this._strings_.length == 0;
}

StringBuffer.prototype.toString = function(sp){
	sp = sp == null ? "" : sp;
	if (this._strings_.length == 0)
		return "";
	return this._strings_.join(sp);
}
String.prototype.getBytesLength = function(){
    var cArr = this.match(/[^\x00-\xff]/ig);
    return this.length + (cArr == null ? 0 : cArr.length);
};

String.prototype.getLimitLength = function(maxlengh, symbol){
    if (!maxlengh || maxlengh < 0) {
        return this;
    }
    var len = this.getBytesLength();
    
    if (len <= maxlengh) {
        return this;
    }
    
    symbol = symbol == null ? ".." : symbol;
    maxlengh = maxlengh - symbol.length;
    
    var a = 0;
    var temp = '';
    
    for (var i = 0; i < this.length; i++) {
        if (this.charCodeAt(i) > 255) 
            a += 2;
        else 
            a++;
        
        temp += this.charAt(i);
        
        if (a >= maxlengh) {
            return temp + symbol;
        }
    }
    
    return this;
};

String.prototype.escapeHTML = function(isEscapeSpace,isEscapeBr){
    try {
        return escapeStringToHTML(this, isEscapeSpace,isEscapeBr);
    } 
    catch (e) {
    }
    
    return this;
};

String.prototype.escapeJavascript = function(){
    return escapeStringToJavascript(this);
};

String.prototype.escapeSpace = function(){
    return this.replace(/ /g, "&nbsp;");
};

String.prototype.escapeSameWidthSpace = function(){
    return this.replace(/ /g, "&nbsp;&nbsp;");
};

String.prototype.escapeXML = function(){
    return this.replace(/\&/g, "&amp;").replace(/\</g, "&lt;").replace(/\>/g, "&gt;").replace(/\"/g, "&quot;");
};
String.prototype.escapeQuot = function(){
    return this.replace(/\'/g, "&#039;").replace(/"/g, "&#034;");
};
String.prototype.startsWith = function(prefix){
    return this.indexOf(prefix) == 0;
};
String.prototype.endsWith = function(subfix){
    var pos = this.indexOf(subfix);
    return pos > -1 && pos == this.length - subfix.length;
};

/**
 * \u53bb\u6389\u7a7a\u683c
 */
String.prototype.trim = function(){
    var chs = this.toCharArray();
    
    var st = 0;
    var off = chs.length;
    
    for (var i = 0; i < chs.length; i++) {
        var c = chs[i];
        if (c == ' ') {
            st++;
        }
        else {
            break;
        }
    }
    
    if (st == this.length) {
        return "";
    }
    
    for (var i = chs.length; i > 0; i--) {
        var c = chs[i - 1];
        if (c == ' ') {
            off--;
        }
        else {
            break;
        }
    }
    
    return this.substring(st, off);
};

/**
 * \u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u6570\u7ec4
 */
String.prototype.toCharArray = function(){
    var array = [];
    
    for (var i = 0; i < this.length; i++) {
        array[i] = this.charAt(i);
    }
    
    return array;
};
/**
 * ArrayList like java.util.ArrayList
 */
function ArrayList(){
    this.instance = new Array();
}

ArrayList.prototype.size = function(){
    return this.instance.length;
}
/**
 * \u5728\u672b\u5c3e\u8ffd\u52a0\u4e00\u4e2a
 */
ArrayList.prototype.add = function(o){
    this.instance[this.instance.length] = o;
}
/**
 * \u5f53list\u4e2d\u4e0d\u5b58\u5728\u8be5\u5bf9\u8c61\u65f6\u624d\u6dfb\u52a0
 */
ArrayList.prototype.addSingle = function(o){
    if (!this.contains(o)) {
        this.instance[this.instance.length] = o;
    }
}
/**
 * \u5728\u6307\u5b9a\u4f4d\u7f6e\u589e\u52a0\u5143\u7d20
 * @param posation \u4f4d\u7f6e\uff0c \u4ece0\u5f00\u59cb
 * @param o \u8981\u589e\u52a0\u7684\u5143\u7d20
 */
ArrayList.prototype.addAt = function(position, o){
    if (position >= this.size() || position < 0 || this.isEmpty()) {
        this.add(o);
        return;
    }
    
    this.instance.splice(position, 0, o);
}

/**
 * Appends all of the elements in the specified Collection to the end of
 * this list, in the order that they are returned by the
 * specified Collection's Iterator.  The behavior of this operation is
 * undefined if the specified Collection is modified while the operation
 * is in progress.  (This implies that the behavior of this call is
 * undefined if the specified Collection is this list, and this
 * list is nonempty.)
 */
ArrayList.prototype.addAll = function(array){
    if (!array || array.length < 1) {
        return;
    }
    
    this.instance = this.instance.concat(array);
}

/**
 * \u8ffd\u52a0\u4e00\u4e2aList\u5728\u961f\u5c3e
 */
ArrayList.prototype.addList = function(list){
    if (list && list instanceof ArrayList && !list.isEmpty()) {
        this.instance = this.instance.concat(list.instance);
    }
}

/**
 * @return the element at the specified position in this list.
 */
ArrayList.prototype.get = function(index){
    if (this.isEmpty()) {
        return null;
    }
    
    if (index > this.size()) {
        return null;
    }
    
    return this.instance[index];
}

/**
 * \u6700\u540e\u4e00\u4e2a
 */
ArrayList.prototype.getLast = function(){
    if (this.size() < 1) {
        return null;
    }
    
    return this.instance[this.size() - 1];
}

/**
 * Replace the element at the specified position in the list with the specified element
 * @param index int index of element to replace
 * @param obj Object element to be stored at the specified posotion
 * @return Object the element previously at the specified posotion
 * @throws IndexOutOfBoundException if index out of range
 */
ArrayList.prototype.set = function(index, obj){
    if (index >= this.size()) {
        throw "IndexOutOfBoundException : Index " + index + ", Size " + this.size();
    }
    
    var oldValue = this.instance[index];
    this.instance[index] = obj;
    
    return oldValue;
}

/**
 * Removes the element at the specified position in this list.
 * Shifts any subsequent elements to the left (subtracts one from their
 * indices).
 */
ArrayList.prototype.removeElementAt = function(index){
    if (index > this.size() || index < 0) {
        return;
    }
    
    this.instance.splice(index, 1);
}
/**
 * Removes the element in this list.
 */
ArrayList.prototype.remove = function(o){
    var index = this.indexOf(o);
    this.removeElementAt(index);
}
/**
 * @return <tt>true</tt> if this list contains the specified element.
 */
ArrayList.prototype.contains = function(o, comparatorProperies){
    return this.indexOf(o, comparatorProperies) > -1;
}
/**
 * Searches for the first occurence of the given argument, testing
 * for equality using the <tt>==</tt> method.
 */
ArrayList.prototype.indexOf = function(o, comparatorProperies){
    for (var i = 0; i < this.size(); i++) {
        var s = this.instance[i];
        if (s == o) {
            return i;
        }
        else 
            if (comparatorProperies != null && s != null && o != null && s[comparatorProperies] == o[comparatorProperies]) {
                return i;
            }
    }
    
    return -1;
}
/**
 * Returns the index of the last occurrence of the specified object in this list.
 * @return the index of the last occurrence of the specified object in this list;
 *         returns -1 if the object is not found.
 */
ArrayList.prototype.lastIndexOf = function(o, comparatorProperies){
    for (var i = this.size() - 1; i >= 0; i--) {
        var s = this.instance[i];
        if (s == o) {
            return i;
        }
        else 
            if (comparatorProperies != null && s != null && o != null && s[comparatorProperies] == o[comparatorProperies]) {
                return i;
            }
    }
    
    return -1;
}

/**
 * Returns a view of the portion of this list between
 * fromIndex, inclusive, and toIndex, exclusive.
 * @return a view of the specified range within this list.
 */
ArrayList.prototype.subList = function(fromIndex, toIndex){
    if (fromIndex < 0) {
        fromIndex = 0;
    }
    
    if (toIndex > this.size()) {
        toIndex = this.size();
    }
    
    var tempArray = this.instance.slice(fromIndex, toIndex);
    
    var temp = new ArrayList();
    temp.addAll(tempArray);
    
    return temp;
}
/**
 * Returns an array containing all of the elements in this list in the correct order;
 *
 * @return Array
 */
ArrayList.prototype.toArray = function(){
    return this.instance;
}

/**
 * Tests if this list has no elements.
 *
 * @return <tt>true</tt> if this list has no elements;
 */
ArrayList.prototype.isEmpty = function(){
    return this.size() == 0;
}
/**
 * Removes all of the elements from this list.  The list will
 * be empty after this call returns.
 */
ArrayList.prototype.clear = function(){
    this.instance = new Array();
}
/** 
 * show all elements
 */
ArrayList.prototype.toString = function(sep){
    sep = sep || ", ";
    return this.instance.join(sep);
}
/**
 *
 */
function Properties(jsProps){
    this.instanceKeys = new ArrayList();
    this.instance = {};
    
    if (jsProps) {
        this.instance = jsProps;
        for (var i in jsProps) {
            this.instanceKeys.add(i);
        }
    }
}

/**
 * Returns the number of keys in this Properties.
 * @return int
 */
Properties.prototype.size = function(){
    return this.instanceKeys.size();
}

/**
 * Returns the value to which the specified key is mapped in this Properties.
 * @return value
 */
Properties.prototype.get = function(key, defaultValue){
    if (key == null) {
        return null;
    }
    
    var returnValue = this.instance[key];
    
    if (returnValue == null && defaultValue != null) {
        return defaultValue;
    }
    
    return returnValue;
}
/**
 * Removes the key (and its corresponding value) from this
 * Properties. This method does nothing if the key is not in the Properties.
 */
Properties.prototype.remove = function(key){
    if (key == null) {
        return null;
    }
    this.instanceKeys.remove(key);
    delete this.instance[key]
}
/**
 * Maps the specified <code>key</code> to the specified
 * <code>value</code> in this Properties. Neither the key nor the
 * value can be <code>null</code>. <p>
 *
 * The value can be retrieved by calling the <code>get</code> method
 * with a key that is equal to the original key.
 */
Properties.prototype.put = function(key, value){
    if (key == null) {
        return null;
    }
    
    if (this.instance[key] == null) {
        this.instanceKeys.add(key);
    }
    
    this.instance[key] = value;
}

/**
 * \u76f4\u63a5\u8ffd\u52a0\uff0c\u4e0d\u8003\u8651\u91cd\u590dkey
 */
Properties.prototype.putRef = function(key, value){
    if (key == null) {
        return null;
    }
    
    this.instanceKeys.add(key);
    this.instance[key] = value;
}

/**
 * Returns the value to which the specified value is mapped in this Properties.
 * e.g:
 * userinfo.getMultilevel("department.name")  the same sa :  userinfo.get("department").get("name")
 * @return string
 */
Properties.prototype.getMultilevel = function(key, defaultValue){
    if (key == null) {
        return null;
    }
    
    var _keys = key.split(".");
    
    function getObject(obj, keys, i){
        try {
            if (obj == null || (typeof obj != "object")) {
                return null;
            }
            
            var obj1 = obj.get(keys[i]);
            
            if (i < keys.length - 1) {
                obj1 = getObject(obj1, keys, i + 1);
            }
            
            return obj1;
        } 
        catch (e) {
        }
        
        return null;
    }
    
    var returnValue = getObject(this, _keys, 0);
    
    return returnValue == null ? defaultValue : returnValue;
}

/**
 * Tests if the specified object is a key in this Properties.
 * @return boolean
 */
Properties.prototype.containsKey = function(key){
    if (key == null) {
        return false;
    }
    
    return this.instance[key] != null;
}

/**
 * Returns an ArrayList of the keys in this Properties.
 * @return ArrayList
 */
Properties.prototype.keys = function(){
    return this.instanceKeys;
}

/**
 * Returns an ArrayList of the values in this Properties.
 * @return ArrayList
 */
Properties.prototype.values = function(){
    var vs = new ArrayList();
    for (var i = 0; i < this.instanceKeys.size(); i++) {
        var key = this.instanceKeys.get(i);
        
        if (key) {
            var value = this.instance[key];
            vs.add(value);
        }
    }
    
    return vs;
}

/**
 * Tests if this Properties maps no keys to values.
 * @return boolean
 */
Properties.prototype.isEmpty = function(){
    return this.instanceKeys.isEmpty();
}

/**
 * Clears this Properties so that it contains no keys.
 */
Properties.prototype.clear = function(){
    this.instanceKeys.clear();
    this.instance = {};
}
/**
 * exchange entry1(key1-value1) with entry2(key2-value2)
 */
Properties.prototype.swap = function(key1, key2){
    if (!key1 || !key2 || key1 == key2) {
        return;
    }
    
    var index1 = -1;
    var index2 = -1;
    
    for (var i = 0; i < this.instanceKeys.instance.length; i++) {
        if (this.instanceKeys.instance[i] == key1) {
            index1 = i;
        }
        else 
            if (this.instanceKeys.instance[i] == key2) {
                index2 = i;
            }
    }
    
    this.instanceKeys.instance[index1] = key2;
    this.instanceKeys.instance[index2] = key1;
}

Properties.prototype.entrySet = function(){
    var result = [];
    
    for (var i = 0; i < this.instanceKeys.size(); i++) {
        var key = this.instanceKeys.get(i);
        var value = this.instance[key];
        
        if (!key) {
            continue;
        }
        
        var o = new Object();
        o.key = key;
        o.value = value;
        
        result[result.length] = o;
    }
    
    return result;
}

/**
 *
 */
Properties.prototype.toString = function(){
    var str = "";
    
    for (var i = 0; i < this.instanceKeys.size(); i++) {
        var key = this.instanceKeys.get(i);
        str += key + "=" + this.instance[key] + "\n";
    }
    
    return str;
}
/**
 * \u8f6c\u6362\u6210key1=value1;key2=value2;\u7684\u5f62\u5f0f
 * token1 -- \u5bf9\u5e94\u7b2c\u4e00\u5c42\u5206\u9694\u7b26  \u5982\u4e0a\u5f0f\u7684";"
 * token2 -- \u5bf9\u5e94\u7b2c\u4e8c\u5c42\u5206\u9694\u7b26  \u5982\u4e0a\u5f0f\u7684"="
 */
Properties.prototype.toStringTokenizer = function(token1, token2){
    token1 = token1 == null ? ";" : token1;
    token2 = token2 == null ? "=" : token2;
    var str = "";
    
    for (var i = 0; i < this.instanceKeys.size(); i++) {
        var key = this.instanceKeys.get(i);
        var value = this.instance[key];
        
        if (!key) {
            continue;
        }
        
        if (i > 0) {
            str += token1;
        }
        str += key + token2 + value;
    }
    
    return str;
}

Properties.prototype.toQueryString = function(){
    if (this.size() < 1) {
        return "";
    }
    
    var str = "";
    for (var i = 0; i < this.instanceKeys.size(); i++) {
        var key = this.instanceKeys.get(i);
        var value = this.instance[key];
        
        if (!key) {
            continue;
        }
        
        if (i > 0) {
            str += "&";
        }
        
        if (typeof value == "object") {
        
        }
        else {
            str += key + "=" + encodeURIat(value);
        }
    }
    
    return str;
}
/*
 * \u4f7f\u7528\u672cform\u9a8c\u8bc1\u7ec4\u4ef6\uff0c\u8981\u6c42input\u5b58\u5728validate\u5c5e\u6027\uff0c\u5e76\u4e14validate\u5c5e\u6027\u7684\u503c\u8981\u6c42\u662f\u4e00\u4e2a\u5408\u6cd5\u7684json\u503c\u3002 \u4f8b\u5982\uff1a<input
 * name="username" type="text"
 * validate="{type:'string',maxLength:20,minLength:6}"/> \u4ee5\u4e0b\u6240\u8bf4\u7684\u5c5e\u6027\u5168\u90e8\u90fd\u662fjson\u5b57\u7b26\u4e32\u4e2d\u7684\u5c5e\u6027
 * \u4e3b\u5c5e\u6027\u662f\u9a8c\u8bc1\u67d0\u4e00\u4e2a\u7c7b\u578b\u5fc5\u987b\u5b58\u5728\u7684\u5c5e\u6027\uff0c\u526f\u5c5e\u6027\u8868\u793a\u4e0d\u662f\u5fc5\u987b\u5b58\u5728\u7684\u5c5e\u6027\u3002
 * 
 * \u76ee\u524d\u4e00\u5171\u53ef\u4ee5\u9a8c\u8bc113\u79cd\u7c7b\u578b\uff0c\u518d\u52a0\u4e0a\u6700\u540e\u4e00\u79cd\u7ed9\u5b9a\u81ea\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u7c7b\u578b\u3002
 * name\u5c5e\u6027\u6216displayName\u5728\u663e\u793a\u9519\u8bef\u4fe1\u606f\u7684\u65f6\u5019\u8981\u7528\u5230\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u7ed9\u51fa\uff08\u6b64\u65f6\u4f5c\u4e3a\u8f93\u5165\u6846\u7684name\u5c5e\u6027\u5fc5\u987b\u5b58\u5728\uff09
 * 
 * 1\u3001\u975e\u7a7a \u4e3b\u5c5e\u6027\uff1anotNull=true\u6216nullable=true
 * 
 * 2\u3001\u5305\u542b\u7a7a\u683c\u7684\u975e\u7a7a \u4e3b\u5c5e\u6027\uff1anotNullWithoutTrim=true
 * 
 * 3\u3001\u6570\u5b57 \u4e3b\u5c5e\u6027\uff1aisNumber=true\u6216type=number\u6216type=1\u6216type=2
 * \u526f\u5c5e\u6027\uff1amax\u6216maxValue\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u7ed9\u51fa\uff0c\u53ea\u4f7f\u7528\u524d\u8005\uff09 min\u6216minValue\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u7ed9\u51fa\uff0c\u53ea\u4f7f\u7528\u524d\u8005\uff09
 * integerDigits\u6574\u6570\u4f4d\u6570\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff09 decimalDigits\u6216dotNumber\u5c0f\u6570\u4f4d\u6570\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u7ed9\u51fa\uff0c\u53ea\u4f7f\u7528\u524d\u8005\uff09
 * 
 * 4\u3001\u6574\u5f62\u6570\u5b57 \u4e3b\u5c5e\u6027\uff1aisInteger=true \u526f\u5c5e\u6027\uff1amax\u6216maxValue\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u7ed9\u51fa\uff0c\u53ea\u4f7f\u7528\u524d\u8005\uff09
 * min\u6216minValue\uff08\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u7ed9\u51fa\uff0c\u53ea\u4f7f\u7528\u524d\u8005\uff09
 * 
 * 5\u3001\u7535\u5b50\u90ae\u4ef6 \u4e3b\u5c5e\u6027\uff1aisEmail=true\u6216type=email
 * 
 * 6\u3001\u5b57\u7b26\u4e32 \u4e3b\u5c5e\u6027\uff1aisWord=true\u6216type=string\u6216type=8\u6216type=9
 * \u526f\u5c5e\u6027\uff1acharacter=""\uff0c\u5c06\u6240\u6709\u4f60\u8ba4\u4e3a\u662f\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u7b26\u653e\u8fdb\u53bb\uff0c\u4f8b\u5982character="!@#$%^&*()"\u3002\uff08\u5982\u679c\u7279\u6b8a\u5b57\u7b26\u4e2d\u5b58\u5728\u4e2d\u5212\u7ebf-\u7684\u8bdd\uff0c\u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u4e2a\uff09
 * 
 * 7\u3001\u4e0d\u5141\u8bb8\u9ed8\u8ba4\u503c \u4e3b\u5c5e\u6027\uff1aisDeaultValue=true\u3001deaultValue=\u4e00\u4e2a\u7ed9\u5b9a\u7684\u503c
 * 
 * 8\u3001\u56fa\u5b9a\u7535\u8bdd\u53f7\u7801 \u4e3b\u5c5e\u6027\uff1atype=telephone
 * 
 * 9\u3001\u624b\u673a\u53f7\u7801 \u4e3b\u5c5e\u6027\uff1atype=mobilePhone
 * 
 * 10\u3001\u65e5\u671f\u7c7b\u578b\uff08\u8981\u6c42\u683c\u5f0f\uff1ayyyy-MM-dd\uff09 \u4e3b\u5c5e\u6027\uff1atype=3
 * 
 * 11\u3001\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\uff08\u8981\u6c42\u5404\u5e02\uff1ayyyy-MM-dd HH:mm:ss\uff09 \u4e3b\u5c5e\u6027\uff1atype=4
 * 
 * 12\u3001\u6700\u5927\u957f\u5ea6 \u4e3b\u5c5e\u6027\uff1amaxLength=\u4e00\u4e2a\u6570\u5b57
 * 
 * 13\u3001\u6700\u5c0f\u957f\u5ea6 \u4e3b\u5c5e\u6027\uff1aminLength=\u4e00\u4e2a\u6570\u5b57
 * 
 * 14\u3001\u81ea\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f \u4e3b\u5c5e\u6027\uff1aregExp=\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982/[\d+]/
 * 
 * 15\u3001\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570
 * \u4e3b\u5c5e\u6027\uff1afunc=\u4e00\u4e2a\u81ea\u5df1\u5b9a\u4e49\u7684\u51fd\u6570\uff08\u5fc5\u987b\u662f\u5168\u5c40\u51fd\u6570\uff0c\u53ef\u4ee5\u662f\u533f\u540d\u51fd\u6570\uff09\uff08\u8be5\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u8fd4\u56de\u503c\uff08js\u4e2d\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u8bdd\u9ed8\u8ba4\u4e3anull\uff09\uff0c\u8fd4\u56denull\u6216false\u8868\u793a\u6821\u9a8c\u672a\u901a\u8fc7\uff09
 * \u6821\u9a8c\u7684\u65f6\u5019\u4f1a\u5c06\u5f53\u524dinput\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002
 * 
 * 16\u3001\u81ea\u5b9a\u4e49\u9519\u8bef\u63d0\u793a \u4e3b\u5c5e\u6027\uff1aerrorMsg=\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982:\u8bf7\u8f93\u5165\u6570\u5b57\uff01
 * 
 * 17\u3001js\u8bbe\u7f6e\u6821\u9a8c\u89c4\u5219
 */
(function() {
  // fieldType\u53ef\u80fd\u7684\u503c
  var fieldTypeValue = {
    "string" : "string"// \u662f\u5426\u4e3a\u4e00\u822c\u5b57\u7b26\u4e32
    ,
    "number" : "number"// \u662f\u5426\u662f\u6570\u5b57
    ,
    "email" : "email"// \u662f\u5426\u662f\u7535\u5b50\u90ae\u4ef6
    ,
    "telephone" : "telephone"// \u56fa\u5b9a\u7535\u8bdd
    ,
    "mobilePhone" : "mobilePhone"// \u624b\u673a
    ,
    "0" : "0"// \u5b57\u7b26\u4e32\uff08\u540cstring\uff09\uff0c\u8868\u5355\u6a21\u5757\u4e13\u7528
    ,
    "1" : "1"// \u6574\u6570\u540cnumber\uff0c\u8868\u5355\u6a21\u5757\u8f6c\u7528\uff0c\u4f46\u662f\u73b0\u5728\u5df2\u4e0d\u518d\u7528\uff0c\u7edf\u4e00\u75282\uff0c\u8868\u793a\u6570\u5b57
    ,
    "2" : "2"// \u5c0f\u6570\u540cnumber\uff0c\u8868\u5355\u6a21\u5757\u4e13\u7528
    ,
    "3" : "3"// \u65e5\u671f\u7c7b\u578b \u7edf\u4e00yy-MM-dd\u683c\u5f0f \u8868\u5355\u6a21\u5757\u4e13\u7528
    ,
    "4" : "4"// \u65e5\u671f\u65f6\u95f4\u7c7b\u578b \u7edf\u4e00yy-MM-dd HH:mm:ss \u8868\u5355\u6a21\u5757\u4e13\u7528
    ,
    "5" : "5"// \u65e5\u671f\u65f6\u95f4\u7c7b\u578b \u7edf\u4e00yy-MM-dd HH:mm \u8868\u5355\u6a21\u5757\u4e13\u7528
    ,
    "8" : "0"// \u56fe\u7247\u7c7b\u578b\u540cstring
    ,
    "9" : "0"// \u9644\u4ef6\u7c7b\u578b\u540cstring
    ,
    "6" : "6"
  }
  var fieldType = "type";// \u8f93\u5165\u503c\u7684\u7c7b\u578b
  var fieldName = "name";// \u6807\u7b7e\u540d\u5b57
  var maxValue = "maxValue";// \u8f93\u5165\u6570\u5b57\u7684\u6700\u5927\u503c
  var minValue = "minValue";// \u8f93\u5165\u6570\u5b57\u7684\u6700\u5c0f\u503c
  var minLength = "minLength";// \u6700\u5c0f\u957f\u5ea6
  var maxLength = "maxLength";// \u6700\u5927\u957f\u5ea6
  var china3char = "china3char";//\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u53d6\u503c\u4e2d\u662f\u5426\u5c06\u4e2d\u6587\u8ba4\u4e3a\u662f3\u4e2a\u5b57\u7b26\u3002
  var notNull = "notNull";// \u662f\u5426\u53ef\u4ee5\u4e3a\u7a7atrue\u8868\u793a\u4e0d\u53ef\u4ee5\u4e3a\u7a7a\uff0cfalse\u6216\u672a\u5b9a\u4e49\u8868\u793a\u53ef\u4ee5\u4e3a\u7a7a
  var dotNumber = "dotNumber";// \u5c0f\u6570\u70b9\u540e\u5141\u8bb8\u7684\u4f4d\u6570
  var fieldDiaplayName = "displayName";// \u6807\u7b7e\u540d\u5b57\uff0c\u8868\u5355\u6a21\u5757\u4e13\u7528\uff0c\u4e0d\u662f\u540cfieldName,\u5355\u5143\u683c\u7684\u663e\u793a\u540d\u79f0
  var fieldLen = "fieldLen";// \u6700\u5927\u53ef\u8f93\u5165\u957f\u5ea6\uff0c\u8868\u5355\u6a21\u5757\u4e13\u7528\uff0c\u540cmaxLength
  var nullable = "nullable";// \u662f\u5426\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u8868\u5355\u6a21\u5757\u4e13\u7528\uff0c"0"\u53ef\u4ee5\u4e3a\u7a7a,"1"\u4e0d\u53ef\u4ee5\u4e3a\u7a7a
  var isNumber = "isNumber";// \u662f\u5426\u662f\u6570\u5b57
  var integerDigits = "integerDigits";// \u6574\u6570\u6570\u4f4d\uff0c\u5fc5\u987b\u4e0eisNumber\u4e00\u8d77\u4f7f\u7528\uff0c\u5355\u72ec\u4f7f\u7528\u65e0\u610f\u4e49
  var decimalDigits = "decimalDigits";// \u5c0f\u6570\u4f4d\u6570\uff0c\u5fc5\u987b\u4e0eisNumber\u4e00\u8d77\u4f7f\u7528\uff0c\u5355\u72ec\u4f7f\u7528\u65e0\u610f\u4e49
  var isEmail = "isEmail";// \u662f\u5426\u662f\u7535\u5b50\u90ae\u4ef6
  var notNullWithoutTrim = "notNullWithoutTrim";// \u9a8c\u8bc1\u662f\u5426\u4e3a\u7a7a\uff0c\u5141\u8bb8\u7a7a\u683c
  var isInteger = "isInteger";// \u662f\u5426\u4e3a\u6574\u6570
  var max = "max";// \u6700\u5927\u503c\uff0c\u4e0eisNumber\u6216isInteger\u6216type=number\u4e00\u8d77\u4f7f\u7528
  var min = "min";// \u6700\u5c0f\u503c\uff0c\u4e0eisNumber\u6216isInteger\u6216type=number\u4e00\u8d77\u4f7f\u7528
  var maxEqual = "maxEqual";//\u662f\u5426\u5141\u8bb8\u7b49\u4e8e\u6700\u5927\u503c
  var minEqual = "minEqual";//\u662f\u5426\u5141\u8bb8\u7b49\u4e8e\u6700\u5c0f\u503c
  var isWord = "isWord";// \u662f\u5426\u4e3a\u6b63\u5e38\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u5141\u8bb8\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\uff1a/
  var character = "avoidChar";// \u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u4e0eisWord\u5171\u540c\u4f7f\u7528\uff0c\u6b64\u65f6isWord\u5fc5\u987b\u4e0d\u80fd\u4e3a\u7a7a\u3002
  var isDeaultValue = "isDeaultValue";// \u662f\u5426\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u662f\u9ed8\u8ba4\u503c\uff0c\u63d0\u793a\u4e3a\u7a7a\uff0c\u4e0edeaultValue\u5171\u540c\u4f7f\u7528\uff0c\u4e8c\u8005\u5fc5\u987b\u90fd\u4e0d\u80fd\u4e3a\u7a7a
  var deaultValue = "deaultValue";// \u9ed8\u8ba4\u503c\uff0c\u4e0eisDeaultValue\u5171\u540c\u4f7f\u7528\uff0c\u4e8c\u8005\u5fc5\u987b\u90fd\u4e0d\u80fd\u4e3a\u7a7a
  var regExp = "regExp";// \u81ea\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f
  var errorMsg = "errorMsg";// \u81ea\u5b9a\u4e49\u9519\u8bef\u663e\u793a
  var func = "func";// \u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570
  
  $.fn.resetValidate = function(options) {
	  var errorClassName = 'error-form';
	  this.find('.'+errorClassName).removeClass(errorClassName).each(function(i,e) {
	      	var prt = $(e);
	      	var es = prt.data("errorIcon");
	      	if(es){
	            prt.removeClass('error-form').next().remove();
	            prt.removeAttr("title");
	            prt.removeData("errorIcon");
              prt.find('input').unbind('propertychange');
	              prt.css({
	                'width' : ($(this).width() + 20) + 'px'
	              });

            }     	
	      });
  };  
  /*
   * \u6821\u9a8c\u4e00\u4e2aform\u6240\u6709\u7684\u8f93\u5165\u6846\uff0c\u6821\u9a8c\u89c4\u5219\u7531\u8f93\u5165\u6846\u7684validate\u5c5e\u6027\u6307\u5b9a
   */
function checkValue(obj,options,errorArray){
	var resultTemp = obj;
    var resultTempPar = resultTemp.parent();
    curCheckObj = checkInput(resultTemp, options.checkNull);
    if (curCheckObj.errorArray) {
    	var len = curCheckObj.errorArray.length;
        if (len > 0) {
            showError(resultTempPar, curCheckObj,options,resultTemp);
        	if (!resultTempPar.hasClass('error-form')) {
        		if(resultTemp.hasClass("comp")){//\u5982\u679c\u662f\u65e5\u671f\u7c7b\u578b\uff0c\u589e\u52a0\u83b7\u53d6\u7126\u70b9\u9a8c\u8bc1  byxiexp
          	  		resultTemp.focus(function(){
			        checkval($(this),options);			           	
        		})
          	}
//	        resultTemp.keyup(function() {
//	        	checkval($(this),options); 	
//	        });
			resultTemp.bind("propertychange", function(e) {
				if(e.originalEvent.propertyName=="value"){
					checkval($(this),options);
				}
			}).bind("input",function(){
				checkval($(this),options);
			});
          }
          errorArray.push(curCheckObj.errorArray.join("\r\n"));
        }
	}
}
  function MxtCheckForm(form, options) {
    // \u5224\u65ad\u4f20\u8fdb\u6765\u7684\u662fform\u6807\u7b7e\u7684Id\u8fd8\u662f\u4ee5\u4e00\u4e2a\u8868\u793aform\u6807\u7b7e\u7684Dom\u5bf9\u8c61
    if (typeof form === 'string') {
      form = $("#" + form);
    } else {
      form = $(form);
    }
    // \u5f97\u5230\u8be5form\u4e0b\u6240\u6709\u7684\u53ef\u7528\u3001\u975e\u9690\u85cf\u7684\u8868\u5355\u5143\u7d20
    var errorArray = [], curCheckObj = null;
    var result = [];
	var focusObj = null;//\u7b2c\u4e00\u4e2a\u9519\u8bef\u5bf9\u8c61\u81ea\u52a8\u805a\u7126
	if(options && options.validateHidden){
		$(".validate", form).add(form).each(function() {
          if (!this.disabled && $(this).attr("validate"))
            result.push($(this));
        });
	} else {
	    $(".validate", form).add(form).each(function() {
	      if (!this.disabled && $(this).is(':visible') && $(this).attr("validate"))
	        result.push($(this));
	    });
	}
    
    for ( var i = 0; i < result.length; i++) {
      // \u83b7\u53d6\u6240\u6709\u7684\u5c5e\u6027\u503c
	  if(i == 0){focusObj = result[0]}//\u7b2c\u4e00\u4e2a\u9519\u8bef\u5bf9\u8c61\u81ea\u52a8\u805a\u7126
      checkValue(result[i],options,errorArray);
      result[i] = null;
    }
    // \u6e05\u7a7aform\u53d8\u91cf
    form = null;
	if(focusObj!=null){
		//\u7b2c\u4e00\u4e2a\u9519\u8bef\u5bf9\u8c61\u81ea\u52a8\u805a\u7126
		//focusObj.focus();//\u4f1a\u5bfc\u81f4\u8868\u5355\u4e2d\u7684\u53c2\u4e0e\u8ba1\u7b97\u7684\u5b57\u6bb5\u9009\u62e9\u540e\u5149\u6807\u4e0d\u80fd\u79bb\u5f00\u5355\u5143\u683c \u6bd4\u5982\u65e5\u671f\u9009\u62e9\u63a7\u4ef6
		var tempId = focusObj.attr("id");
		if(tempId!=null){
			if(!/^field\d{0,5}/.test(tempId)){
				focusObj.focus();
			}
		}else{
			focusObj.focus();
		}
	}
    // \u663e\u793a\u9519\u8bef
    if (errorArray.length > 0) {
	  var errorAlert = options.errorAlert;
	  if(errorAlert){
	      if(top.$("#checkformError").length<=0){
	          $.alert({id:"checkformError",msg:errorArray.join("<br/>")});
	      }
	  }
      return false;
    } else {
      return true;
    }
  }
  /**
   * \u6821\u9a8c\u5355\u4e2a\u8f93\u5165\u6846
   */
  function MxtCheckInput(input) {
  	 var options = {
      errorIcon : true
    };
    if (input == null) {
      return true;
    }
    var errorArray = [];
    checkValue(input,options,errorArray);  
    var result = true;
    if (curCheckObj.errorArray && curCheckObj.errorArray.length > 0) {
      result = false;
    }
    input = null;
    return result;
  }
  /*
   * \u4f7f\u7528js\u6dfb\u52a0\u6821\u9a8c\u4fe1\u606f
   */
  function MxtCheckMsg(msg, context) {
    if (msg == null)
      return;
    context = context || document.body;
    // \u5224\u65ad\u4f20\u8fdb\u6765\u7684\u662fform\u6807\u7b7e\u7684Id\u8fd8\u662f\u4ee5\u4e00\u4e2aDom\u5bf9\u8c61
    if (typeof context === 'string') {
      context = $("#" + context);
    } else {
      context = $(context);
    }
    for ( var elemSelector in msg) {
      addCheckMsg($(elemSelector, context), msg[elemSelector]);
    }
    context = null;
  }
  window.MxtCheckForm = MxtCheckForm;
  window.MxtCheckInput = MxtCheckInput;
  window.MxtCheckMsg = MxtCheckMsg;
  window.RemoveCheckMsg = checkval;
  function checkInput(input, checkIsNull) {
    if (input == null) {
      return {};
    }
    var checkObj = getCheckObj(input);
    if (checkObj != null) {
      if (checkObj.errorArray == null) {
        checkObj.errorArray = [];
      }
      checkObj.checkNull = checkIsNull;
      if(checkIsNull){
	      checkNotNull(checkObj);
	      if(checkObj.errorArray.length>0){
            input = null;
            return checkObj;
          }
	      checkNotNullWithourTrim(checkObj);
	      if(checkObj.errorArray.length>0){
	      	input = null;
	      	return checkObj;
	      }
      }
      checkIsNumber(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsEmail(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsWord(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsDefaultValue(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsTelephone(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsMobilePhone(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsDate(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsDateTime(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsDateTimes(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsShorterThanMax(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkIsLongerThanMin(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkCustomRegExp(checkObj);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
      checkCustomFunc(checkObj, input);
      if(checkObj.errorArray.length>0){
        input = null;
        return checkObj;
      }
    }
    input = null;
    return checkObj;
  }
  function checkval(obj,options){
  		if(options==null){
	  		var settings = {
		      errorIcon : true,
			  errorAlert:false,
			  errorBg:false,
			  validateHidden:false,
			  checkNull:true
		    };
		    options = $.extend(settings, options);
  		}
    	var temp = checkInput(obj, true);
	      var prt = obj.parent();
	      if (!temp.errorArray || (temp.errorArray && temp.errorArray.length === 0)) {
	        prt.removeClass('error-form');
	        prt.removeAttr("title");
	        if (prt.data("errorIcon")) {
	          prt.removeData("errorIcon");
	          prt.next().remove();
	          if (options.errorIcon) {
	            prt.css({
	              'width' : (prt.width() + 20) + 'px'
	            });
	            if(obj.hasClass("comp")) obj.width("100%");//\u5982\u679c\u662f\u65e5\u671f\u7c7b\u578b\uff0cinput\u52a020\u50cf\u7d20\u7684\u5bbd\u5ea6 by xiexp
	          }
	        }
			if (prt.data("errorBg")) {
				prt.removeData("errorBg");
				prt.css('background','#fff');
				if(obj && !(temp[notNull] || temp[nullable]) ){$(obj).css('background','#fff');}
			}
	      } 
	      else {
	        showError(prt, temp,options,obj);
	        //if(obj.hasClass("comp")) obj.width(obj.width()-20+"px");//\u5982\u679c\u662f\u65e5\u671f\u7c7b\u578b\uff0cinput\u52a020\u50cf\u7d20\u7684\u5bbd\u5ea6 by xiexp
	      }
    }
    function showError(par, obj,options,objDom) {
			if(options){
		    	var _w = par.width();
				if(options.errorIcon){
			        par.addClass('error-form').css({
			          'float' : 'left'
			        }).attr("title", obj.errorArray.join(""));
			        var es = par.data("errorIcon");
			        if (!es) {
			            es = $("<span class='error-title'></span>");
			            par.data("errorIcon", es);
			            par.after(es);
			            par.css({
			              'width' : (_w - 20) + 'px'
			            });
			        }
					es.attr("title", obj.errorArray.join(""));
				}
				if(options.errorBg){
			        var bg = par.data("errorBg");
			        if (!bg) {
						par.css('background','#FCDD8B');
						if(objDom)$(objDom).css('background','#FCDD8B');
			            par.data("errorBg", true);
			        }
				}
			}else{
	          //par.css({
	          //  'width' : _w + 'px'
	          //});
			}
      }    
  /*
   * \u4fee\u6539\u5355\u4e2a\u8f93\u5165\u6846\u7684\u6821\u9a8c\u4fe1\u606f
   */
  function addCheckMsg(elem, msg) {
    if (elem == null) {
      return;
    }
    if (typeof msg == 'string') {
        try {
            msg = eval("({" + msg + "})");
        } catch (e) {
            return;
        }
    }
    var checkObj = getCheckObj(elem);
    $.extend(checkObj, msg);
    elem = null;
  }
  /*
   * \u600e\u4e48\u83b7\u53d6form\u4e0a\u9762\u4e00\u4e2ainput\u7684\u9a8c\u8bc1\u5bf9\u8c61\uff1f\u6211\u671f\u5f85\u8be5input\u7684validate\u5c5e\u6027\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684json\u5b57\u7b26\u4e32\uff0c\u5426\u5219\u7684\u8bdd\u5c31\u5f97\u5230\u4e00\u4e2anull\u5bf9\u8c61\u3002
   */
  function getCheckObj(input) {
    if (input == null) {
      return {};
    }
    if (input.data("checkObj")) {
      var checkObj = input.data("checkObj");
      checkObj.errorArray = null;
      checkObj.value = input.val();
      return input.data("checkObj");
    }
    var checkObj = null, validate = null;
    input = $(input);
    validate = input.attr("validate");
    if (validate == null || $.trim(validate) == "") {
      return {};
    } else {
      try {
        checkObj = eval("({" + validate + "})");
      } catch (e) {
        checkObj = {};
        var errorMessage = input.attr("name") + $.i18n('validate.notJson.js');
        addErrorMessage(checkObj, errorMessage, true);
        input = null;
        return checkObj;
      }
    }
    if (checkObj.name == null) {
      var tempName = checkObj[fieldName] || checkObj[fieldDiaplayName]
          || input.attr("name");
      if (tempName) {
        checkObj.name = tempName;
      } else {
        var errorMessage = $.i18n('validate.notName.js');
        addErrorMessage(checkObj, errorMessage, true);
        input = null;
        return checkObj;
      }
    }
    checkObj.value = input.val();
    input.data("checkObj", checkObj);
    input = null;
    return checkObj;
  }
  /*
   * \u600e\u4e48\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff1f\u540c\u65f6\u5224\u65ad\u5b83\u7684\u989d\u5916\u5c5e\u6027\u5462\uff1f \u5148\u5224\u65adnotNull\u3001nullable\u5c5e\u6027\u662f\u4e0d\u662f\u4e3a\u771f\uff0c\u4e3a\u771f\u7684\u8bdd\u518d\u6765\u5224\u65ad
   * \u518d\u5224\u65admaxLength\u5c5e\u6027\u662f\u4e0d\u662f\u4e3a\u7a7a\uff0c\u4e0d\u4e3a\u7a7a\u7684\u8bdd\u518d\u6765\u5224\u65ad\u662f\u4e0d\u662f\u5927\u4e8e\u6700\u5927\u7a0b\u5ea6
   */
  function checkNotNull(obj) {
    if (obj == null) {
      return true;
    }
    if (obj[notNull] || obj[nullable]) {
      if (isNull(obj.value)) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.notNull.js'), true);
        return false;
      }
    }
    return true;
  }
  /*
   * \u600e\u4e48\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff1f\u540c\u65f6\u5224\u65ad\u5b83\u7684\u989d\u5916\u5c5e\u6027\u5462\uff1f \u5148\u5224\u65adnotNull\u3001nullable\u5c5e\u6027\u662f\u4e0d\u662f\u4e3a\u771f\uff0c\u4e3a\u771f\u7684\u8bdd\u518d\u6765\u5224\u65ad
   * \u518d\u5224\u65admaxLength\u5c5e\u6027\u662f\u4e0d\u662f\u4e3a\u7a7a\uff0c\u4e0d\u4e3a\u7a7a\u7684\u8bdd\u518d\u6765\u5224\u65ad\u662f\u4e0d\u662f\u5927\u4e8e\u6700\u5927\u7a0b\u5ea6
   */
  function checkNotNullWithourTrim(obj) {
    if (obj == null) {
      return true;
    }
    if (obj[notNullWithoutTrim]) {
      if (isNull(obj.value, true)) {
        addErrorMessage(obj, obj.name + $.i18n('validate.notNull.js'), true);
        return false;
      }
    }
    return true;
  }
  /*
   * \u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u4e5f\u662f\u4e00\u4e2a\u6570\u5b57 \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\u7b80\u5355\uff0c\u5224\u65ad\u6574\u6570\u6570\u4f4d\u548c\u5c0f\u6570\u6570\u4f4d\u6709\u70b9\u7e41\u7410
   * \u5c0f\u6570\u70b9\u6240\u5728\u7684\u7d22\u5f15\u5c31\u662f\u6574\u6570\u4f4d\u6570\uff0c\u5b57\u957f-\u5c0f\u6570\u70b9\u6240\u5728\u7684\u7d22\u5f15-1\u5c31\u662f\u5c0f\u6570\u4f4d\u7684\u4f4d\u6570\u3002
   */
  /*
   * \u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u4e5f\u662f\u4e00\u4e2a\u6570\u5b57 \u5224\u65ad\u662f\u5426\u662f\u6574\u6570\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u8981\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u53c8\u6ca1\u6709\u5c0f\u6570\u70b9\u5c31\u884c\u4e86\u3002 \u7136\u540e\u53ca\u65f6\u5224\u65ad\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u4e86\u3002
   */
  function checkIsNumber(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    var isNumberFlag = false, isIntegerFlag = false;
    if (obj[isNumber] || (obj[fieldType] == fieldTypeValue["number"])
        || (obj[fieldType] == fieldTypeValue["1"])
        || (obj[fieldType] == fieldTypeValue["2"])) {
      isNumberFlag = true;
      if (isNull(obj.value)) {
        return true;
      }
      if (!isANumber(obj.value)) {
        addErrorMessage(obj, obj.name + $.i18n('validate.notNumber.js'));
        return false;
      }
      // \u989d\u5916\u5c5e\u6027
      var value = "" + $.trim(obj.value);
      var dotIndex = value.indexOf("."), intdigits = obj[integerDigits], decDigits = obj[decimalDigits];
      if(decDigits==null){ decDigits = obj[dotNumber];}
      if (intdigits!=null && isANumber(intdigits)) {
        var intbits = dotIndex > -1 ? dotIndex : value.length;
        if (intbits > parseInt(intdigits)) {
          addErrorMessage(obj, obj.name +  $.i18n('validate.integerDigits.js', intdigits));
          return false;
        }
      }
      if (decDigits!=null && isANumber(decDigits)) {
        var decbits = dotIndex > -1 ? (value.length - 1 - dotIndex) : 0;
        if (decbits > parseInt(decDigits)) {
          addErrorMessage(obj, obj.name + $.i18n('validate.decimalDigits.js', decDigits));
          return false;
        }
      }
    }
    if (obj[isInteger]) {
      isIntegerFlag = true;
      if (isNull(obj.value)) {
        return true;
      }
      // \u5982\u679c\u662f\u6570\u5b57\uff0c\u540c\u65f6\u6ca1\u6709\u70b9\u53f7\u5b58\u5728\uff0c\u8868\u793a\u662f\u4e00\u4e2a\u6574\u6570
      if (!isANumber(obj.value)) {
        addErrorMessage(obj, obj.name + $.i18n('validate.integer.js'));
        return false;
      }
      var value = "" + obj.value;
      if (value.indexOf(".") > -1) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.integer.decimal.js'));
        return false;
      }
    }
    if(isNumberFlag || isIntegerFlag){
	    if (!checkIsLessThanMax(obj)) {
	      return false;
	    }
	    if (!checkIsBiggerThanMin(obj)) {
	      return false;
	    }
    }
    return true;
  }
  /*
   * \u4e3a\u7a7a\u7684\u8bdd\u5224\u5b9a\u5b83\u662f\u4e00\u4e2a\u7535\u5b50\u90ae\u7bb1\u3002 \u600e\u4e48\u5224\u65ad\u662f\u4e00\u4e2a\u7535\u5b50\u90ae\u7bb1\uff1f
   * \u5b58\u5728@\u7b26\u53f7\uff0c\u5e76\u4e14@\u4e0d\u80fd\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u5728\u524d\u4e94\u4e2a\u5b57\u7b26\u4e2d\u95f4\uff0c\u5fc5\u987b\u5b58\u5728\u70b9\u53f7\uff0c\u70b9\u53f7\u4e0d\u80fd\u5728\u6700\u540e\u4e24\u4e2a\u5b57\u7b26\u4e4b\u4e2d
   */
  function checkIsEmail(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[isEmail] || (obj[fieldType] == "email")) {
      var str = obj.value;
      if (isNull(str)) {
        return true;
      } else {
        var result = true;
        if (str.indexOf("@") == -1) {
          result = false;
        } else if (str.indexOf("@") == 0) {
          result = false;
        } else if ((str.length - str.indexOf("@")) < 5) {
          result = false;
        } else if (str.indexOf(".") == -1) {
          result = false;
        } else if ((str.length - str.indexOf(".")) < 3) {
          result = false;
        }
        if (!result) {
          addErrorMessage(obj, obj.name
              + $.i18n('validate.email.js'));
        }
        return result;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5b57\u7b26\u4e32 \u53ea\u8981typeof\u7684\u503c\u662f\u4e00\u4e2astring\u5c31\u884c\u3002
   * obj[character]\u4e2d\u5305\u542b\u7684\u662f\u975e\u6cd5\u5b57\u7b26\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u6709\u4e00\u4e9b\u975e\u6cd5\u5b57\u7b26\uff0c\u90a3\u4e48\u9a8c\u8bc1\u4e0d\u4f1a\u901a\u8fc7\u3002
   */
  function checkIsWord(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[isWord] || (obj[fieldType] == fieldTypeValue["string"])
        || (obj[fieldType] == fieldTypeValue["0"])
        || (obj[fieldType] == fieldTypeValue["8"])
        || (obj[fieldType] == fieldTypeValue["9"])) {
      if (typeof obj.value != "string") {
        return false;
      }
      if (obj[character] && typeof obj[character]=="string") {

        var value = "" + obj.value, chars = obj[character];
        for(var i=0,len=chars.length; i<len; i++){
            if (value.indexOf(chars.charAt(i)) > -1) {
              addErrorMessage(obj, obj.name + $.i18n('validate.specialhave.js')
                  + obj[character] + "!");
              return false;
            }
        }
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u662f\u9ed8\u8ba4\u503c \u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u4e3a\u4e0d\u662f \u592a\u7b80\u5355\u4e86\uff0c\u53ea\u8981\u5224\u65ad\u662f\u4e8c\u8005\u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86\u3002
   */
  function checkIsDefaultValue(obj) {
    if (obj == null) {
      return false;
    }
    if (isNull(obj.value)) {
      return false;
    }
    if (obj[isDeaultValue] && obj[deaultValue]) {
      if ($.trim(obj.value) == obj[deaultValue]) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.notDefault.js')+"("
            + obj[deaultValue] + ")!");
        return true;
      }
    }
    return false;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u662f\u56fa\u5b9a\u7535\u8bdd\u53f7\u7801 \u5982\u679c\u4e3a\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u4e3atrue \u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u6570\u5b57\u7ed3\u5c3e\uff0c\u4e2d\u95f4\u4e0d\u80fd\u662f0-9\u53ca-_\u610f\u5916\u7684\u5b57\u7b26
   */
  var telReg = /^\d[-_0-9]{5,}\d$/;
  function checkIsTelephone(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[fieldType] == "telephone") {
      var value = "" + obj.value;
      if (telReg.test(value) != true) {
        addErrorMessage(
            obj,
            obj.name
                + $.i18n('validate.phoneNumber.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u624b\u673a\u53f7\u4e5f\u5f88\u7b80\u5355 \u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u662f\u624b\u673a\u53f7\u7801 \u5224\u65ad\u662f\u4e0d\u662f\u81f3\u5c1111\u4e3a\u624b\u673a\u53f7\u7801\u5c31\u884c\u4e86\u3002
   */
  var mobileReg = /\d{11,}/;
  function checkIsMobilePhone(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[fieldType] == "mobilePhone") {
      var value = "" + obj.value;
      if (mobileReg.test(value) != true) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.mobileNumber.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u65e5\u671f\u683c\u5f0f\u7684\u8bdd\uff0c\u5f88\u7b80\u5355 \u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u662f\u65e5\u671f \u5982\u679c\u4e0d\u662f\u7a7a\uff0c\u90a3\u4e48\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u884c\u4e86
   */
  var dateReg = /^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29))$/;
  function checkIsDate(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[fieldType] == 3) {
      var value = "" + obj.value;
      if (dateReg.test(value) != true) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.yyyy.MM.dd.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u7684\u8bdd\uff0c\u4e5f\u5f88\u7b80\u5355 \u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u662f\u65e5\u671f \u5982\u679c\u4e0d\u662f\u7a7a\uff0c\u90a3\u4e48\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u884c\u4e86
   */
  var datetimeReg = /^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29)) (20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d$/;
  function checkIsDateTime(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[fieldType] == 4) {
      var value = "" + obj.value;
      if (datetimeReg.test(value) != true) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.yyyy.MM.dd.hh.mm.ss.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u7684\u8bdd\uff0c\u4e5f\u5f88\u7b80\u5355 \u5982\u679c\u662f\u7a7a\u7684\u8bdd\uff0c\u5224\u5b9a\u5b83\u662f\u65e5\u671f \u5982\u679c\u4e0d\u662f\u7a7a\uff0c\u90a3\u4e48\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u884c\u4e86
   */
  var datetimeRegs = /^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29)) (20|21|22|23|[0-1]?\d):[0-5]?\d$/;
  function checkIsDateTimes(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[fieldType] == 5) {
      var value = "" + obj.value;
      if (datetimeRegs.test(value) != true) {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.yyyy.MM.dd.hh.mm.ss.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u4e0d\u662f\u5c0f\u4e8e\u5141\u8bb8\u7684\u6700\u5927\u957f\u5ea6
   */
  function checkIsShorterThanMax(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[maxLength] != null) {
      if (isANumber(obj[maxLength])) {
      	//
		if(obj[isNumber] || (obj[fieldType] == fieldTypeValue["number"])
				|| (obj[fieldType] == fieldTypeValue["1"])
				|| (obj[fieldType] == fieldTypeValue["2"])){
			if(obj.value.length>0){
				obj.value = obj.value.replace(/\./,'');
			}
      		if (longerThanSecond(obj.value, obj[maxLength])) {
				  addErrorMessage(obj, obj.name
					  + $.i18n('validate.maxLength.js', obj[maxLength]));
				  return false;
			}
      	}else {
			if(obj[china3char]==true){
				//\u5982\u679c\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3atrue\uff0c\u8868\u793a\u975e\u82f1\u6587\u5b57\u7b26\u5e94\u8be5\u5f53\u4f5c3\u4e2a\u5b57\u7b26\u3002\u5426\u5219\u53ea\u7b97\u5b57\u7b26\u7684\u4e2a\u6570\u3002
				if (longerThanSecondChina(obj.value, obj[maxLength])) {
				  addErrorMessage(obj, obj.name
					  + $.i18n('validate.maxLengthChina.js', obj[maxLength]));
				  return false;
				}
			}else{
				if (longerThanSecond(obj.value, obj[maxLength])) {
				  addErrorMessage(obj, obj.name
					  + $.i18n('validate.maxLength.js', obj[maxLength]));
				  return false;
				}
			}
		}
      } else {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.maxLength.notNumber.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u5927\u4e8e\u5141\u8bb8\u7684\u6700\u5c0f\u957f\u5ea6
   */
  function checkIsLongerThanMin(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    if (obj[minLength] != null) {
      if (isANumber(obj[minLength])) {
        if (shorterThanSecond(obj.value, obj[minLength])) {
          addErrorMessage(obj, obj.name
              + $.i18n('validate.minLength.js') + obj[minLength]
              + "!");
          return false;
        }
      } else {
        addErrorMessage(obj, obj.name
            + $.i18n('validate.minLength.notNumber.js'));
        return false;
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u5c0f\u4e8e\u6700\u5927\u503c
   */
  function checkIsLessThanMax(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    var tempMax = obj[max] ;
    if(tempMax==null){tempMax=obj[maxValue]};
    if (tempMax != null && isANumber(tempMax)) {
      value = parseFloat(obj.value);
      if(obj[maxEqual]==false){
      	if (tempMax <= value) {
	        addErrorMessage(obj, obj.name + $.i18n('validate.mustLittle.js') + tempMax
	            + "!");
	        return false;
	      }
      }else{
	      if (tempMax < value) {
	        addErrorMessage(obj, obj.name + $.i18n('validate.mustLittleOrEqual.js') + tempMax
	            + "!");
	        return false;
	      }
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u5927\u4e8e\u6700\u5c0f\u503c
   */
  function checkIsBiggerThanMin(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    var tempMin = obj[min];
    if(tempMin==null){tempMin = obj[minValue]};
    if (tempMin != null && isANumber(tempMin)) {
      value = parseFloat(obj.value);
      if(obj[minEqual]==false){
      	  if (tempMin >= value) {
	        addErrorMessage(obj, obj.name + $.i18n('validate.mustBigger.js')
	            + tempMin + "!");
	        return false;
	      }
      }else{
	      if (tempMin > value) {
	        addErrorMessage(obj, obj.name + $.i18n('validate.mustBiggerOrEqual.js')
	            + tempMin + "!");
	        return false;
	      }
      }
    }
    return true;
  }
  /*
   * \u5224\u65ad\u8f93\u5165\u503c\u662f\u5426\u5339\u914d\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6b63\u5219\u8868\u8fbe\u5f0f
   */
  function checkCustomRegExp(obj) {
    if (obj == null) {
      return true;
    }
    if (isNull(obj.value)) {
      return true;
    }
    var customRegExp = obj[regExp];
    if (customRegExp != null) {
      if (!new RegExp(customRegExp).test(obj.value)) {
        addErrorMessage(obj, obj.name + $.i18n('validate.notMatch.js'));
        return false;
      }
    }
    return true;
  }
  function checkCustomFunc(obj, input) {
    if (obj == null || input == null) {
      input = null;
      return true;
    }
    if (typeof obj[func] == "function") {
      var result = obj[func](input, obj);
      if (result == null || result == false) {
        addErrorMessage(obj, obj.name + $.i18n('validate.notMatch.js'));
      }
    }
    input = null;
    return true;
  }
  /*
   * \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u3002 null\u7684\u8bdd\uff0c\u8fd4\u56detrue\u3002 \u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u7b49\u4e8e\u7a7a\u5b57\u7b26\u4e32\u7684\u8bdd\u8fd4\u56detrue\uff0c\u4e0d\u662f\u7a7a\u8fd4\u56defalse \u4ee5\u4e0a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56defalse
   */
  function isNull(value, notTrim) {
    if (value == null) {
      return true;
    } else if (typeof (value) == "string") {
      value = notTrim == true ? $.trim(value) : value;
      if (value == "") {
        return true;
      }
    }
    return false;
  }
  /*
   * isNaN\u8fd4\u56de\u503c\u4e3atrue\u7684\u8bdd\uff0c\u8868\u660e\u4e0d\u662f\u6570\u5b57\u3002\u8fd4\u56de\u503c\u4e3afalse\u7684\u8bdd\u8868\u660e\u662f\u6570\u5b57\u3002
   */
  function isANumber(value) {
    if (typeof value == "string") {
      value = value;
    }
	return /^[-+]?\d*([\.]\d+)?$/.test(value);
    /*if (isNaN(value)) {
      return false;
    } else {
      return true;
    }*/
  }
  /*
   * \u4e24\u4e2a\u53c2\u6570\u90fd\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5c31\u8fd4\u56defalse \u7b2c\u4e8c\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u5b57\uff0c\u4e0d\u662f\u6570\u5b57\u7684\u8bdd\uff0c\u5c31\u8fd4\u56defalse
   * \u4ee5\u4e0a\u6761\u4ef6\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u5982\u679cfirst\u7684\u957f\u5ea6\u5927\u4e8esecond\u7684\u503c\uff0c\u5c31\u8fd4\u56detrue \u4ee5\u4e0a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u7136\u4f1afalse
   */
  function longerThanSecond(first, second) {
    if (first != null && second != null && isANumber(second)) {
      second = parseFloat(second);
      if (first.length > second) {
        return true;
      }
    }
    return false;
  }
  function longerThanSecondChina(first, second) {
  	//\u8be5\u65b9\u6cd5\u7684\u6821\u9a8c\u91cc\u975e\u82f1\u6587\u5b57\u7b26\u5168\u90e8\u5f53\u4f5c3\u4e2a\u5b57\u7b26\u5904\u7406
    if (first != null && second != null && isANumber(second)) {
      second = parseFloat(second);
      if (getLength(first) > second) {
        return true;
      }
    }
    return false;
  }/*
     * \u4e24\u4e2a\u53c2\u6570\u90fd\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5c31\u8fd4\u56defalse \u7b2c\u4e8c\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u5b57\uff0c\u4e0d\u662f\u6570\u5b57\u7684\u8bdd\uff0c\u5c31\u8fd4\u56defalse
     * \u4ee5\u4e0a\u6761\u4ef6\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u5982\u679cfirst\u7684\u957f\u5ea6\u5927\u4e8esecond\u7684\u503c\uff0c\u5c31\u8fd4\u56detrue \u4ee5\u4e0a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u7136\u4f1afalse
     */
  function shorterThanSecond(first, second) {
    if (first != null && second != null && isANumber(second)) {
      second = parseFloat(second);
      if (first.length < second) {
        return true;
      }
    }
    return false;
  }
  function getLength(value){
  	if(value==null){
  		return 0;
  	}else if(value==""){
  		return 1;
  	}else{
  		var result = 0;
  		for(var i=0, len=value.length; i<len; i++){
  			var ch = value.charCodeAt(i);
  			if(ch<256){
  				result++;
  			}else{
  				result +=3;
  			}
  		}
  		return result;
  	}
  }
  /*
   * \u6dfb\u52a0\u9519\u8bef\u4fe1\u606f
   */
  function addErrorMessage(obj, errMsg, useSystem) {
    if (obj) {
      if (obj.errorArray == null) {
        obj.errorArray = [];
      }
      var customErrorMsg = obj[errorMsg];
      if (useSystem!=true && customErrorMsg) {
        obj.errorArray.push(customErrorMsg);
      } else {
        obj.errorArray.push(errMsg);
      }
    }
  }

  $.fn.validate = function(options) {
    var settings = {
      errorIcon : true,
	  errorAlert:false,
	  errorBg:false,
	  validateHidden:false,
	  checkNull:true
    };
    options = $.extend(settings, options);
    return MxtCheckForm(this, options);
  };
  
  $.fn.validateChange = function (obj){
  	var tempElem = this;
  	if(tempElem!=null && tempElem.size()>0){
        addCheckMsg(tempElem, obj);
  	}
  	tempElem = null;
  }

  var invalid = [];
  $._invalidObj = function(obj) {
    if (obj)
      invalid.push(obj);
    invalid.contains(obj);
  };

  $._isInValid = function(obj) {
  	if(invalid.contains){
      return invalid.contains(obj);
    }
    return null;
  };
  $.isNull = isNull;
  $.isANumber = isANumber;
})();
/// <reference path="../scriptes/jquery.js" />

/**
 *
 * @author \u7504\u5e05
 */
///\u6c14\u6ce1\u72b6\u63d0\u793a
function MxtToolTip(options) {
    this.id = options.id ? options.id : "toolTip_" + Math.floor(Math.random() * 1000000000);//\u751f\u6210ID
    this.width = options.width ? options.width : 200;//\u8bbe\u7f6e\u5bbd\u5ea6
    this.event = options.event ? options.event : null;//event
    this.targetId = options.targetId ? options.targetId : null;//\u83b7\u53d6attr("tooltip")\u7684\u503c\uff0c\u5b9a\u4f4d\u5224\u65ad
    this.openPoint = options.openPoint ? options.openPoint : [];
    this.openAuto = options.openAuto ? options.openAuto : false;
    this.direction = options.direction ? options.direction : "TL";
    this.showHtmlID = options.htmlID ? options.htmlID : null;
    this.showMsg = options.msg ? options.msg : null;
    this.targetWindow = options.targetWindow == null ? window : options.targetWindow;//\u8de8iframe\u663e\u793a
    this.z_index = options.z_index == null ? 5000 : options.z_index;
    this.left = 0;
    this.top = 0;
    this.init();
}
///\u521d\u59cb\u5316
MxtToolTip.prototype.init = function () {
    var _this = this;
    //\u8f93\u51fa\u5230\u9875\u9762
    var _html = "";
    _html += "<div id='" + this.id + "' class='tooltip' style='display:none; position: absolute; width: " + this.width + "px;z-index:" + this.z_index + "'>";
    _html += "<div class='tooltip_border'>";
    _html += "<span><em class='tooltip_em' style=''></em></span>";
    _html += "<div class='tooltip_text'></div>";
    _html += "</div>";
    _html += "</div>";
    $(this.targetWindow.document).find('body').append(_html);
    //\u8bbe\u7f6e\u663e\u793a\u5185\u5bb9\uff0c\u9ed8\u8ba4\u4f18\u5148\u7ea7
    if (this.showHtmlID != null) {
        $("#" + this.showHtmlID).wrap("<div id='" + this.id + "_area'></div>");
        $(this.targetWindow.document).find("#" + this.id + " .tooltip_text").append($("#" + this.showHtmlID).clone(true));
        $("#" + this.id + "_area").empty();
    } else if (this.showMsg != null) {
        $(this.targetWindow.document).find("#" + this.id + " .tooltip_text").html(this.showMsg);
    } else {
        $(this.targetWindow.document).find("#" + this.id + " .tooltip_text").html($("#" + this.targetId).attr("tooltip"));
    }
    this.setPoint(this.left, this.top);
    if (this.openAuto == true) {
        this.show();
    }
    var _this = this;
    //\u7ed1\u5b9a\u5173\u95edclass
    $(this.targetWindow.document).find("#" + this.id + " .tooltip_close").click(function () {
      _this.hide();
    });
}
///\u5224\u65adposition\u548csetDirection
MxtToolTip.prototype.getPD = function () {
    var _X;
    var _Y;
    var _ttWidth = $(this.targetWindow.document).find("#" + this.id).width();
    var _ttHeight = $(this.targetWindow.document).find("#" + this.id).height();
    var _winWidth = $(this.targetWindow).width();
    var _winHeight = $(this.targetWindow).height();
    if (this.event) {
        //\u6839\u636e\u9f20\u6807\u5224\u65adposition
        _X = $("#" + this.targetId).offset().left;
        _Y = $("#" + this.targetId).offset().top + $("#" + this.targetId).height();
    } else {
        //\u6839\u636eopenPoint\u5224\u65adposition
        _X = this.openPoint[0];
        _Y = this.openPoint[1];
    }
    //\u5c3e\u5df4\u5728\u4e0a\u4e0b\u548c\u5de6\u53f3\uff0c\u533a\u5206\u5224\u65ad
    if ((this.direction.substr(0, 1) == "T") || (this.direction.substr(0, 1) == "B")) {
        if (_X + _ttWidth > _winWidth) {
            this.direction = this.direction.substr(0, 1) + "R";
            this.left = _X - _ttWidth;
        } else {
            this.left = _X;
        }
        if (_Y + _ttHeight > _winHeight - 5) {
            this.direction = "B" + this.direction.substr(1);
            this.top = _Y - _ttHeight;
        } else {
            this.top = _Y + 5;
        }
    } else {
        if (_X + _ttWidth > _winWidth ) {
            this.direction = "R" + this.direction.substr(1);
            this.left = _X - _ttWidth ;
        } else {
            this.left = _X;
        }
        if (_Y + _ttHeight > _winHeight) {
            this.direction = this.direction.substr(0, 1) + "B";
            this.top = _Y - _ttHeight;
        } else {
            this.top = _Y;
        }
    }
    this.setDirection(this.direction);
}
///\u8bbe\u7f6eposition
MxtToolTip.prototype.setPoint = function (l, t) {
    this.left = l;
    this.top = t;
    this.getPD();
    $(this.targetWindow.document).find("#" + this.id).css({
        left: this.left + "px",
        top: this.top + "px"
    });
}
///\u8bbe\u7f6e\u2018\u5c3e\u5df4\u2019\u4f4d\u7f6e
MxtToolTip.prototype.setDirection = function (d) {
    var tooltip_em = $(this.targetWindow.document).find("#" + this.id + " .tooltip_em");
    //\u5224\u65ad\u7bad\u5934
    var _background_position = "";
    switch (d) {
        case "TL":
            _background_position = "0 -166px";
            tooltip_em.css({ left: "", top: "-5px", right: "", bottom: "" });
            break;
        case "TR":
            _background_position = "0 -166px";
            tooltip_em.css({ left: "", top: "-5px", right: "10px", bottom: "" });
            break;
        case "BL":
            _background_position = "0 -160px";
            tooltip_em.css({ left: "", top: "", right: "", bottom: "-5px" });
            break;
        case "BR":
            _background_position = "0 -160px";
            tooltip_em.css({ left: "", top: "", right: "10px", bottom: "-5px" });
            break;
        case "LT":
            _background_position = "-22px -160px";
            tooltip_em.css({ left: "-5px", top: "", right: "", bottom: "", width: "6px", height: "11px" });
            break;
        case "LB":
            _background_position = "-22px -160px";
            tooltip_em.css({ left: "-5px", top: "", right: "", bottom: "10px", width: "6px", height: "11px" });
            break;
        case "RT":
            _background_position = "-16px -160px";
            tooltip_em.css({ left: "", top: "", right: "-5px", bottom: "", width: "6px", height: "11px" });
            break;
        case "RB":
            _background_position = "-16px -160px";
            tooltip_em.css({ left: "", top: "", right: "-5px", bottom: "10px", width: "6px", height: "11px" });
            break;
    }
    tooltip_em.css({ "background-position": _background_position });
}
///\u8bbe\u7f6e\u663e\u793a\u5185\u5bb9
MxtToolTip.prototype.setHtml = function (json) {
    if (json.id) {
        //showHtmlID\u8fd8\u539f\u4f4d\u7f6e
        if (this.showHtmlID != null) {
            $(this.targetWindow.document).find("#" + this.showHtmlID).clone(true).appendTo("#" + this.id + "_area");
            $("#" + this.showHtmlID).unwrap();
        }
        this.showHtmlID = json.id;
        $("#" + this.showHtmlID).wrap("<div id='" + this.showHtmlID + "_area'></div>");
        $(this.targetWindow.document).find("#" + this.id + " .tooltip_text").empty().append($("#" + this.showHtmlID).clone(true));
        $("#" + this.showHtmlID + "_area").empty();
    }
    if (json.text) {
        $(this.targetWindow.document).find("#" + this.id + " .tooltip_text").html(json.text);
    }
}
///\u5173\u95ed
MxtToolTip.prototype.close = function () {
    $(this.targetWindow.document).find("#" + this.showHtmlID).clone(true).appendTo("#" + this.id + "_area");
    $("#" + this.showHtmlID).unwrap();
    $(this.targetWindow.document).find("#" + this.id).remove();
}
///\u663e\u793a
MxtToolTip.prototype.show = function () {
    $(this.targetWindow.document).find("#" + this.id).show();
}
///\u663e\u793a
MxtToolTip.prototype.hide = function () {
    $(this.targetWindow.document).find("#" + this.id).hide();
}
/**
 * @author macj
 */
function MxtTimeLine(options){
	this.id = options.id != undefined ? options.id : Math.floor(Math.random() * 100000000);
	this.height = options.height == undefined ? 500 : options.height;
	this.render = options.render;
	this.timeStep = options.timeStep == undefined ? ['8:00','18:00'] : options.timeStep;
	this.date = options.date;
	if(this.date == undefined){
		var _ymd = new Date();
		this.date[0] = _ymd.getFullYear();
		this.date[1] = _ymd.getMonth()+1;
		this.date[2] = _ymd.getDate();
	}
	
	this.autoHeight = 0;//\u9996\u9875banner\u6536\u8d77\u7efd\u5f00\u65f6\u5019\u7528\u5230
	this.dateHeight = 20;
	this.editHeight = 10;
	this.boxPadding = 10;//time_line_box\u5e95\u90e8\u5185\u8fb9\u8ddd\uff0c\u7528\u6765\u5b58\u653e
	
	this.isHasMaxEvent = false;//\u5224\u65ad\u6700\u540e\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u5426\u6709\u4e8b\u4ef6
	this.hideFlag = true;
	
	this.items = options.items;
	this.action = options.action;
	this.searchClick = options.searchClick == undefined?function(){}:options.searchClick;
	this.editClick = options.editClick == undefined?function(){}:options.editClick;
	this.maxClick = options.maxClick == undefined?function(){}:options.maxClick;
	
	
	this.MonHead = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	
	this.scaleArray = new Object();
	this.scaleHourArray = new Object();
	
	this.initTimeLine();
	this.initType();
}
MxtTimeLine.prototype.initTimeLine = function(){
	this.isHasMax();
	if(this.isHasMaxEvent){
		this.boxPadding = 25;
	}
	this.timeLineHeight = this.height-this.dateHeight-this.editHeight-this.boxPadding-this.autoHeight;
	this.time_line_box = $("<div class='time_line_box' id='"+this.id+"_box' style='padding-bottom:"+this.boxPadding+"px'></div>");
	this.time_line_edit = $("<div class='clearfix'><span id='"+this.id+"_editor' class='ico16 editor_16 left'></span><span id='"+this.id+"_maximize' class='ico16 maximize_16 right'></span> </div>");
	this.time_line_edit_div = $("<div class='time_line_edit hidden over_hidden'></div>");
	this.time_line_date = $("<div class='time_line_date' style='height:30px;letter-spacing:1px;'><span id='"+this.id+"_date'>"+(this.date[1].length == 1?'0'+this.date[1]:this.date[1])+"-"+(this.date[2].length == 1?'0'+this.date[2]:this.date[2])+"</span></div>");
	
	
	this.time_line_date_set = $("<div id='"+this.id+"_time_line_date_set' class='hidden' style='height:20px'></div>");
	
	this.time_line_date_set_mouth = $("<select class='left "+this.id+"_time_line_date_set_mouth' id='"+this.id+"_time_line_date_set_mouth'></select>");
	this.time_line_date_set_day = $("<select class='left "+this.id+"_time_line_date_set_day' id='"+this.id+"_time_line_date_set_day'></select>");
	
	this.time_line_date_set_ok = $("<a class='tooltip_close font_size12 right margin_r_10 margin_t_5 hand color_blue'>" + $.i18n('common.button.ok.label') + "</a>");
	this.time_line_date_set_cancel = $("<a class='tooltip_close font_size12 right margin_t_5 hand color_blue'>" + $.i18n('common.button.cancel.label') + "</a>");
	
	this.time_line_date_set.append(this.time_line_date_set_mouth);
	this.time_line_date_set.append("<span class='left font_size12' style='margin-top:2px;margin-right:10px;'>"+$.i18n('calendar_month')+"</span>");
	this.time_line_date_set.append(this.time_line_date_set_day);
	this.time_line_date_set.append("<span class='left font_size12 ' style='margin-top:2px;margin-right:2px;'>"+$.i18n('calendar_day')+"</span>");
	this.time_line_date_set.append(this.time_line_date_set_cancel);
	this.time_line_date_set.append(this.time_line_date_set_ok);
	
	this.time_line_date.append(this.time_line_date_set);
	this.time_line_edit_div.append(this.time_line_edit);
	
	$('body').append(this.time_line_edit_div);
	
	//this.time_line_box.append(this.time_line_edit_div);
	
	this.time_line_box.append(this.time_line_date);
	
	this.time_line_main = $("<div class='time_line_main relative' style='height:"+this.timeLineHeight+"px' id='"+this.id+"_main'></div>");
	
	this.timeStepInt = parseInt(this.timeStep[1],10)-parseInt(this.timeStep[0],10);
	this.subTime = this.timeLineHeight/(this.timeStepInt*2);
	for (var i=0; i<this.timeStepInt*2; i++) {
		if(i == 0){
				//\u6574\u70b9\u523b\u5ea6
				var time_hour_scale = $("<div class='time_hour_scale absolute'></div>");
					time_hour_scale.css({
					top:i*this.subTime-1
				});
				this.time_line_main.append(time_hour_scale);
				//\u6574\u70b9\u65f6\u95f4
				var time_hour = $("<div class='time_hour absolute clearfix'><div class='time_hour_number' style='width:13px;'>"+(parseInt(this.timeStep[0],10)+i/2)+"</div><div class='time_hour_number_00' style='width:17px;'>:00</div></div>");
					time_hour.css({
						top:(i*this.subTime-6)-7
					});
				this.time_line_main.append(time_hour);
				this.scaleArray[parseInt(this.timeStep[0],10)+i/2] = i*this.subTime;
				this.scaleHourArray[parseInt(this.timeStep[0],10)+i/2] = time_hour;
		}else{
			if(i%2 == 0){
				//\u6574\u70b9\u523b\u5ea6
				var time_hour_scale = $("<div class='time_hour_scale absolute'></div>");
					time_hour_scale.css({
					top:i*this.subTime-1
				});
				this.time_line_main.append(time_hour_scale);
				//\u6574\u70b9\u65f6\u95f4
				var time_hour = $("<div class='time_hour absolute clearfix'><div class='time_hour_number'>"+(parseInt(this.timeStep[0],10)+i/2)+"</div><div class='time_hour_number_00'>00</div></div>");
					time_hour.css({
						top:(i*this.subTime-6)-7
					});
				this.time_line_main.append(time_hour);
				this.scaleArray[parseInt(this.timeStep[0],10)+i/2] = i*this.subTime;
				this.scaleHourArray[parseInt(this.timeStep[0],10)+i/2] = time_hour;
			}else{
				//\u534a\u70b9\u523b\u5ea6
				var time_harf_hour_scale = $("<div class='time_harf_hour_scale absolute'></div>");
				time_harf_hour_scale.css({
					top:i*this.subTime
				});
				this.time_line_main.append(time_harf_hour_scale);
			}
		}
	}
	
	//\u6700\u540e\u4e00\u4e2a\u65f6\u95f4\u523b\u5ea6
	var time_harf_hour_scale = $("<div class='time_hour_scale absolute'></div>");
		time_harf_hour_scale.css({
		top:this.timeStepInt*2*this.subTime-1
	});
	//\u6700\u540e\u4e00\u4e2a\u65f6\u95f4
	var time_hour = $("<div class='time_hour absolute clearfix'><div class='time_hour_number'>"+parseInt(this.timeStep[1],10)+"</div><div class='time_hour_number_00'>00</div></div>")
		time_hour.css({
			top:(this.timeStepInt*2*this.subTime-6)-7
		});
	this.time_line_main.append(time_hour);
	this.scaleArray[parseInt(this.timeStep[1],10)] = this.timeStepInt*2*this.subTime;
	this.scaleHourArray[parseInt(this.timeStep[1],10)] = time_hour;
	
	this.time_line_main.append(time_harf_hour_scale);
	this.time_line_box.append(this.time_line_main);
	 
	if(this.render == undefined){
		$('body').append(this.time_line_box);
	}else{
		$('#'+this.render).append(this.time_line_box);
	}
	this.year = this.date[0];
	this.month = parseInt(this.date[1],10);
	this.day = this.date[2];

	for (var g=1; g<13; g++) {
		this.time_line_date_set_mouth.append($("<option "+(g==this.month?"selected":'')+">"+g+"</option>"));
	};
	
	this.changeDate(parseInt(this.year,10),parseInt(this.month,10));
	var self =this;
	$('#'+this.id+'_editor').click(this.editClick);
	$('#'+this.id+'_maximize').click(this.maxClick);
	
	this.time_line_date_set_ok.click(this.searchClick);
	this.time_line_date_set_mouth.change(function(){
		//self.changeDate(self.date.getFullYear(),$(this).val());
		self.changeDate(parseInt(self.date[0],10),parseInt($(this).val(),10));
	})
	
	var time_line_edit_div_flag = true;
	this.time_line_box.mouseenter(function(){
		var _offset = $(this).offset();
		self.time_line_edit_div.css({
			left:_offset.left,
			top:_offset.top-16
		}).show();
		time_line_edit_div_flag = true;
	}).mouseleave(function(){
		setTimeout(function(){
			if(time_line_edit_div_flag)self.time_line_edit_div.hide();
		},10);
		
	});
	
	this.time_line_edit_div.mouseenter(function(){
		$('#'+self.id+'_time_line_date_set_tooltip').hide();
		$(this).show();
		time_line_edit_div_flag = false;
	}).mouseleave(function(){
		$(this).hide();
		time_line_edit_div_flag = true;
	});
	
	

	this.time_line_date.click(function () {
		if(self.setDateTooltip == undefined){
			var _left = self.time_line_date.offset().left-230;
			var _top = self.time_line_date.offset().top;
			self.setDateTooltip = $.tooltip({
				id:self.id+'_time_line_date_set_tooltip',
			    width:230,
				openAuto:false,
			    openPoint: [_left, _top],
			    htmlID: self.id+'_time_line_date_set',
			    direction: "RT",
		        z_index:900
			});
		}
		$('#'+self.id+'_time_line_date_set').show();
		self.setDateTooltip.show();
		if ($.browser.msie) {
			//\u534f\u540cV5.0 OA-35723 IE8\u4e0b\u3002\u5df2\u7ecf\u505a\u4e86\u9632\u62a4\u7684\u65f6\u95f4\u7ebfjs\uff0c\u6708\u548c\u65e5\u5bf9\u5e94\u7684\u90a3\u4e2atip\u951a\u5b9a\u4e0d\u5230\u5bf9\u5e94\u65f6\u95f4\u7ebf\u4e0a\u663e\u793a\u7684\u6708\u548c\u65e5
			if ($.browser.version == '8.0' || $.browser.version == '7.0' || $.browser.version == '9.0') {
				$('.'+self.id+'_time_line_date_set_mouth').val(self.month);
				$('.'+self.id+'_time_line_date_set_day').val(self.day);
			}
		}
	});
}
MxtTimeLine.prototype.isHasMax = function(){
	for (var i=0; i<this.items.length; i++) {
		var _item = this.items[i];
		var _dateTime = parseInt(_item.dateTime,10);
		var _childItems = _item.childItems;
		if(_dateTime == parseInt(this.timeStep[1],10) && _childItems.length>0){
			this.isHasMaxEvent = true;
		}
	}
}
MxtTimeLine.prototype.initType = function(){
	var self = this;
	if(this.items && this.items.length>0){
		for (var i=0; i<this.items.length; i++) {
			var _item = this.items[i];
			var _type = _item.type;
			var _dateTime = parseInt(_item.dateTime,10);
			var _childItems = _item.childItems;
			
			if(_dateTime<parseInt(this.timeStep[0],10) || _dateTime>parseInt(this.timeStep[1],10)){
				continue;
			}
			
			var _contentIcon = $("<span class='time_line_icon "+_type+"'></span>");
			_contentIcon.css({
				top:this.scaleArray[_dateTime]+5
			});
			
			(function(obj,_type){
				obj.mouseenter(function(){
					$(this).addClass(_type+'_over');
				}).mouseleave(function(){
					$(this).removeClass(_type+'_over');
				});
			})(_contentIcon,_type);
			
			
			this.time_line_main.append(_contentIcon);
			var _contentDiv = "<div id='"+this.id+"_contentDiv"+i+"' class='"+this.id+"_time_dialog hidden'>"+"<ul class='time_dialog'>";
			for(var j = 0;j<_childItems.length;j++){
				var temp= _childItems[j];
				if(j == 0){
					_contentDiv+="<li style='border:0px;padding-top:0px;' onclick="+this.action+"('"+temp.id+"','"+(temp.type == undefined?_type:temp.type)+"')>";
				}else if(j == (_childItems.length-1)){
					_contentDiv+="<li style='padding-bottom:0px' onclick="+this.action+"('"+temp.id+"','"+(temp.type == undefined?_type:temp.type)+"')>";
				}else{
					_contentDiv+="<li onclick="+this.action+"('"+temp.id+"','"+(temp.type == undefined?_type:temp.type)+"')>";
				}
	                _contentDiv+="<div class='title'><em class='time_type_icon "+temp.type+"_ico  margin_r_5' style='position: static;display: inline-block;'></em><span style='display:inline-block;line-height:16px;height:16px;vertical-align:2px;'>"+temp.title+"</span></div>";
	                _contentDiv+="<div class='content'>"+temp.content+"</div>";
	                _contentDiv+="<div class='clearfix'>";
					
					var _widthAccount = 90;
					var _widthTime = 90;
					if(temp.type == 'task'){
						_widthTime = 200;
						_widthAccount=0;
					}else if(temp.type == 'meeting'){
						_widthAccount=0;
						_widthTime = 200;
					}else if(temp.type == 'plan'){
						_widthTime = 220;
						_widthAccount=0;
					}else if(temp.type == 'event'){
						_widthTime = 200;
						_widthAccount=0;
					}else if(temp.type == 'collaboration'){
						_widthAccount=70;
						_widthTime = 130;
					}else if(temp.type == 'edoc'){
						_widthAccount=130;
						_widthTime = 70;
					}
					if(temp.account!=undefined){
						_contentDiv+="<span class='left account' style='width:"+_widthAccount+"px; text-align:left;font-size:12px;' title='"+temp.account+"'>"+temp.account+"</span>";
					}
					
					_contentDiv+="<span class='right' style='width:"+_widthTime+"px; text-align:right;font-size:12px;'>"+temp.dateTime+"</span></div>";
					
					
                _contentDiv+="</li>";
			}
            _contentDiv+="</ul>"
			_contentDiv+="</div>"
			_contentIcon.append($(_contentDiv));
			
			var __left = _contentIcon.offset().left-260-6;
			var __top = _contentIcon.offset().top-8;
			var _tooltipHtmlId = self.id+'_contentDiv'+i;
			var _tooltipId = self.id+'_tooltip_'+i;
		    (function (_contentIcon, _tooltipId, self,_tooltipHtmlId,_left, _top) {
		        var sto;//\u5ef6\u65f6\u542f\u52a8\uff0c\u8ba1\u65f6\u5668
		        var _ttttt;
				$(_contentIcon).mouseenter(function(){
					//alert(_left+"=="+ _top)
					$('#'+_tooltipHtmlId).removeClass('hidden');
					if(_ttttt == undefined){
						_ttttt = $.tooltip({
							id:_tooltipId,
						    width:260,
							openAuto:false,
						    openPoint: [_left, _top],
						    htmlID: _tooltipHtmlId,
						    direction: "RT",
						    z_index: 900
						});
					}
					(function(_tooltipId,self){
						$('#'+_tooltipId).mouseenter(function(){
							self.hideFlag = false;
							$(this).show();
						}).mouseleave(function(){
							self.hideFlag = true;
							$(this).hide();
						});
					})(_tooltipId,self);
					
				    sto = setTimeout(function () {
				        self.hideFlag = true;
				        $("div.tooltip").hide();
				        $('#' + _tooltipId).show();
				        if ($.browser.msie) {
				            if ($.browser.version == '6.0') {
				                var _time_dialog = $('#' + _tooltipId).find('.time_dialog').eq(0);
				                var _time_dialog_h = _time_dialog.height();
				                if (_time_dialog_h > 300) {
				                    _time_dialog.height(300);
				                }
				            }
				        }
				    }, 500);
				}).mouseleave(function () {
				    clearTimeout(sto);
					setTimeout(function(){
						if(self.hideFlag){
							_ttttt.hide();
							$('#'+_tooltipHtmlId).addClass('hidden');
							self.hideFlag = false;
						}
					},100);
					
				});
			})(_contentIcon,_tooltipId,self,_tooltipHtmlId,__left, __top);
		}
	}
}
MxtTimeLine.prototype.clearLine = function(){
	this.scaleArray = new Object();
	this.scaleHourArray = new Object();
	this.boxPadding = 10;
	this.isHasMaxEvent = false;
	this.setDateTooltip = undefined;
	$('#'+this.id+'_editor').remove();
	$('#'+this.id+'_maximize').remove();
	$('#'+this.id+'_box').remove();
	$('#'+this.id+'_time_line_date_set').remove();
	$('#'+this.id+'_time_line_date_set_tooltip').remove();
	$('.'+this.id+'_time_dialog').remove();
}
MxtTimeLine.prototype.reset = function(options){
	this.timeStep = options.timeStep == undefined ? this.timeStep:options.timeStep;
	this.date = options.date == undefined ? this.date:options.date;
	this.autoHeight = options.autoHeight == undefined ? this.autoHeight:options.autoHeight;
	this.editClick = options.editClick == undefined ? this.editClick:options.editClick;
	this.maxClick = options.maxClick == undefined ? this.maxClick:options.maxClick;
	this.items = options.items == undefined ? this.items:options.items;
	this.clearLine();
	this.initTimeLine();
	this.initType();
}
MxtTimeLine.prototype.getDate = function(){
	var _year = this.date[0];
	var _mounth = $('#'+this.id+'_time_line_date_set_mouth').val();
	var _day = $('#'+this.id+'_time_line_date_set_day').val();
	
	var _ftime = this.timeStep[0];
	var _ttime = this.timeStep[1];
	return {'year':_year,'mounth':_mounth,'day':_day,'fromTime':_ftime,'toTime':_ttime};
}
MxtTimeLine.prototype.setTimeLineDate = function(dateObj){
	this.year = dateObj.year;
	this.mounth = dateObj.mounth;
	this.day = dateObj.day;
	if(this.mounth == undefined){
		this.mounth = dateObj.date.getMonth()+1;
	}
	if(this.day == undefined){
		this.day = dateObj.date.getDate();
	}
	$('#'+this.id+'_date').empty().html(this.mounth+"-"+this.day);
	
	$('#'+this.id+'_time_line_date_set_mouth').empty();
	for (var g=1; g<13; g++) {
		$('#'+this.id+'_time_line_date_set_mouth').append($("<option "+(g==this.mounth?"selected":'')+">"+g+"</option>"));
	};
	this.changeDate(parseInt(this.year,10),parseInt(this.mounth,10));
}
MxtTimeLine.prototype.changeDate = function(year,mounth){
    var n = this.MonHead[mounth - 1];
    if (mounth == 2 && this.IsPinYear(year)) {
        n++;
	}
    this.writeDay(n)
}
MxtTimeLine.prototype.writeDay = function(n){
	var str = "";
	for (var i = 1; i < (n + 1); i++){
	   str += "<option "+(i==parseInt(this.day,10)?'selected':'')+" value='" + i + "'> " + i + "</option>";
	} 
	$('#'+this.id+'_time_line_date_set_day').replaceWith("<select class='left "+this.id+"_time_line_date_set_day' id='"+this.id+"_time_line_date_set_day'>"+str+"</select>");
}
MxtTimeLine.prototype.IsPinYear = function(year){
	return (0 == year % 4 && (year % 100 != 0 || year % 400 == 0))
}
MxtTimeLine.prototype.getDateObj = function(id){
	var _items = this.items;
	var _obj = null;
	if(_items && _items.length>0){
		for (var i=0; i<_items.length; i++) {
			var _item = _items[i];
			var _chield = _item.childItems;
			if(_chield && _chield.length>0){
				for (var j=0; j<_chield.length; j++) {
					var _ch = _chield[j];
					var _chId = _ch.id;
					if(_chId && _chId==id){
						_obj = _ch;
						break;
					}
				}
			}
		}
	}
	return _obj;
}
(function(a){a.tiny=a.tiny||{};a.tiny.scrollbar={options:{axis:"y",wheel:40,scroll:true,lockscroll:true,size:"auto",sizethumb:"auto"}};a.fn.tinyscrollbar=function(d){var c=a.extend({},a.tiny.scrollbar.options,d);this.each(function(){a(this).data("tsb",new b(a(this),c))});return this};a.fn.tinyscrollbar_update=function(c){return a(this).data("tsb").update(c)};function b(q,g){var k=this,t=q,j={obj:a(".viewport",q)},h={obj:a(".overview",q)},d={obj:a(".scrollbar",q)},m={obj:a(".track",d.obj)},p={obj:a(".thumb",d.obj)},l=g.axis==="x",n=l?"left":"top",v=l?"Width":"Height",r=0,y={start:0,now:0},o={},e=("ontouchstart" in document.documentElement)?true:false;function c(){k.update();s();return k}this.update=function(z){j[g.axis]=j.obj[0]["offset"+v];h[g.axis]=h.obj[0]["scroll"+v];h.ratio=j[g.axis]/h[g.axis];d.obj.toggleClass("disable",h.ratio>=1);m[g.axis]=g.size==="auto"?j[g.axis]:g.size;p[g.axis]=Math.min(m[g.axis],Math.max(0,(g.sizethumb==="auto"?(m[g.axis]*h.ratio):g.sizethumb)));d.ratio=g.sizethumb==="auto"?(h[g.axis]/m[g.axis]):(h[g.axis]-j[g.axis])/(m[g.axis]-p[g.axis]);r=(z==="relative"&&h.ratio<=1)?Math.min((h[g.axis]-j[g.axis]),Math.max(0,r)):0;r=(z==="bottom"&&h.ratio<=1)?(h[g.axis]-j[g.axis]):isNaN(parseInt(z,10))?r:parseInt(z,10);w()};function w(){var z=v.toLowerCase();p.obj.css(n,r/d.ratio);h.obj.css(n,-r);o.start=p.obj.offset()[n];d.obj.css(z,m[g.axis]);m.obj.css(z,m[g.axis]);p.obj.css(z,p[g.axis])}function s(){if(!e){p.obj.bind("mousedown",i);m.obj.bind("mouseup",u)}else{j.obj[0].ontouchstart=function(z){if(1===z.touches.length){i(z.touches[0]);z.stopPropagation()}}}if(g.scroll&&window.addEventListener){t[0].addEventListener("DOMMouseScroll",x,false);t[0].addEventListener("mousewheel",x,false)}else{if(g.scroll){t[0].onmousewheel=x}}}function i(A){var z=parseInt(p.obj.css(n),10);o.start=l?A.pageX:A.pageY;y.start=z=="auto"?0:z;if(!e){a(document).bind("mousemove",u);a(document).bind("mouseup",f);p.obj.bind("mouseup",f)}else{document.ontouchmove=function(B){B.preventDefault();u(B.touches[0])};document.ontouchend=f}}function x(B){if(h.ratio<1){var A=B||window.event,z=A.wheelDelta?A.wheelDelta/120:-A.detail/3;r-=z*g.wheel;r=Math.min((h[g.axis]-j[g.axis]),Math.max(0,r));p.obj.css(n,r/d.ratio);h.obj.css(n,-r);if(g.lockscroll||(r!==(h[g.axis]-j[g.axis])&&r!==0)){A=a.event.fix(A);A.preventDefault()}}}function u(z){if(h.ratio<1){if(!e){y.now=Math.min((m[g.axis]-p[g.axis]),Math.max(0,(y.start+((l?z.pageX:z.pageY)-o.start))))}else{y.now=Math.min((m[g.axis]-p[g.axis]),Math.max(0,(y.start+(o.start-(l?z.pageX:z.pageY)))))}r=y.now*d.ratio;h.obj.css(n,-r);p.obj.css(n,y.now)}}function f(){a(document).unbind("mousemove",u);a(document).unbind("mouseup",f);p.obj.unbind("mouseup",f);document.ontouchmove=document.ontouchend=null}return c()}}(jQuery));
/**************************************** \u6d88\u606f\u901a\u7528(A8/\u7cbe\u7075/IM) ****************************************/

/**
 * \u6d88\u606f\u5b9a\u4e49
 */
function CLASS_MESSAGE(id, title, referenceId, userHistoryMessageId, content, messageType, senderId, senderName, receiverId, receiverName, creationDateTime, messageLink, linkOpenType, atts, importantLevel){
    this.id = id;
    this.title = title;
    this.referenceId = referenceId;
    this.userHistoryMessageId = userHistoryMessageId;
    this.content = content;
    this.messageType = messageType;
    this.senderId = senderId;
    this.senderName = senderName;
    this.receiverId = receiverId;
    this.receiverName = receiverName;
    this.creationDateTime = creationDateTime;
    this.messageLink = messageLink;
    this.linkOpenType = linkOpenType;
    this.atts = atts;
    this.importantLevel = importantLevel;
}

/**
 * \u663e\u793a\u6d88\u606f
 */
function showMessage(messagePer, messageSysList, allMsgCountStr, fromType){
	var handleWin = getHandleWin(fromType);
	//\u7cfb\u7edf\u6d88\u606f
	if(messageSysList != null && messageSysList.length > 0){
		var allLength = messageSysList.length;
		var _projectleaveProperties = new Properties();
		var _deptleaveProperties = new Properties();
		var _spaceleaveProperties = new Properties();
		var _calleaveProperties = new Properties();
		var _sysList  = new Array();
		//message.link.department.leaveWord
		//message.link.project.leaveWord 
		//message.link.cal.reply
		for(var i = 0;i<messageSysList.length;i++){
			var _msg = messageSysList[i];
			var _link = _msg.messageLink;
			if(_link!=null && _link!=''){
				var strs = _link.split("|");
				if(strs[0]=='message.link.department.leaveWord'){
		        	if(_deptleaveProperties.containsKey(strs[1])){
		        		_deptleaveProperties.get(strs[1]).add(_msg);
		        	}else{
		        		var _list = new ArrayList();
		        		_list.add(_msg);
		        		_deptleaveProperties.put(strs[1], _list);
		        	}
				}else if(strs[0]=='message.link.space.leaveWord'){
					if(_spaceleaveProperties.containsKey(strs[1])){
		        		_spaceleaveProperties.get(strs[1]).add(_msg);
		        	}else{
		        		var _list = new ArrayList();
		        		_list.add(_msg);
		        		_spaceleaveProperties.put(strs[1], _list);
		        	}
				}else if(strs[0]=='message.link.project.leaveWord'){
					if(_projectleaveProperties.containsKey(strs[1])){
						_projectleaveProperties.get(strs[1]).add(_msg);
		        	}else{
		        		var _list = new ArrayList();
		        		_list.add(_msg);
		        		_projectleaveProperties.put(strs[1], _list);
		        	}
				}else if(strs[0]=='message.link.cal.reply'){
					if(_calleaveProperties.containsKey(strs[1])){
						_calleaveProperties.get(strs[1]).add(_msg);
		        	}else{
		        		var _list = new ArrayList();
		        		_list.add(_msg);
		        		_calleaveProperties.put(strs[1], _list);
		        	}
				}else{
					_sysList[_sysList.length]=_msg;
				}
			}else{
				_sysList[_sysList.length]=_msg;
			}

		}
		//alert(_deptleaveProperties.size()+'--'+_projectleaveProperties.size()+'--'+_calleaveProperties.size()+'--'+_sysList.length)
		if((_sysList != null && _sysList.length > 0) || _projectleaveProperties.size()>0 || _deptleaveProperties.size()>0 || _spaceleaveProperties.size()>0 || _calleaveProperties.size()>0){
			if(handleWin.isSysMessageWindowEyeable){
				var sysMessageDIVObj = handleWin.$("#sysMsgContentDiv");
				var countSpanObj = handleWin.$("#sysMsgCountSpan");
				if(sysMessageDIVObj.length > 0){
					var countMessages1 = handleWin.document.getElementsByName('countMessages');
					var countSysMessages1 = handleWin.document.getElementsByName('countSysMessages');
					var _length1 = countMessages1.length + countSysMessages1.length;
					
					var systemMsgContent = sysMessageListToHTML(_sysList, true, fromType,1);
					var _projectContent = leaveWordMessageListToHTML(_projectleaveProperties, true, fromType,1);
					var _deptContent = leaveWordMessageListToHTML(_deptleaveProperties, true, fromType,2);
					var _spaceContent = leaveWordMessageListToHTML(_spaceleaveProperties, true, fromType,4);
					var _calContent = leaveWordMessageListToHTML(_calleaveProperties, true, fromType,3);
//					sysMessageDIVObj.html(systemMsgContent+_projectContent+_deptContent+_spaceContent+_calContent+sysMessageDIVObj.html());
					sysMessageDIVObj.prepend(systemMsgContent+_projectContent+_deptContent+_spaceContent+_calContent);
					try{
						var countMessages = handleWin.document.getElementsByName('countMessages');
						var countSysMessages = handleWin.document.getElementsByName('countSysMessages');
						var _length = countMessages.length + countSysMessages.length;
						var originalCount = parseInt(countSpanObj.text(), 10);
						var allCount = allLength+originalCount;
						countSpanObj.text(allCount);
						//var originalNewCount = _projectleaveProperties.size()+_deptleaveProperties.size()+_calleaveProperties.size()+_sysList.length + originalCount;
						if(_length1 < 5){
							sysMessageDIVObj.height(getHeight(_length));
						}
						DivSetVisible(true, fromType);
					}catch(e){
						
					}
				}
			}else{
				var msgObj = showSysMessage(_sysList, allLength, fromType,_projectleaveProperties,_deptleaveProperties,_spaceleaveProperties,_calleaveProperties);
				ShowMessageWindow(msgObj, fromType);
				handleWin.isSysMessageWindowEyeable = true;
			}
			handleWin.playMessageRadio();
			if(fromType == "a8"){
				getCtpTop().startActionTitle();
			}
		}
	}
	
	//\u5728\u7ebf\u6d88\u606f\uff0d\u6309\u53d1\u9001\u987a\u5e8f\u8bfb\u51fa
	if(messagePer){
		var key = messagePer.jid.substring(0, messagePer.jid.indexOf('@'));
	  	if(msgProperties.containsKey(key)){
			msgProperties.get(key).add(messagePer);
	  	}else{
			var thisArrayList = new ArrayList();
			thisArrayList.add(messagePer);
			msgProperties.put(key, thisArrayList);
	  	}
	  	
	  	if(msgProperties.size() > 0){
			if(handleWin.isPerMessageWindowEyeable){
				var perMessageDIVObj = handleWin.$("#personMsgContentDiv");
				if(perMessageDIVObj.length > 0){
					var personMsgContent = perMessageListToHTML(true, fromType);
//					perMessageDIVObj.html(personMsgContent + perMessageDIVObj.html());
					perMessageDIVObj.prepend(personMsgContent);
					try{
						var height = getPerMessageHeight();
						perMessageDIVObj.height(height);
						DivSetVisible(true, fromType);
					}catch(e){}
				}
			}else{
				var msgObj = showPerMessage(fromType, false);
				ShowMessageWindow(msgObj, fromType);
				handleWin.isPerMessageWindowEyeable = true;
			}
			
			handleWin.playMessageRadio();
			if(fromType == "a8"){
				getCtpTop().startActionTitle();
			}
	  	}
	}
}

/**
 * \u6d88\u606f\u663e\u793a
 */
function ShowMessageWindow(ClassMessageObj, fromType){
	var handleWin = getHandleWin(fromType);
	switch(ClassMessageObj.messageType){
		case 1:
				handleWin.$("#SysMsgContainerTR").show();
				handleWin.$("#SysMsgContainer").html(ClassMessageObj.content);
				break;
		case 3:
				handleWin.$("#PerMsgContainerTR").show();
				handleWin.$("#PerMsgContainer").html(ClassMessageObj.content);
				break;
	}
 	DivSetVisible(true, fromType);
}

/**
 * \u663e\u793a\u7cfb\u7edf\u6d88\u606f
 */
function showSysMessage(msgList, allMsgCountStr, fromType,_projectleaveProperties,_deptleaveProperties,_spaceleaveProperties,_calleaveProperties){
	if((msgList == null || msgList.length < 1) && (_projectleaveProperties == null || _projectleaveProperties.size < 1) && (_deptleaveProperties == null || _deptleaveProperties.size < 1) && (_spaceleaveProperties == null || _spaceleaveProperties.size < 1) && (_calleaveProperties == null || _calleaveProperties.size() < 1)){
		return;
	}
	var _pdc = _projectleaveProperties.size()+_deptleaveProperties.size()+_spaceleaveProperties.size()+_calleaveProperties.size();
	var count = msgList.length+_pdc;
	var height = getHeight(count);
	var systemMsgContent = sysMessageListToHTML(msgList, false, fromType,_pdc);
	var _projectContent = leaveWordMessageListToHTML(_projectleaveProperties, false, fromType,1);
	var _deptleaveContent = leaveWordMessageListToHTML(_deptleaveProperties, false, fromType,2);
	var _spaceleaveContent = leaveWordMessageListToHTML(_spaceleaveProperties, false, fromType,4);
	var _calleaveContent = leaveWordMessageListToHTML(_calleaveProperties, false, fromType,3);
	
	var strBuffer = new StringBuffer();
	strBuffer.append("<table width='280' id='sysTable' border='0' class='msgborder' cellspacing='0' cellpadding='0'>");
	strBuffer.append("<tr>");
	strBuffer.append("<td height='100%' class='msgContentSys'>");
	strBuffer.append("<div class='msgContentDivHeader'>");
  	strBuffer.append(message_header_system_label).append("(<span id='sysMsgCountSpan'>").append(allMsgCountStr).append("</span>").append(message_header_unit_label).append(")");
  	strBuffer.append("</div>");
	strBuffer.append("<div id='sysMsgContentDiv' style='width:100%;height:").append(height).append(";overflow-x:hidden;overflow-y:auto;'>");
	strBuffer.append(systemMsgContent+_projectContent+_deptleaveContent+_spaceleaveContent+_calleaveContent);
	strBuffer.append("</div>");
	strBuffer.append("</td>");
	strBuffer.append("</tr>");
	strBuffer.append("</table>");
	var MSG = new CLASS_MESSAGE("", "", "", "", strBuffer.toString(), 1);
	strBuffer.clear();
	return MSG;
}
/**
 * \u5c06\u7559\u8a00\u677f/\u65e5\u7a0b\u4e8b\u4ef6\u6d88\u606f\u8f6c\u6362\u4e3aHTML type:(1\u9879\u76ee 2\u90e8\u95e8 3\u65e5\u7a0b 4\u7a7a\u95f4)
 */
function leaveWordMessageListToHTML(leaveProperties, printHRFlag, fromType,type){
	var sysMsgStrBuffer = new StringBuffer();
	var handleWin = getHandleWin(fromType);
	var _keys = leaveProperties.keys();
	var _length = _keys.size();
	for(var j = 0; j < _length; j ++){
		var key = _keys.get(j);
		var msgList = leaveProperties.get(key);
		var _msg = msgList.get(0);
		var referenceId = _msg.referenceId;
		var userHistoryMessageId = _msg.userHistoryMessageId;
		var datetime = new Date(parseInt(_msg.creationDateTime, 10)).format("MM-dd HH:mm");
		var countStr = "count" + _msg.referenceId;
		var tdStr = "td" + _msg.referenceId;
		var timeStr = "time" + _msg.referenceId;
		var deptNameSpan = "deptNameSpan"+_msg.referenceId;
		var countSpan = getCtpTop().document.getElementById(countStr);
		var content = _msg.content;
		var deptName ='';
		var label = handleWin.v3x.getMessage("V3XLang.leaveword");
		if(type == 1){
			deptName = getProjectName(referenceId);
		}
		if(type == 2){
			deptName = getDepartmentName(referenceId);	
		}
		if(type == 3){
			var deptNameTemp = getEventName(referenceId);
			label = handleWin.v3x.getMessage("V3XLang.reply");
			deptName  = "&lt;"+deptNameTemp+"&gt;";
		}
		if(type == 4){
			deptName = getSpaceName(referenceId);	
		}
		if(countSpan){
			var tdObj = getCtpTop().document.getElementById(tdStr);
			var timeObj = getCtpTop().document.getElementById(timeStr);
			var deptNameObj = getCtpTop().document.getElementById(deptNameSpan);
			var tt = parseInt(countSpan.getAttribute('title'))+msgList.size();
			countSpan.innerHTML = tt;
			countSpan.setAttribute('title',tt);
			tdObj.innerHTML = "<div class='default-a' style='text-decoration: none;width:240px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;'>"+content+"</div>";
			timeObj.innerHTML = datetime;
			deptNameObj.setAttribute('title',deptName);
			deptNameObj.innerHTML = deptName;
			
		}else{
			sysMsgStrBuffer.append("<table width='100%' id='sysMsgTable" + userHistoryMessageId+"'");
			if(_msg.messageLink){
				if(fromType == "a8"){
					sysMsgStrBuffer.append(" class='hand' typeAttr='leaveWord' countAttrId='"+referenceId+"'  onclick='getCtpTop().openDocument(\"").append(_msg.messageLink).append("\", \"").append(_msg.linkOpenType).append("\");getCtpTop().updateMessageState(\"").append(userHistoryMessageId).append("\", this, \"" + fromType + "\");getCtpTop().afterClickMessage(\"").append(userHistoryMessageId).append("\", \"" + fromType + "\")'");
				}else{
					var link = msgList[i].messageLink;
					var strs = link.split("|");
					var linkType = messageLinkConstants.get(strs[0]);
					linkType = linkType.substring(7, linkType.length);
			    	if(linkType){
			       		var l = 1;
						while(true){
							var param = strs[l];
							if(!param){
								break;
							}
							var regEx = eval("messageRegEx_" + (l - 1));
							linkType = linkType.replace(regEx, param);
							l ++;
						}
						sysMsgStrBuffer.append(" class='hand' onclick='openSysMessage(\"").append(linkType).append("\");updateMessageState(\"").append(userHistoryMessageId).append("\", this, \"" + fromType + "\");afterClickMessage(\"").append(userHistoryMessageId).append("\", \"" + fromType + "\")'");
					}
				}
			}
			sysMsgStrBuffer.append("><input type='hidden' name='countMessages'/>");
			sysMsgStrBuffer.append("<tr>");
				sysMsgStrBuffer.append("<td class='default-a' style='text-decoration: none;font-weight: bold;'>");
//				sysMsgStrBuffer.append("<span title='"+deptName+"' id='"+deptNameSpan+"'>"+deptName.getLimitLength(20,'...')+"</span>");
				sysMsgStrBuffer.append("<span title='"+deptName+"' id='"+deptNameSpan+"'>"+deptName+"</span>");
				sysMsgStrBuffer.append(label+"(<span name='leavewordCount' id='"+countStr+"' title='"+msgList.size()+"'>"+msgList.size()+"</span>)");
				sysMsgStrBuffer.append("</td>");
				sysMsgStrBuffer.append("<td id='"+timeStr+"' align='right' nowrap='nowrap' class='default-a' style='text-decoration: none;'>");
				sysMsgStrBuffer.append(datetime);
				sysMsgStrBuffer.append("</td>");
			sysMsgStrBuffer.append("</tr>");
			sysMsgStrBuffer.append("<tr>");
			sysMsgStrBuffer.append("<td id='"+tdStr+"' colspan='2'><div class='default-a' style='text-decoration: none;width:240px;overflow:hidden;text-overflow:ellipsis;'>");
			sysMsgStrBuffer.append(content);
			sysMsgStrBuffer.append("</div></td>");
			sysMsgStrBuffer.append("</tr>");
			sysMsgStrBuffer.append("</table>");
			if(j < _length - 1 || printHRFlag){
				sysMsgStrBuffer.append("<hr size='1' class='border-top' style='padding-top:8px; border-left:0;border-right:0;' />");
			}
		}
	}
	
	var resultStr = sysMsgStrBuffer.toString();
	sysMsgStrBuffer.clear();
	return resultStr;
}
/**
 * \u663e\u793a\u5728\u7ebf\u6d88\u606f
 */
function showPerMessage(fromType, isNotice){
	var count = 1;
	var personMsgContent = "";
	var height = "30";
	if(!isNotice){
		count = msgProperties.size();
		if(count < 1){
			return;
		}
		height = getPerMessageHeight();
		personMsgContent = perMessageListToHTML(false, fromType);
	}
  	var strBuffer = new StringBuffer();
  	strBuffer.append("<table id='perTable' width='280' border='0' cellspacing='0' cellpadding='0' class='msgborder'>");
  	strBuffer.append("<tr>");
  	strBuffer.append("<td height='100%' class='msgContentPerson'>");
  	strBuffer.append("<div class='msgContentDivHeader'>");
  	strBuffer.append(message_header_person_label).append("(<span id='perMsgCountSpan'>" + count + "</span>").append(message_header_unit_label).append(")");
  	strBuffer.append("</div>");
  	strBuffer.append("<div id='personMsgContentDiv' style='width:100%;height:").append(height).append("px;overflow:auto;overflow-x:hidden;'>");
  	strBuffer.append(personMsgContent);
  	strBuffer.append("</div>");
  	strBuffer.append("</td>");
  	strBuffer.append("</tr>");
  	strBuffer.append("</table>");
  	var MSG = new CLASS_MESSAGE("", "", "", "", strBuffer.toString(), 3);
  	strBuffer.clear();
  	return MSG;
}

function showPerNotice(random, content, fromType){
	try{
	    var msgStrBuffer = new StringBuffer();
		msgStrBuffer.append("<table width='100%' border='0' cellspacing='0' cellpadding='0' id='" + random + "'>");
		msgStrBuffer.append("<tr valign='middle' class='hand' onclick='removeMsgFromBox(\"person\", \"" + random + "\", \"\", \"" + fromType + "\");'>");
		msgStrBuffer.append("<td align='left' class='messageHeaderContent' colspan='3' title='" + content + "'>" + content.getLimitLength(25, "...") + "</td>");
		msgStrBuffer.append("</tr>");
		msgStrBuffer.append("</table>");
		
		var handleWin = getHandleWin(fromType);
		if(handleWin.isPerMessageWindowEyeable){
			msgStrBuffer.append("<hr size='1' class='border-top margin_tb_5' style='border-left:0;border-right:0;' />");
			handleWin.$("#personMsgContentDiv").prepend(msgStrBuffer.toString());
			var height = getPerMessageHeight();
			handleWin.$("#personMsgContentDiv").height(height);
			var count = msgProperties.size() + noticeProperties.size();
			handleWin.$("#perMsgCountSpan").text(count);
			DivSetVisible(true, fromType);
		}else{
			var msgObj = showPerMessage(fromType, true);
			ShowMessageWindow(msgObj, fromType);
			handleWin.$("#personMsgContentDiv").prepend(msgStrBuffer.toString());
			handleWin.isPerMessageWindowEyeable = true;
		}
		
		msgStrBuffer.clear();
		
		handleWin.playMessageRadio();
		if(fromType == "a8"){
			getCtpTop().startActionTitle();
		}
	}catch(e){}
}

/**
 * \u5c06\u7cfb\u7edf\u6d88\u606f\u8f6c\u6362\u4e3aHTML
 */
function sysMessageListToHTML(msgList, printHRFlag, fromType,_pdc){
	var sysMsgStrBuffer = new StringBuffer();
	for (var i = 0; i < msgList.length; i++) {
		var userHistoryMessageId = msgList[i].userHistoryMessageId;
		var datetime = new Date(parseInt(msgList[i].creationDateTime, 10)).format("MM-dd HH:mm");
		sysMsgStrBuffer.append("<table width='100%' id='sysMsgTable" + userHistoryMessageId + "'><input type='hidden' name='countSysMessages'/>");
		sysMsgStrBuffer.append("<tr valign='top'");
		if(msgList[i].messageLink){
			if(fromType == "a8"){
				sysMsgStrBuffer.append(" class='hand' onclick='getCtpTop().openDocument(\"").append(msgList[i].messageLink).append("\", \"").append(msgList[i].linkOpenType).append("\");getCtpTop().updateMessageState(\"").append(userHistoryMessageId).append("\", this, \"" + fromType + "\");getCtpTop().afterClickMessage(\"").append(userHistoryMessageId).append("\", \"" + fromType + "\")'");
			}else{
				var link = msgList[i].messageLink;
				var strs = link.split("|");
				var linkType = messageLinkConstants.get(strs[0]);
				linkType = linkType.substring(7, linkType.length);
		    	if(linkType){
		       		var l = 1;
					while(true){
						var param = strs[l];
						if(!param){
							break;
						}
						var regEx = eval("messageRegEx_" + (l - 1));
						linkType = linkType.replace(regEx, param);
						l ++;
					}
					sysMsgStrBuffer.append(" class='hand' onclick='openSysMessage(\"").append(linkType).append("\");updateMessageState(\"").append(userHistoryMessageId).append("\", this, \"" + fromType + "\");afterClickMessage(\"").append(userHistoryMessageId).append("\", \"" + fromType + "\")'");
				}
			}
		}
		sysMsgStrBuffer.append(">");
		sysMsgStrBuffer.append("<td id='LeftTD").append(userHistoryMessageId).append("' width='70%' class='default-a' style='text-decoration: none; word-wrap: break-word;'>");
		sysMsgStrBuffer.append("<div width='196px'>");
		if(msgList[i].importantLevel == '2' || msgList[i].importantLevel == '3'){
			sysMsgStrBuffer.append("<span class='ico16  important" + msgList[i].importantLevel + "_16'></span>");
		}
		sysMsgStrBuffer.append(msgList[i].content);
		sysMsgStrBuffer.append("</div>");
		sysMsgStrBuffer.append("</td>");
		var senderName = "";
		if (msgList[i].senderId != '-1') {
			senderName = msgList[i].senderName + msgList[i].accountShortName;
		} else {
			senderName = msgList[i].senderName;
		}
		sysMsgStrBuffer.append("<td nowrap id='RightTD").append(userHistoryMessageId).append("' width='30%' align='right' style='color: #000000; text-decoration: none;' title='" + senderName + "'>").append(senderName.getLimitLength(12, "...")).append("<br>").append(datetime);
		sysMsgStrBuffer.append("</td>");
		sysMsgStrBuffer.append("</tr>");
		sysMsgStrBuffer.append("</table>");
		if(i < msgList.length - 1 || printHRFlag || (_pdc!=null && _pdc>0)){
			sysMsgStrBuffer.append("<hr size='1' class='border-top' style='padding-top:12px; border-left:0;border-right:0;' />");
		}
	}
	var resultStr = sysMsgStrBuffer.toString();
	sysMsgStrBuffer.clear();
	return resultStr;
}

/**
 * \u5c06\u5728\u7ebf\u6d88\u606f\u8f6c\u6362\u4e3aHTML
 */
function perMessageListToHTML(printHRFlag, fromType){
	var handleWin = getHandleWin(fromType);
	var msgStrBuffer = new StringBuffer();
	var msgInstanceKeys = msgProperties.keys();
	var msgFromCount = msgInstanceKeys.size();//\u804a\u5929\u5bf9\u8c61\u4e2a\u6570
	for(var i = 0; i < msgFromCount; i++){
		var key = msgInstanceKeys.get(i);
		var msg = msgProperties.get(key);
		var msgCount = msg.size();//\u5f53\u524d\u804a\u5929\u5bf9\u8c61\u7684\u6d88\u606f\u4e2a\u6570
		var latestMsg = msg.getLast();
		var tID  = key;
		var tableId = tID + "_Table";
		var tName = latestMsg.name.escapeHTML();
		var senderName = "";
		if (latestMsg.type != 1) {
			senderName = latestMsg.username.escapeHTML() + ":";
		}
		
		var msgContent = "";
		if (latestMsg.atts.size() > 0) {
			msgContent = "\u7ed9\u60a8\u53d1\u9001\u4e86\u6587\u4ef6";
		} else if (latestMsg.microtalk != null) {
			msgContent = "\u7ed9\u60a8\u53d1\u9001\u4e86\u8bed\u97f3";
		} else {
			msgContent = latestMsg.content.escapeHTML();
			for(var j = 0; j < face_texts_replace.length; j++){
				msgContent = msgContent.replace(face_texts_replace[j], "<img src='" + v3x.baseURL + "/apps_res/uc/chat/image/face/" + (j + 1) + ".gif' />");
			}
		}
		
		if(handleWin.$("#" + tableId).length > 0){
			handleWin.$("#" + tableId + "CountSpan").text(msgCount);
			handleWin.$("#" + tableId + "DateSpan").text(latestMsg.time);
			handleWin.$("#" + tableId + "ContentSpan").html(senderName + msgContent);
		}else{
			msgStrBuffer.append("<table width='100%' style='*width:250px;' class='hand' height='50' border='0' cellspacing='0' cellpadding='0' id='" + tableId + "' onclick='removeMsgFromBox(\"person\", \"" + tableId + "\", \"" + tID + "\", \"" + fromType + "\");openWinIM(\"" + tName + "\", \"" + latestMsg.jid + "\")'>");
			msgStrBuffer.append("<tr valign='top'>");
			msgStrBuffer.append("<td width='40%' align='left' class='messageHeaderContent default-a'><b><a>" + tName + "(<span id='" + tableId + "CountSpan'>" + msgCount + "</span>" + message_header_unit_label + ")</a></b></td>");
			msgStrBuffer.append("<td width='50%' align='right' class='messageHeaderContent'><span id='" + tableId + "DateSpan'>" + latestMsg.time + "</span></td>");
			msgStrBuffer.append("</tr>");
			msgStrBuffer.append("<tr valign='top'>");
			msgStrBuffer.append("<td colspan='3' align='left' class='messageBodyContent default-a'><div id='" + tableId + "ContentSpan'><a>" + senderName + msgContent + "</a></div></td>");
			msgStrBuffer.append("</tr>");
			msgStrBuffer.append("</table>");
			
			if(i < msgFromCount - 1 || printHRFlag){
				msgStrBuffer.append("<hr size='1' class='border-top' style='border-left:0;border-right:0;' />");
			}
			
			var count = msgProperties.size() + noticeProperties.size();
			handleWin.$("#perMsgCountSpan").text(count);
		}
	}
	
	var resultStr = msgStrBuffer.toString();
	msgStrBuffer.clear();
	return resultStr;
}

/**
 * \u6700\u5c0f\u5316\u6d88\u606f\u7a97\u53e3
 */
function changeMessageWindow(fromType){
	if(fromType == "a8"){
		var msgDiv = getCtpTop().$("#msgWindowDIV");
		var msgMaxDiv = getCtpTop().$("#msgWindowMaxDIV");
		var DivShim4MsgWindow = getCtpTop().$("#DivShim4MsgWindow");
		if(msgDiv.is(":hidden")){
			msgDiv.show();
			msgMaxDiv.hide();
			DivShim4MsgWindow.show();
		}else{
			msgDiv.hide();
			msgMaxDiv.show();
			DivShim4MsgWindow.hide();
		}
	}else{
		window.external.js_btnClickMinx();
	}
}

/**
 * \u5173\u95ed\u6d88\u606f\u7a97\u53e3
 */
function destroyMessageWindow(isClear, fromType){
	if(isClear == "true"){
		msgProperties.clear();//\u6e05\u7a7a\u9875\u9762\u5b58\u50a8\u7684\u5728\u7ebf\u6d88\u606f
	}
	
	var handleWin = getHandleWin(fromType);
	
	handleWin.$("#PerMsgContainer").html("");
	handleWin.isPerMessageWindowEyeable = false;
	
	handleWin.$("#SysMsgContainer").html("");
	handleWin.isSysMessageWindowEyeable = false;
	
	//\u6027\u80fd\u4f18\u5316:\u53bb\u6389\u53f3\u4e0b\u89d2\u7cfb\u7edf\u6d88\u606f\u7684\u672a\u8bfb\u6570\u91cf
	/*if(fromType == "a8"){
		getCtpTop().$("#notReadSysCountSpan").hide();
	}*/
	
	handleWin.$("#msgWindowDIV").hide();
	var DivRefIframe = handleWin.$("#DivShim4MsgWindow");
	DivRefIframe.hide();
	if(fromType == "a8"){
		getCtpTop().standardTitleFun();
	}else{
		window.external.js_btnClickClose();
	}
}

/**
 * \u5982\u679c\u4e2a\u4eba\u8bbe\u7f6e"\u6d88\u606f\u67e5\u770b\u540e\u4ece\u6d88\u606f\u6846\u4e2d\u79fb\u51fa",\u5219\u7cfb\u7edf\u6d88\u606f\u70b9\u51fb\u540e\u4ece\u6d88\u606f\u6846\u4e2d\u79fb\u51fa,\u5426\u5219\u53ea\u6539\u53d8\u6d88\u606f\u989c\u8272
 */
function afterClickMessage(index, fromType){
	var handleWin = getHandleWin(fromType);
	if(handleWin.msgClosedEnable){
		removeMsgFromBox("system", index, "", fromType);
	}else{
		changeTRColor(index, fromType);
	}
}

/**
 * \u6d88\u606f\u70b9\u51fb\u540e\u4ece\u6d88\u606f\u6846\u4e2d\u79fb\u9664,\u6d88\u606f\u603b\u6570\u505a\u76f8\u5e94\u51cf\u5c11
 */
function removeMsgFromBox(type, index, tID, fromType){
	var handleWin = getHandleWin(fromType);
	var divId = "sysMsgContentDiv";
	var tableId = "sysMsgTable" + index;
	var spanId = "sysMsgCountSpan";
	if(type == "person"){
		divId = "personMsgContentDiv";
		tableId = index;
		spanId = "perMsgCountSpan";
		if(tID){
			msgProperties.remove(tID);
		}else{
			noticeProperties.remove(tableId);
		}
	}
	
	//\u79fb\u9664\u6d88\u606f
	var msgContentDiv = handleWin.document.getElementById(divId);
	var msgTable = handleWin.document.getElementById(tableId);
	var msgChildren = msgContentDiv.children;
	var currentMsgCount = -1;
	for(var i = 0; i < msgChildren.length; i += 2){
		if(msgTable == msgChildren[i]){
			currentMsgCount = i;
			break;
		}
	}
	if(currentMsgCount != -1 && msgChildren.length != 1){
		if(currentMsgCount != msgChildren.length - 1){
			msgContentDiv.removeChild(msgChildren[currentMsgCount + 1]);
		}else{
			msgContentDiv.removeChild(msgChildren[currentMsgCount - 1]);
		}
		msgContentDiv.removeChild(msgTable);
	}else{
		msgContentDiv.removeChild(msgTable);
	}
	
	//\u66f4\u6539\u6d88\u606f\u603b\u6570
	var countSpanObj = handleWin.$("#" + spanId);
	var originalCount = parseInt(countSpanObj.text()) - 1;
	if(originalCount == 0){
		colseMessageWindow(type, fromType);
		return;
	}
	countSpanObj.text(originalCount);
	
	//\u66f4\u6539\u6d88\u606f\u9ad8\u5ea6
	var height = getHeight(originalCount);
	if(type == "person"){
		height = getPerMessageHeight();
	}
	handleWin.$("#" + divId).height(height);
	
	DivSetVisible(false, fromType);
}

/**
 * \u7cfb\u7edf\u6d88\u606f\u70b9\u51fb\u540e\u6539\u53d8\u989c\u8272
 */
function changeTRColor(index, fromType){
	var handleWin = getHandleWin(fromType);
	handleWin.$("#LeftTD" + index).css("color", "#666666");
	handleWin.$("#RightTD" + index).css("color", "#666666");
}

/**
 * \u5173\u95ed\u6d88\u606f
 */
function colseMessageWindow(type, fromType){
	var handleWin = getHandleWin(fromType);
	if(type == "system"){
		handleWin.$("#SysMsgContainer").html("");
		handleWin.$("#SysMsgContainerTR").hide();
		handleWin.isSysMessageWindowEyeable = false;
	}else if(type == "person"){
		handleWin.$("#PerMsgContainer").html("");
		handleWin.$("#PerMsgContainerTR").hide();
		handleWin.isPerMessageWindowEyeable = false;
	}
	DivSetVisible(false, fromType);
}

/**
 * \u6d88\u606f\u6846\u663e\u793a/\u9690\u85cf
 */
function DivSetVisible(state, fromType){
	var handleWin = getHandleWin(fromType);
	var DivRef = handleWin.$("#msgWindowDIV");
	var DivRefIframe = handleWin.$("#DivShim4MsgWindow");
	var helperTObj = handleWin.$("#helperTable");
	if(state){
		if(fromType == "a8"){
			getCtpTop().$("#msgWindowMaxDIV").hide();
		}
		DivRef.show();
		DivRef.height(helperTObj.height());
		DivRefIframe.height(helperTObj.height()).show();
		if(fromType == "genius"){
			resizeMessageWindow(DivRef.height());
		}
	}else{
		if(handleWin.isSysMessageWindowEyeable == false && handleWin.isPerMessageWindowEyeable == false){//\u7cfb\u7edf\u6d88\u606f\u548c\u5728\u7ebf\u6d88\u606f\u90fd\u5173\u95ed
			destroyMessageWindow("false", fromType);
		}else{//\u5173\u95ed\u4e00\u4e2a
			DivRef.height(helperTObj.height());
			DivRefIframe.height(helperTObj.height()).show();
			if(fromType == "genius"){
				resizeMessageWindow(DivRef.height());
			}
		}
	}
}

/**
 * \u8ba1\u7b97\u7cfb\u7edf\u6d88\u606f\u6846\u9ad8\u5ea6
 */
function getHeight(count){
	return (count > 4) ? "188px" : (count * 60) + "px";
}

/**
 * \u8ba1\u7b97\u5728\u7ebf\u6d88\u606f\u6846\u9ad8\u5ea6
 */
function getPerMessageHeight(){
	var height = msgProperties.size() * 60 + noticeProperties.size() * 35;
	if (height > 188) {
		height = 188;
	}
	return height;
}

/**
 * \u5982\u679c\u662f\u5f53\u65e5\u5219\u663e\u793aHH:mm,\u5982\u679c\u975e\u5f53\u65e5\u5219\u663e\u793ayyyy-MM-dd HH:mm
 */
function showDatetime(datetime){
	var date1 = new Date(parseInt(datetime, 10)).format("yyyy-MM-dd");
	var date2 = new Date().format("yyyy-MM-dd");
	var dateStyle = "HH:mm:ss";
	if(date1 != date2){
		dateStyle = "yyyy-MM-dd HH:mm:ss";
	}
	return new Date(parseInt(datetime, 10)).format(dateStyle);
}

function getHandleWin(fromType){
	return fromType == "a8" ? getCtpTop() : window;
}

/**
 * \u83b7\u53d6\u8ba8\u8bba\u7ec4\u540d\u79f0
 */
function getTeamName(type, id){
	var requestCaller = new XMLHttpRequestCaller(this, "ajaxMessageController", "getTeamName", false);
	requestCaller.addParameter(1, "String", type);
	requestCaller.addParameter(2, "Long", id);
	return requestCaller.serviceRequest();
}
/**
 * \u83b7\u53d6\u90e8\u95e8\u540d\u79f0
 */
function getDepartmentName(id){
	var requestCaller = new XMLHttpRequestCaller(this, "ajaxGuestbookManager", "ajaxGetDepartmentName", false);
	requestCaller.addParameter(1, "long", id);
	return requestCaller.serviceRequest();
}
/**
 * \u83b7\u53d6\u7a7a\u95f4\u540d\u79f0
 */
function getSpaceName(id){
	var requestCaller = new XMLHttpRequestCaller(this, "ajaxGuestbookManager", "ajaxGetSpaceName", false);
	requestCaller.addParameter(1, "long", id);
	return requestCaller.serviceRequest();
}
/**
 * \u83b7\u53d6\u9879\u76ee\u540d\u79f0
 */
function getProjectName(id){
	var requestCaller = new XMLHttpRequestCaller(this, "projectManager", "ajaxGetProjectName", false);
	requestCaller.addParameter(1, "long", id);
	return requestCaller.serviceRequest();
}
/**
 * \u83b7\u53d6\u4e8b\u4ef6\u540d\u79f0
 */
function getEventName(id){
  var requestCaller = new XMLHttpRequestCaller(this, "ajaxCalEventManager", "ajaxGetEventName", false);
  requestCaller.addParameter(1, "long", id);
	return requestCaller.serviceRequest();
}
/**
 * \u70b9\u51fb\u7cfb\u7edf\u6d88\u606f\u65f6\u66f4\u65b0\u672a\u8bfb\u72b6\u6001
 */
function updateMessageState(id, obj, fromType){
	if(typeof(id) == "undefined" || id == null || id  == ""){
		return;
	}
	var handleWin = getHandleWin(fromType);
	//\u53ea\u7b2c\u4e00\u6b21\u70b9\u51fb\u66f4\u65b0\u6570\u636e\u5e93
	if(handleWin.$(obj).attr("hasClicked") != "true"){
		updateSystemMessageState(id);
		handleWin.$(obj).attr("hasClicked", "true");
	}
}

/**
 * \u66f4\u65b0\u7cfb\u7edf\u6d88\u606f\u5df2\u8bfb\u72b6\u6001
 */
function updateSystemMessageState(id){
	var requestCaller = new XMLHttpRequestCaller(this, "ajaxMessageController", "updateSystemMessageState", false);
	requestCaller.addParameter(1, "long", id);
	requestCaller.serviceRequest();
}

/**************************************** \u5728\u7ebf\u6d88\u606f\u9875\u9762\u95ea\u70c1start ****************************************/
var myIntervalTitle = null;
var standardTitle = null;
$(document).ready(function(){
    try {
    standardTitle = document.title;
  } catch (e) {
    standardTitle = '';
  }
});

var step = 0;
function flash_title(){
	step++
	if (step == 3) {step = 1}
	if (step == 1) {
		if(productVersion == "A8"){
			document.title = 'A8-V5';
		}else if(productVersion == 'A6'){
			document.title = 'A6-V5';
		}else{
			document.title = 'A8-V5';
		}
	}
	if (step == 2) {document.title = standardTitle}
}

function startActionTitle(){
	if(!myIntervalTitle){
		myIntervalTitle = window.setInterval("flash_title()", 1000);
	}
}

function standardTitleFun(){
	if(!standardTitle){
		standardTitle = document.title
	}
	
	document.title = standardTitle;
	
	if(myIntervalTitle != null){
		window.clearInterval(myIntervalTitle);
		document.title = standardTitle;
		myIntervalTitle = null;
	}
}
/**************************************** \u5728\u7ebf\u6d88\u606f\u9875\u9762\u95ea\u70c1end ****************************************/

/**************************************** \u64ad\u653e\u58f0\u97f3start ****************************************/
function playMessageRadio(){
	if(isEnableMsgSound){
		$("#playSoundHelper").attr("src", v3x.baseURL + "/playSound.htm");
		try{
			//\u89e3\u51b3IE6\u6062\u590d\u7a97\u53e3\u91cd\u590d\u64ad\u653e\u58f0\u97f3\u7684\u95ee\u9898
			window.setTimeout("clearMessageRadio()", 2000);
		}catch(e){
			
		}
	}else{
		clearMessageRadio();
	}
}

function clearMessageRadio(){
	$("#playSoundHelper").attr("src", "");
}
/**************************************** \u64ad\u653e\u58f0\u97f3end ****************************************/

/**
 * \u5728\u7ebf\u4ea4\u6d41\u9875\u9762
 */
var onlineWin = null;
function onlineMember(){
	if (onlineWin && !onlineWin.closed) {
		onlineWin.focus();
    } else {
    	var left = 140;
    	var top = (window.screen.availHeight - 600) / 2 - 10;
        onlineWin = window.open(_ctxPath + "/online.do?method=showOnlineUser", "", "left=" + left + ",top=" + top + ",width=600,height=600,location=no,menubar=no,resizable=no,scrollbars=no,titlebar=no,toolbar=no,status=no,depended=yes,alwaysRaised=yes");
    }
}
var ContantsOutNumberMinute = 30;//\u8d85\u65f6\u65f6\u95f4(\u5206\u949f)
var ContantsOutNumber = 10;//\u8bf7\u6c42\u5931\u8d25\u6b21\u6570

var messageTask = null;
var isFirstTask = true;


/**
 * \u5f00\u59cb\u8bfb\u53d6\u6d88\u606f
 */
function initMessage(messageIntervalSecond){
	if(!messageIntervalSecond || messageIntervalSecond < 30){
		messageIntervalSecond = 30;
	}
	
	ContantsOutNumber = ContantsOutNumberMinute * 60 / messageIntervalSecond;
	
	messageTask = new Task(messageIntervalSecond);
	setTimeout("getMessage()", 10 * 1000);
}

/**
 * \u4efb\u52a1
 */
function Task(messageIntervalSecond){
	this.intervalSecond = messageIntervalSecond * 1000;
	this.iTimeoutID = null;
	this.outNumber = 0;
}

/**
 * \u542f\u52a8\u4efb\u52a1
 */
Task.prototype.start = function(){
	this.iTimeoutID = window.setTimeout("getMessage()", this.intervalSecond + parseInt(Math.random() * 5) * 1000);
	isFirstTask = false;
}

/**
 * \u7ec8\u6b62\u4efb\u52a1
 */
Task.prototype.clear = function(){
	if(this.iTimeoutID){
		window.clearTimeout(this.iTimeoutID);
		this.iTimeoutID = null;
	}
}

/**
 * \u9000\u51fa
 */
Task.prototype.showOut = function(){
	showOnlineNum("X");
	this.clear();
}

/**
 * \u63d0\u793a\u9000\u51fa
 */
Task.prototype.out = function(_status){
	this.outNumber++;
	
	showOnlineNum("X");
	
	if(!isA8geniusMsg){
		//getCtpTop().isOpenCloseWindow = false;
	}
	
	if(this.outNumber > ContantsOutNumber){
		_status = _status || "";
		if(window.confirm($.i18n("onlineMessage_alert_serverOver", _status))){
			if(!isA8geniusMsg){
				getCtpTop().logout(true);
			}else{
				window.external.js_OnLogOut("");
			}
		}
	}else{
		this.start();
	}
}

function getMessage(){
	showOnlineNum("...");
	new GetMessage().run();
}

function GetMessage(){
	this.name = "doGetMessage"
}

GetMessage.prototype.run = function(){
  	try{
		var requestCaller = new XMLHttpRequestCaller(this, null, null, true, "GET", true, "/getAJAXMessageServlet");
		requestCaller.filterLogoutMessage = false;
		requestCaller.closeConnection = true;
		requestCaller.serviceRequest();
		if(!isA8geniusMsg){
			//\u6279\u91cf\u4e0b\u8f7d
		  /**
		   * TODO:\u6279\u91cf\u4e0b\u8f7d
		   */
  		//	getCtpTop().contentFrame.topFrame.showDowloadPicture("quartz");
		}
	}catch(e){
		messageTask.out();
	}
}

GetMessage.prototype.showAjaxError = function(_status){
	messageTask.out(_status);
};

GetMessage.prototype.invoke = function(result){
	if(result){
		var resultVar = null;
		try {
			eval("resultVar = " + result);
		}catch(e){
			
		}
		
		if(!resultVar){
			if(result.indexOf("[LOGOUT]") == 0){//\u7cfb\u7edf\u901a\u77e5\u4e0b\u7ebf
				messageTask.clear();
				if(!isA8geniusMsg){
					getCtpTop().showLogoutMsg(result.substring(8));
				}else{
					window.external.js_OnLogOut(result.substring(8));
				}
				return;
			}else if(result.indexOf("[LOGWARN]") == 0){//\u7cfb\u7edf\u4e0b\u7ebf\u524d,\u901a\u77e5\u7528\u6237\u4fdd\u5b58\u5f53\u524d\u6570\u636e
				alert(result.substring(9));
			}else{//\u672a\u77e5\u60c5\u51b5
				//alert(result);
			}
		}else{
			var onlineNumber = resultVar["N"] || "0";
			var processNewUserMessages = resultVar["M"];
			
			var C = resultVar["C"] || "0";
			var messagesCounter = parseInt(C, 10);
			
			//\u6027\u80fd\u4f18\u5316:\u53bb\u6389\u53f3\u4e0b\u89d2\u7cfb\u7edf\u6d88\u606f\u7684\u672a\u8bfb\u6570\u91cf
			//var R = resultVar["R"] || "0";
			//getCtpTop().notReadSystemMessageCount = parseInt(R, 10);
			
			showOnlineNum("" + onlineNumber);
			showOnlineInfo(processNewUserMessages, messagesCounter);
		}
	}
	
	messageTask.outNumber = 0;//\u6210\u529f\u8fd4\u56de\u6570\u636e\uff0c\u8d85\u65f6\u8ba1\u6570\u5668\u6e05\u96f6
	messageTask.start();//\u5f00\u59cb\u65b0\u7684\u4e00\u6b21\u8f6e\u8be2
};

/**
 * \u663e\u793a\u5728\u7ebf\u4eba\u6570
 */
function showOnlineNum(text){
	try{
		if(text){
			if(!isA8geniusMsg){
				$("#onlineNum").text(text);
				$("#onlineNum_adm").text(text);
			}else{
				window.external.js_OnlineCount(text);
			}
		}
	}catch(e){}
}

/**
 * \u663e\u793a\u6d88\u606f
 */
function showOnlineInfo(messages, messagesCounter){
	try {
	  	if(messages && messages.length > 0){
	   		var messagePerList = new Array();
	    	var messageSysList = new Array();
	    	if(!isA8geniusMsg){
	    		var linkTypes = new Set();
	    	}
	   		var k = 0;
	  		var m = 0;
	  		var isTimeLineObjReset = false;
	  		
	   		for (var i = 0; i < messages.length; i++) {
	   			var message = messages[i];
	   			var referenceId = message["R"];
	   			var userHistoryMessageId = message["H"];
	   			var content = message["C"] || "";
	   			var messageType = message["T"];
		        var senderId = message["S"];
		        var senderName = message["N"];
		        var accountShortName = message["SN"];
		        //\u53d1\u8d77\u8005ID\u4e3a-1\u6807\u793a"\u533f\u540d"
		       	if(senderId == -1 || senderId == "-1"){
		        	senderName = ANNONYMOUS_NAME;
		       	}
		        var receiverId = "";
		        var receiverName = "";
		        var creationDateTime = message["D"];
		        
		        var linkType = message["L"];
		        
		        if(!isA8geniusMsg){
			        // \u65f6\u95f4\u8f74\u5237\u65b0
					if (linkType == "message.link.cal.view"
							|| linkType == "message.link.plan.send"
							|| linkType == "message.link.taskmanage.view"
							|| linkType == "message.link.edoc.sended"
							|| linkType == "message.link.col.pending"
							|| linkType == "message.link.mt.send") {
						isTimeLineObjReset = true;
					}
		        }
		        
		        //\u7cbe\u7075NC\u6d88\u606f\u8fc7\u6ee4\u94fe\u63a5\uff08\u65e0\u6cd5\u6253\u5f00\uff09
		        if (isA8geniusMsg && linkType == "message.link.NC.message") {
		        	linkType = null;
		        }
		        
		        var link = linkType;
		        if(messageType == 0 && linkType){//\u6709\u94fe\u63a5
			        if(!isA8geniusMsg){
			        	linkTypes.add(linkType);
			        }
		        	var l = 0;
					while(true){
						var param = message['P' + l];
						
						if(!param){
							break;
						}
						
						link += "|" + param;
						
						l ++;
					}
		        }
		        
		        var openType = parseInt(message["O"], 10);
		        var atts = message["A"];
		        var importantLevel = message["I"];
		        
		        if(messageType == 0){
		        	if(!(link && link.indexOf("leaveWord") != -1)){
		        		content = content.escapeHTML();
		        	}
		        }else{
		        	creationDateTime = showDatetime(creationDateTime);
		        }
		        
		        var msg = new CLASS_MESSAGE("", "", referenceId, userHistoryMessageId, content, messageType, senderId, senderName, receiverId, receiverName, creationDateTime, link, openType, atts, importantLevel);
		        msg.accountShortName = accountShortName;
		        if(messageType == 1 || messageType == 2 || messageType == 3 || messageType == 4 || messageType == 5){
		        	messagePerList[k ++] = msg;
		        }
		        else if(messageType == 0){
		        	messageSysList[m ++] = msg;
		        }
		    }
	   		
	   		if(isTimeLineObjReset == true && isFirstTask == false){
	   			setTimeout("getCtpTop().timeLineObjReset(getCtpTop().timeLineObj)", 0);
	   		}
	   		
		    if((k + m) > 0){
				var allMsgCountStr = (messagesCounter > (k + m) && messagesCounter > 50) ? "/" + messagesCounter : "";
				if(!isA8geniusMsg){
			    	showMessage(null, messageSysList, allMsgCountStr, "a8");
			    	
			    	if(isFirstTask == false){ //\u7b2c\u4e00\u6b21\uff0c\u4e0d\u7528\u5237\u65b0\u9996\u9875\u680f\u76ee
				     	try{
				     		getCtpTop().refreshSection(linkTypes.toArray());
				     	}catch(e1){
				     		
				     	}
		     		}
				}else{
					showMessage(null, messageSysList, allMsgCountStr, "genius");
				}
		    }
		}
	}catch(e){
		messageTask.clear();
	}
}
/**************************************** IM\u6d88\u606f ****************************************/
//\u6539\u53d8\u4f20\u5165\u53c2\u6570\u7684\u5c5e\u6027
function changeobjattr(o){
	o.removeClass("stopmeeting");
	o.addClass("stopmeetinged");
	o.unbind("click");
	o.attr("disabled",true);
	o.removeAttr("id");
}

function changedIDattr(dID,id){
	var stopmeeting = $("#" + dID + "_Iframe").contents().find("#"+id);
	changeobjattr(stopmeeting);
}

function changeattr(dID){
	var agreemeeting = $("#" + dID + "_Iframe").contents().find("#agreemeeting");
	var formeeting = $("#" + dID + "_Iframe").contents().find("#formeeting");
	var meetingcreater = $("#" + dID + "_Iframe").contents().find("#meetingcreater");
	var meetingcreaterName = $("#" + dID + "_Iframe").contents().find("#meetingcreatername");
	var stopmeeting = $("#" + dID + "_Iframe").contents().find("#stopmeeting");
	
	changeobjattr(agreemeeting);
	changeobjattr(formeeting);
	changeobjattr(stopmeeting);
	
	meetingcreater.removeAttr("id");
	meetingcreaterName.removeAttr("id");
	
	$("#" + dID + "_Iframe").contents().find("#lanchmeeting").val("");
	$("#" + dID + "_Iframe").contents().find("#resavemeeting").val("");
}

function deletemeeting(confKey){
	$.ajax({
		type: "POST",
		url: messageURL+"?method=deletemeeting",
		data: {"confKey": confKey}
	});
}

function addMeetingEvent(type,dID,tID){
	$("#" + dID + "_Iframe").contents().find("#agreemeeting").unbind("click");
	$("#" + dID + "_Iframe").contents().find("#agreemeeting").click(function(){
		getA8Top().sendIMMessage(type, dID, tID, 'A', "","vomeeting");
		changeattr(dID);
		$("#" + dID + "_Iframe").contents().find("#confKey").removeAttr("id");
		$("#" + dID + "_Iframe").contents().find("#resavemeeting").val("");
		$("#" + dID + "_Iframe").contents().find("#lanchmeeting").val("");
	});
	$("#" + dID + "_Iframe").contents().find("#formeeting").unbind("click");
	$("#" + dID + "_Iframe").contents().find("#formeeting").click(function(){
		getA8Top().sendIMMessage(type, dID, tID, 'F', "","vomeeting");
		changeattr(dID);
		$("#" + dID + "_Iframe").contents().find("#confKey").removeAttr("id");
		$("#" + dID + "_Iframe").contents().find("#resavemeeting").val("");
		$("#" + dID + "_Iframe").contents().find("#lanchmeeting").val("");
	});
}
/**
 * \u5728\u7ebf\u6d88\u606f\u5c55\u793a,\u76f4\u63a5\u663e\u793a\u5728\u9875\u7b7e\u4e2d
 */
function showMessageForIM(messagePerList, isFromRightBox){
	var thisMsgProperties = new Properties();
	if(messagePerList != null && messagePerList.length > 0){
		for(var i = 0; i < messagePerList.length; i ++){
  			var message = messagePerList[i];
	  		if(currentUserId != message.senderId){
	  			var key = "";
		  		if(message.messageType == 1){
		  			key = message.senderId;
				}else{
					key = message.referenceId;
				}
			  	if(thisMsgProperties.containsKey(key)){
					thisMsgProperties.get(key).add(message);
			  	}else{
					var thisArrayList = new ArrayList();
					thisArrayList.add(message);
					thisMsgProperties.put(key, thisArrayList);
			  	}
	  		}
	  	}
	}
	
	if(thisMsgProperties.size() > 0){
		var keys = thisMsgProperties.keys();
		for(var j = 0; j < keys.size(); j ++){
			var key1 = keys.get(j);
			var msg = thisMsgProperties.get(key1);
			
			var latestMsg = msg.getLast();
			
			var dID = '';
			var tID = '';
			var tName = '';
			if(latestMsg.messageType == '1'){
				dID = currentUserId + '_' + latestMsg.senderId;
				tID = latestMsg.senderId;
				tName = latestMsg.senderName;
			}else{
				dID = latestMsg.referenceId;
				tID = latestMsg.referenceId;
				tName = getTeamName(latestMsg.messageType, latestMsg.referenceId);
			}
			
			//\u6b64\u5904\u622a\u53d6\u957f\u5ea6\u4e0d\u53ef\u4e71\u6539\uff0c\u5f71\u54cd\u6d88\u606f\u63a5\u6536
			var title = tName.getLimitLength(24, "..").escapeHTML();
			
			if($('#imTabs').tabs('exists', title)){//\u804a\u5929\u9875\u7b7e\u5b58\u5728
				
				var currentPanel = $('#imTabs').tabs('getTab', title);
				var currentTab = currentPanel.panel('options').tab;
				currentTab.removeClass("tabs-selected-off");
				
				for(var k = 0; k < msg.size(); k ++){
					var m = msg.get(k);
					
					//\u9a8c\u8bc1\u89c6\u9891\u4f1a\u8bae\u72b6\u6001
					var aa = $("#" + dID + "_Iframe").contents().find("#resavemeeting");
					var lanchmeeting = $("#" + dID + "_Iframe").contents().find("#lanchmeeting");
					
					//\u5904\u7406\u53d1\u8d77\u89c6\u9891\u4f1a\u8bae
					if(m.content.indexOf("<span class='meeting' id = 'vomeeting'>")!=-1){
						if(aa.val()=="true"){
							$("#" + dID + "_Iframe").contents().find("#vomeeting").removeAttr("id");
							$("#" + dID + "_Iframe").contents().find("#confKey").removeAttr("id");
							$("#" + dID + "_Iframe").contents().find("#meetingcreatername").removeAttr("id");
							changeattr(dID);
						}
						m.content += '<span id=\"agreemeeting\" class=\"stopmeeting\">'+_("MainLang.message_vomeeting_agree")+'</span>&nbsp;&nbsp;<span id=\"formeeting\" class=\"stopmeeting\">'+_("MainLang.message_vomeeting_refuse")+'</span>';
						aa.val("true");
						if($("#" + dID + "_Iframe").contents().find("#lanchmeeting").val()=="true"){
							var stopmeeting = $("#" + dID + "_Iframe").contents().find("#stopmeeting");
							changeobjattr(stopmeeting);
							$("#" + dID + "_Iframe").contents().find("#lanchmeeting").val("");
						}
					}
					
					if(aa.val()=="true" && m.content.indexOf("<script>try{if(vomak==''){stopmeeting('');}}catch(e){}</script>")!=-1){
						
						$("#" + dID + "_Iframe").contents().find("#confKey").removeAttr("id");
						$("#" + dID + "_Iframe").contents().find("#meetingcreatername").removeAttr("id");
						aa.val("");
						changeattr(dID);
					}
					
					if(lanchmeeting.val()=="true" && m.content.indexOf("<script>try{if(vomak==''){sstopmeeting('A');}}catch(e){}</script>")!=-1){
						var iscreater = $("#" + dID + "_Iframe").contents().find("#iscreater");
						var lanchmeetinged = $("#" + dID + "_Iframe").contents().find("#lanchmeetinged");
						var confKey = $("#" + dID + "_Iframe").contents().find("#cconfKey");
						if(lanchmeetinged.val()==""&&iscreater.val()=="true"){
							var url = "/seeyon/message.do?method=joinmeeting&iscreater=true&meeting_id="+currentUserId+"&confKey="+confKey.val();
							window.open(url);
							lanchmeetinged.val("true");
							iscreater.val("");
							lanchmeeting.val("");
						}
						
						$("#" + dID + "_Iframe").contents().find("#meetingcreatername").removeAttr("id");
						confKey.val("");
						var stopmeeting = $("#" + dID + "_Iframe").contents().find("#stopmeeting");
						changeobjattr(stopmeeting);
					}
					
					if(lanchmeeting.val()=="true" && m.content.indexOf("<script>try{if(vomak==''){sstopmeeting('F');}}catch(e){}</script>")!=-1){
						var rnum = $("#" + dID + "_Iframe").contents().find("#rnum");
						var rn = parseInt(rnum.val());
						rn++;
						rnum.val(rn);
						var tnum = $("#" + dID + "_Iframe").contents().find("#tnum");
						var tn = parseInt(tnum.val());
						if(tn==rn){
							var stopmeeting = $("#" + dID + "_Iframe").contents().find("#stopmeeting");
							var confKey = $("#" + dID + "_Iframe").contents().find("#cconfKey");
							changeobjattr(stopmeeting);
							lanchmeeting.val("");
							$("#" + dID + "_Iframe").contents().find("#iscreater").val("");
							deletemeeting(confKey.val());
						}
					}
					
					if(m.content.indexOf("<span class='meeting'")!=-1 && m.content.indexOf("vomak==''")!=-1){
						m.content.replace("vomak==''","false");
					}
					
					var thisContent = "<div style='padding: 5px 10px;'><span style='color: #335186;'>" + m.senderName.escapeHTML() + "</span>&nbsp;&nbsp;<font class='col-reply-date'>" + m.creationDateTime + "</font></div><div style='padding: 5px 30px; word-wrap:break-word;word-break:break-all;'>" + m.content + "</div>";
					$("#" + dID + "_Iframe").contents().find("#sendContent").append(thisContent);
					
					if($("#" + dID + "_Iframe").contents().find("#resavemeeting").val()=="true"){
						addMeetingEvent(m.messageType, dID, tID);
					}
					
					//\u4f7f\u6eda\u52a8\u6761\u62c9\u5230\u6700\u5e95\u90e8
					try{
						$("#" + dID + "_Iframe").contents().find("#sendContent")[0].scrollTop = $("#" + dID + "_Iframe").contents().find("#sendContent")[0].scrollHeight - $("#" + dID + "_Iframe").contents().find("#sendContent").height();
					}catch(e){
						
					}
					
					//\u5982\u679c\u6b64\u9875\u7b7e\u4e0d\u662f\u5f53\u524d\u9009\u4e2d\u7684\u9875\u7b7e,\u521a\u6539\u53d8\u6b64\u9875\u7b7e\u80cc\u666f,\u5e76\u4fdd\u6301\u4e4b\u524d\u9009\u4e2d\u7684\u9875\u7b7e
					var selectedPanel = $('#imTabs').tabs('getSelected');
					var currentPanel = $('#imTabs').tabs('getTab', title);
					
					if(isFromRightBox != "true" && selectedPanel != currentPanel){
						var currentTab = currentPanel.panel('options').tab;
						currentTab.addClass("tabs-selected-sel");
						$('#imTabs').tabs('select', selectedPanel.panel('options').title);
					}
				}
			}else{
				if(IMMsgProperties.containsKey(tID)){
					IMMsgProperties.get(tID).addAll(msg);
			  	}else{
					IMMsgProperties.put(tID, msg);
			  	}
			  	
			  	//\u5982\u679c\u6709\u5f53\u524d\u9009\u4e2d\u7684\u9875\u7b7e,\u521a\u6539\u53d8\u6b64\u9875\u7b7e\u80cc\u666f,\u5e76\u4fdd\u6301\u4e4b\u524d\u9009\u4e2d\u7684\u9875\u7b7e
			  	var selectedPanel = $('#imTabs').tabs('getSelected');
				showIMTab(latestMsg.messageType, tID, tName.escapeHTML(), 'true');
				var currentPanel = $('#imTabs').tabs('getTab', title);
				
				if(isFromRightBox != "true" && selectedPanel && selectedPanel != null){
					var currentTab = currentPanel.panel('options').tab;
					currentTab.addClass("tabs-selected-sel");
					$('#imTabs').tabs('select', selectedPanel.panel('options').title);
				}
			}
			
			if(isFromRightBox != "true"){
				if(isA8genius == "true"){//\u6765\u81ea\u7cbe\u7075\u65f6,\u8c03\u7528\u7cbe\u63a5\u53e3\u4f7f\u7a97\u53e3\u95ea\u70c1
					window.external.ReciveNewMsg("", "");
				}else{//\u6765\u81eaIE\u65f6,\u4f7fIE\u6807\u9898\u95ea\u70c1
					startActionTitle();
				}
				
				playMessageRadio();//\u64ad\u653e\u97f3\u4e50
			}
		}
	}
}
var dialogCalEventUpdate;

function openDocument(str, linkOpenType) {
	if (!str) {
		return;
	}
	var strs = str.split("|");
	var linkType = getCtpTop().messageLinkConstants.get(strs[0]);
	if (linkType) {
		var l = 1;
		while (true) {
			var param = strs[l];

			if (!param) {
				break;
			}

			var regEx = eval("messageRegEx_" + (l - 1));
			linkType = linkType.replace(regEx, param);

			l++;
		}
	}
	if (linkType) {
		if (linkType.match("^(javascript):")) {
			try {
				eval(linkType.substring(11));
			} catch (e) {
				alert(e.message)
			}
		} else {
		  if(linkType.indexOf("?")>0){
        linkType += "&_isModalDialog=true";
      }else{
        linkType += "?_isModalDialog=true";
      }
			if (linkOpenType == 0) { // open
				var rv; // \u516c\u5171\u4fe1\u606f\u5f39\u51fa\u7a97\u53e3 --%>
				if (strs[0].match("message.link.bbs")
						|| strs[0].match("message.link.bul")
						|| strs[0].match("message.link.inq")
						|| strs[0].match("message.link.news")) {
					rv = v3x.openWindow({
						url : linkType,
						dialogType : "open",
						resizable : "yes",
						workSpaceRight : "yes"
					});
				} else if (strs[0].match("message.link.office")) {
					rv = v3x.openWindow({
						url : linkType,
						width : 750,
						height : 360,
						scrollbars : "no"
					});
				} else if (strs[0].match("message.link.cal")) {// \u65e5\u7a0b\u4e8b\u4ef6
  				  var ajaxTestBean = new calEventManager();
            var res = ajaxTestBean.isHasDeleteByType(strs[1], "event");
            if (res != null && res != "") {
              var win = new MxtMsgBox({
                'msg' : res,
                'type' : 0,
                imgType : 1,
                title : $.i18n('system.prompt.js'),
                ok_fn : function() {
                  win.close();
                }
              });
					} else {
						var isOnePerson = ajaxTestBean.isOnePerson(strs[1]);
						var curButton = "";
						if (isOnePerson == "yes") {
							curButton = [
									{
										id : "sure",
										text : $.i18n('common.button.ok.label'),
										handler : function() {
											dialogCalEventUpdate
													.getReturnValue();
										}
									},
									{
										id : "update",
										text : $.i18n('calendar.update'),
										handler : function() {
											dialogCalEventUpdate
													.getReturnValue("update");
										}
									}, {
										id : "cancel",
										text : $.i18n('calendar.cancel'),
										handler : function() {
											dialogCalEventUpdate.close();
										}
									}, {
										id : "btnClose",
										text : $.i18n('calendar.close'),
										handler : function() {
											dialogCalEventUpdate.close();
										}
									} ];
						} else {
							curButton = [ {
								id : "btnClose",
								text : $.i18n('calendar.close'),
								handler : function() {
									dialogCalEventUpdate.close();
								}
							} ];
						}

						dialogCalEventUpdate = $.dialog({
							url : linkType,
							width : 600,
							height : 500,
							checkMax : true,
							targetWindow : getCtpTop(),
							title : $.i18n('calendar.event.search.title'),
							transParams : {
								diaClose : viewCurDialogClose,
								showButton : showCurBtn,
								isview : "true"
							},
							buttons : curButton
						});
						if (isOnePerson == "yes") {
							// \u521a\u5f00\u59cb\u5c06\u56db\u4e2a\u6309\u94ae\u5168\u90e8\u5f71\u85cf\uff0c\u7136\u540e\u6839\u636e\u60c5\u51b5\u624d\u5c55\u793a\u6309\u94ae
							dialogCalEventUpdate.hideBtn("sure");
							dialogCalEventUpdate.hideBtn("cancel");
						}
					}
				} else if (strs[0].match("message.link.taskmanage")) {// \u5de5\u4f5c\u4efb\u52a1
				  var ajaxTestBean = new calEventManager();
          var res = ajaxTestBean.isHasDeleteByType(strs[1], "task");
          if (res != null && res != "") {
            $.alert(res);
          } else {
					var title = $.i18n("taskmanage.content");
			        dialog = $.dialog({
			            id : 'viewTaskPortal',
			            url : linkType,
			            width : $(getCtpTop()).width()-100,
			            height : $(getCtpTop()).height()-100,
			            title : title,
			            targetWindow : getCtpTop(),
			            minParam:{
			                'show':true
			            },
			            maxParam:{
			                'show':true
			            },
			            closeParam:{
			                'show':true,
			                handler:function(){
			                    var ret = dialog.getClose();
			                }
			            },
			            buttons: [{
			                text: $.i18n("common.button.close.label"),
			                handler: function () {
			                    var rv = dialog.getClose();
			                    dialog.close();
			                }
			            }]
			        });}
				}else if(strs[0].match("message.link.plan")){
					var ajaxTestBean = new calEventManager();
					var res = ajaxTestBean.isHasDeleteByType(strs[1], "plan").toString();
					if(res=="true"){
						 var planViewdialog=$.dialog({
							    id: 'showPlan',
							    url: linkType,
							    width: $(getCtpTop().document).width() - 100,
							    height: $(getCtpTop().document).height() - 100,
							    title: $.i18n('plan.dialog.showPlanTitle'),
							    targetWindow:getCtpTop(),
							    buttons: [{
							        text: $.i18n('plan.dialog.close'),
							        handler: function () {
							    		planViewdialog.close();
							        }
							    }]
							 });
					}else if(res=="false"){
						$.alert("\u60a8\u6ca1\u6709\u67e5\u770b\u6743\u9650\uff0c\u8bf7\u8054\u7cfb\u53d1\u8d77\u4eba\uff01");
				     }else if(res=="absence"){
				    	$.alert('\u8ba1\u5212\u5df2\u88ab\u5220\u9664\uff0c\u8bf7\u8054\u7cfb\u53d1\u8d77\u4eba\uff01');
					 }
			       // branches_a8_v350_r_gov GOV-2674 \u5510\u6842\u6797 \u4fee\u6539\u4f1a\u8bae\u6a21\u5757\u5f39\u51fa\u6846\u65b9\u5f0f\u4e3a\u5168\u5c4f start
				} else if (getCtpTop().suffixVersion == "_GOV"
						&& (strs[0].match("message.link.mt") || strs[0]
								.match("message.link.meeting"))) {
					rv = v3x.openWindow({
						url : linkType,
						dialogType : v3x.getBrowserFlag('openWindow') ? 'modal'
								: 'open',
						FullScrean : 'yes'
					});
					// branches_a8_v350_r_gov GOV-2674 \u5510\u6842\u6797 \u4fee\u6539\u4f1a\u8bae\u6a21\u5757\u5f39\u51fa\u6846\u65b9\u5f0f\u4e3a\u5168\u5c4f end
				} else if (strs[0].match("message.link.sap.synchLog")) {
					getCtpTop().showCurrentPage(linkType);
					// getCtpTop().main.location.href = linkType;
					// showContentPage();
					return;
				} else if (strs[0].match("message.link.doc.open.only") || strs[0].match("message.link.doc.openfromborrow") || strs[0].match("message.link.doc.open.index") || strs[0].match("message.link.doc.open.learning") ) {
					openKnowledgeByURL(linkType);
				} else {
					rv = v3x.openWindow({
						url : linkType,
						dialogType : v3x.getBrowserFlag('openWindow') ? 'modal'
								: 'open',
						FullScrean : 'yes'
					});
				}
				if (rv == "true" || rv == true) {
					getCtpTop().refreshSection([ strs[0] ]);
				}
				refreshSectionFont("pendingSection",strs);
			} else if (linkOpenType == 1) {
				getCtpTop().showCurrentPage(linkType);
				// getCtpTop().main.location.href = linkType;
				// showContentPage();
			}
		}
	}
}
/**
 * \u5237\u65b0\u5f85\u529e\u680f\u76ee\u7684\u6807\u9898\u5b57\u4f53
 */
function refreshSectionFont(sectionBeanId,strs){
	var curFrame = getCtpTop().frames['main'];
	if(!curFrame.frontPageOutUtilsJS){ //\u5f53\u524d\u4e0d\u662f\u9996\u9875
		return;
	}

	var allPanels = curFrame.sectionHandler.allSectionPanels;
	for(var id in allPanels){
		var panel = allPanels[id];
		if(panel.sectionBeanId == sectionBeanId){
			var c_frame = curFrame.$("#"+panel.nodeId).find("iframe")[0];
			if(c_frame){
			  if(typeof(c_frame.contentWindow.cancelBold4Messge) == 'function'){
			    c_frame.contentWindow.cancelBold4Messge(strs);
			  }
			}
		}
	}
}
/**
 * \u65e5\u7a0b\u4e8b\u4ef6 \u7528\u6237\u67e5\u770b\u4e8b\u4ef6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u70b9\u51fb\u4fee\u6539\uff0c\u5982\u679c\u7528\u6237\u70b9\u51fb\u4e86\u4fee\u6539\uff0c\u5c31\u4f1a\u6267\u884c\u8fd9\u4e2a\u65b9\u6cd5 \u5148\u5c06\u4fee\u6539\u6309\u94ae\u9690\u85cf\u3001\u7136\u540e\u628a\u786e\u5b9a\u6309\u94ae\u663e\u793a\u51fa\u6765
 */
function showCurBtn() {
	dialogCalEventUpdate.showBtn("sure");
	dialogCalEventUpdate.hideBtn("update");
}

/**
 * \u65e5\u7a0b\u4e8b\u4ef6 \u8fd9\u4e2a\u662f\u4e3a\u4e86\u5173\u95ed\u65e5\u7a0b\u4e8b\u4ef6\u7a97\u53e3 \u6bd4\u5982\u65b0\u589e\u3002\u6bd4\u5982\u67e5\u770b\u3001\u4fee\u6539\u7a97\u53e3
 */
function viewCurDialogClose(id) {
	if (id == -1) { // \u65b0\u589e\u7a97\u53e3
		dialogCalEventAdd.close();
	} else { // \u4fee\u6539\u7a97\u53e3\u3001\u5373\u67e5\u770b\u7a97\u53e3
		dialogCalEventUpdate.close();
	}
}

/**
 * \u5ffd\u7565\u672a\u8bfb\u6d88\u606f
 */
function updateMessageState(id, readType, type) {
	var requestCaller = null;
	if (id) {// \u5ffd\u7565\u4e00\u6761\u672a\u8bfb\u6d88\u606f
		if (type == "show") {// \u67e5\u770b\u6d88\u606f
			if ($("#" + id + "Span").length > 0) {
				requestCaller = new XMLHttpRequestCaller(this,
						"ajaxMessageController", "updateSystemMessageState",
						false);
				requestCaller.addParameter(1, "long", id);
				requestCaller.serviceRequest();
				if (readType == "notRead") {
					location.href = location.href;
				} else {
					$("#" + id + "Span").remove();
					$("#" + id + "Div").remove();
				}
			}
		} else {// \u76f4\u63a5\u5ffd\u7565
			requestCaller = new XMLHttpRequestCaller(this,
					"ajaxMessageController", "updateSystemMessageState", false);
			requestCaller.addParameter(1, "long", id);
			requestCaller.serviceRequest();
			if (readType == "notRead") {
				location.href = location.href;
			} else {
				$("#" + id + "Span").remove();
				$("#" + id + "Div").remove();
			}
		}
	} else {// \u5ffd\u7565\u5168\u90e8\u672a\u8bfb\u6d88\u606f
		if ($("span[name='unReadMsg']").length == 0) {
			return;
		} else {
			if (confirm(_("MainLang.message_system_ignore_all"))) {
				requestCaller = new XMLHttpRequestCaller(this,
						"ajaxMessageController",
						"updateSystemMessageStateByUser", false);
				requestCaller.serviceRequest();
				if (readType == "notRead") {
					location.href = location.href;
				} else {
					$("div[name='unReadMsg'],span[name='unReadMsg']").remove();
				}
			}
		}
	}
}
/**************************************** A8\u6d88\u606f ****************************************/

/**
 * \u663e\u793a\u5728\u7ebfIM\u804a\u5929\u7a97\u53e3
 * \u5982\u679c\u5728\u7ebfIM\u804a\u5929\u7a97\u53e3\u6ca1\u6709\u6253\u5f00,\u5148\u6253\u5f00\u518d\u6dfb\u52a0\u804a\u5929\u9875\u7b7e
 * \u5982\u679c\u5728\u7ebfIM\u804a\u5929\u7a97\u53e3\u5df2\u7ecf\u6253\u5f00,\u76f4\u63a5\u83b7\u53d6\u7126\u70b9\u518d\u6dfb\u52a0\u804a\u5929\u9875\u7b7e
 */
function showOnlineIM(key){
	var msg = msgProperties.get(key);
	var latestMsg = msg.getLast();
	var tType = latestMsg.messageType;
	var tID = tType == 1 ? latestMsg.senderId : latestMsg.referenceId;
	
	if(!onlineWin){
		var left = 50;
		var top = (window.screen.availHeight - 600) / 2;
		
		onlineWin = window.open("/seeyon/message.do?method=showOnlineUser&id=" + tID, "", 
			"left=" + left + ",top=" + top + ",width=600,height=600,toolbar=no,menubar=no,scrollbars=no,resizable=yes,location=no,status=no");
	}else{
		onlineWin.focus();
		
		onlineWin.showMessageForIM(msg.instance, "true");
		msgProperties.remove(key);
	}
}

/**
 * \u534f\u540c\u4e2d\u53d1\u8d77\u8ba8\u8bba
 */
function showOnlineIMForCol(id, name){
	if(!onlineWin){
		var left = 50;
		var top = (window.screen.availHeight - 600) / 2;
		
		onlineWin = window.open("/seeyon/message.do?method=showOnlineUser&fromcol=true&name=" + encodeURIComponent(name) + "&id=" + id, "", 
			"left=" + left + ",top=" + top + ",width=600,height=600,toolbar=no,menubar=no,scrollbars=no,resizable=yes,location=no,status=no");
	}else{
		onlineWin.focus();
		onlineWin.showIMTab('5', id, name, 'false');
	}
}

function showMessageSet(url){
  var dialog = $.dialog({
	id : 'showMessageSet',
    url : url,
    width : $(getCtpTop()).width() - 100,
    height : 600,
    title : " ",
    targetWindow : getCtpTop()
  });
}

/**
 * \u66f4\u591a\u6d88\u606f\u3001\u672a\u8bfb\u6d88\u606f
 */
function showMoreMessage(src){
	/*if(getCtpTop().contentFrame.document.getElementById("LeftRightFrameSet").cols == "0,*"){
		getCtpTop().contentFrame.leftFrame.closeLeft();
	}*/
	getCtpTop().main.location.href = src;
}
/**
 * \u9996\u9875\u680f\u76ee\u4e0e\u6d88\u606f\u94fe\u63a5\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5b9e\u73b0\u529f\u80fd\uff0c\u5f53\u5f39\u51fa\u6d88\u606f\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u5237\u65b0\u680f\u76ee
 */
var sectionMappingLinkType = {
	//\u5f85\u529e\u4e8b\u9879 -------------------------------------------------------
	pendingSection : [
		"message.link.col.pending",
		"message.link.exchange.receive",
		"message.link.exchange.send",
		"message.link.exchange.register.pending",
		"message.link.mt.send",
		"message.link.edoc.pending",
		"message.link.bul.auditing",
		"message.link.office.auto",
		"message.link.office.stock",
		"message.link.office.asset",
		"message.link.office.book",
		"message.link.office.meetingroom"
	],
	NCPendingSection : ["message.link.NC.message"],
	guestbookSection :[
	   "message.link.project.leaveWord"
    ]
	
}

var linkTypeMappingSection = {
	//\u8c03\u67e5 -------------------------------------------------------
	"message.link.inquiry_send" : [
		"inquirySection",
		"singleBoardInquirySection",
		"groupInquirySection",
	],
	
	//\u65b0\u95fb -------------------------------------------------------
	"message.link.news.open" : [
		"newsSection",
		"singleBoardNewsSection",
		"singleBoardGroupNewsSection",
		"groupNewsSection"
	],
	
	//\u516c\u544a -------------------------------------------------------
	"message.link.bul.alreadyauditing" : [
		"bulletinSection",
		"singleBoardBulSection",
		"singleBoardGroupBulletinSection",
		"groupBulletinSection",
		"myBulletinSection"
	],
	
	//\u8ba8\u8bba\u533a -------------------------------------------------------
	"message.link.bbs.open" : [
		"singleBoardBbsSection",
		"singleBoardGroupBbsSection",
		"singleBoardBbsSection",
		"groupBbsSection"
	],
	
	//\u8ba1\u5212 ---------------------------------------------------------
     "message.link.plan.send" : [
	 	"planManageSection",
	 	"departmentPlanSection"
    ]
}

Array.prototype.contains = function(object){
	for(var i = 0; i < this.length; i++) {
		if(this[i] == object){
			return true;
		}
	}
	
	return false;
}

/**
 * \u6839\u636e\u94fe\u63a5\u7c7b\u578b\u533a\u7684sectionId
 */
function getSectionIdByLinkType(linkType){
	var sections = linkTypeMappingSection[linkType];
	if(sections){
		return sections;
	}
	
	for(var s in sectionMappingLinkType){
		var ss = sectionMappingLinkType[s];
		if(ss && ss.contains(linkType)){
			return [s];
		}
	}
	
	return null;
}

function refreshSection(linkTypes){
	/*if(!getCtpTop().isShowCachePage()){
		return ;
	}*/
	var curFrame = getCtpTop().frames['main'];
	if(!curFrame.frontPageOutUtilsJS){ //\u5f53\u524d\u4e0d\u662f\u9996\u9875
		return;
	}
	if(linkTypes){
		for(var i = 0; i < linkTypes.length; i++) {
			var linkType = linkTypes[i];
			try{
		
				var sectionIds = getSectionIdByLinkType(linkType);
				if(!sectionIds){
					return;
				}
				
				for(var s = 0; s < sectionIds.length; s++) {
					curFrame.sectionHandler.reload(sectionIds[s], true);
				}
			}
			catch(e){
				alert(e.message)
			}
		}
	}
}
/*----------------------------------------------------------------------------\
|                                Cross Panel 1.0                              |
|-----------------------------------------------------------------------------|
|                       Created by Tanmf (tanmf@seeyon.com)                   |
|                    For UFIDA-Seeyon (http://www.seeyon.com/)                |
|-----------------------------------------------------------------------------|
| A utility will be used for Organization Medol, use AJAX Tech. to load the   |
|data                                                                         |
|-----------------------------------------------------------------------------|
|                            Copyright (c) 2006 Tanmf                         |
|-----------------------------------------------------------------------------|
| Dependencies:                                                               |
|-----------------------------------------------------------------------------|
| 2006-09-20 | Original Version Posted.                                       |
|-----------------------------------------------------------------------------|
| Created 2006-09-20 | All changes are in the log above. | Updated 2006-08-20 |
\----------------------------------------------------------------------------*/

var orgDataCenterFlag = true;


var Constants_Account      = "Account";
var Constants_Department   = "Department";
var Constants_Team         = "Team";
var Constants_Post         = "Post";
var Constants_Level        = "Level";
var Constants_Member       = "Member";
var Constants_Role         = "Role";
var Constants_Outworker    = "Outworker";
var Constants_ExchangeAccount   = "ExchangeAccount";
var Constants_concurentMembers  = "ConcurentMembers";
var Constants_OrgTeam           = "OrgTeam";
var Constants_RelatePeople      = "RelatePeople";
var Constants_FormField         = "FormField";
var Constants_Admin             = "Admin";
var Constants_Node              = "Node";

var PeopleRelate_TypeName = {
        1 : "",
        2 : "",
        3 : "",
        4 : ""
};


/****************************************************************
 * \u5355\u4f4d
 * @param id
 * @param parentId \u4e0a\u7ea7\u5355\u4f4dId
 * @param name
 * @param hasChild \u662f\u5426\u6709\u5b50\u5355\u4f4d
 * @param shortname \u5355\u4f4d\u7b80\u79f0
 * @param levelScope \u804c\u52a1\u7ea7\u522b\u9650\u5236
 * @param description
 */
function Account(id, parentId, path, name, hasChild, shortname, levelScope, description){
    this.id = id;
    this.parentId = parentId;
    this.path = path;
    this.name = name;
    this.hasChild = hasChild;
    this.shortname = shortname;
    this.levelScope = levelScope;
    this.description = description;
}

Account.prototype.toString = function(){
    return this.id + "\t" + this.name + "\t" + this.shortname + "\t" + this.levelScope;
};

/**
 * @param id
 * @param parentId
 * @param name
 * @param hasChild
 * @param description
 * @param path 
 * @param concurents \u517c\u804c  "Concurent":{"-3416446029311948944":[{"DN":"\u9500\u552e\u90e8","A":"-7402591981046643031","PN":"\u804c\u5458","N":"\u674e\u534e\u8868","id":"7798797857441336066"}]}
 * @param postList \u90e8\u95e8\u4e0b\u7684\u5c97\u4f4d ArrayList<Post.id>
 */
function Department(id, parentId, name, hasChild, path, postList, roleList, isInternal, concurents, description, accountId){
    this.id = id;
    this.parentId = parentId;
    this.name = name;
    this.hasChild = hasChild;   
    this.path = path;
    this.postList = postList;
    this.roleList = roleList;
    this.isInternal = isInternal == 0 ? false : true;
    this.concurents = concurents;
    this.description = description;
    this.accountId = accountId;
    
    //\u90e8\u95e8\u4e0b\u6240\u6709\u7684\u4eba\u5458,\u5305\u62ec\u5b50\u90e8\u95e8,\u4ee5\u53ca\u526f\u5c97\u4eba\u5458
    this.allMembers = null;
    this.allMembersMap = null; //<Member.id, Member>
    //\u90e8\u95e8\u4e0b\u76f4\u63a5\u4eba\u5458\uff0c\u5305\u62ec\u526f\u5c97\u4eba\u5458
    this.directMembers = new ArrayList();
    this.directMembersExist = {};
    //\u76f4\u63a5\u5b50\u90e8\u95e8
    this.directChildren = null;
    //\u6240\u6709\u7684\u5b50\u90e8\u95e8
    this.allChildren = null;
    //\u517c\u804c\u4eba\u5458
    this.concurentMembers = null;
    
    //\u90e8\u95e8\u4e0b\u7684\u5c97\u4f4d
    this.Dposts = null;
    //\u90e8\u95e8\u4e0b\u7684\u89d2\u8272
    this.Droles = null;
    
    //\u90e8\u95e8\u5168\u540d
    this.fullName = null;
}

Department.prototype.toString = function(){
    return this.name;
};

/**
 * \u53d6\u5f97\u90e8\u95e8\u4e0b\u7684\u5c97\u4f4d\u5217\u8868
 * @return List<Post>
 */
Department.prototype.getPosts = function(){
    if(!this.postList){
        return null;
    }
    
    if(this.Dposts){
        return this.Dposts;
    }
    
    this.Dposts = new ArrayList();

    for(var i = 0; i < this.postList.size(); i++) {
        var postId = this.postList.get(i);
        var post = getObject(Constants_Post, postId);
        
        this.Dposts.add(post);
    }
    
    return this.Dposts;
};

/**
 * \u5f97\u5230\u90e8\u95e8\u4e0b\u6240\u6709\u7684\u89d2\u8272
 */
Department.prototype.getRoles = function(){
    if(!this.roleList){
        return null;
    }
    
    if(this.Droles){
        return this.Droles;
    }
    
    this.Droles = new ArrayList();
    for(var i = 0; i < this.roleList.size(); i++) {
        var roleId = this.roleList.get(i);
        
        var role = getObject(Constants_Role, roleId);
        this.Droles.add(role);
    }
    
    return this.Droles;
}
/**
 * \u90e8\u95e8\u4e0b\u6240\u6709\u7684\u4eba\u5458,\u5305\u62ec\u5b50\u90e8\u95e8,\u4ee5\u53ca\u526f\u5c97\u4eba\u5458,\u517c\u804c\u4eba\u5458
 */
Department.prototype.getAllMembers = function(){
    if(this.allMembers == null){
        this.allMembers = new ArrayList();
        
        var _departments = getDataCenter(Constants_Department, this.accountId);
        for(var i = 0; i < _departments.size(); i++){
            var d = _departments.get(i);
            if(!(d.isInternal == false) && checkIsChildDepartment(this.path, d.path)){
                this.allMembers.addList(d.getDirectMembers());
            }
        }
        
        this.allMembers.addList(this.getDirectMembers());
    }
    
    function checkIsChildDepartment(parentPath, childPath){
        return childPath.indexOf(parentPath) == 0;
    }
    
    return this.allMembers;
}

/**
 * \u5f97\u5230\u8be5\u90e8\u95e8\u4e0b\u6240\u6709\u4eba<Member.Id, Member>
 */
Department.prototype.getAllMembersMap = function(){
    if(this.allMembersMap == null){
        this.allMembersMap = new Properties();
        var _allMembers = this.getAllMembers();
        for(var i = 0; i < _allMembers.size(); i++) {
            var m = _allMembers.get(i);
            this.allMembersMap.put(m.id, m);
        }
    }
    
    return this.allMembersMap;
}

/**
 * \u6dfb\u52a0\u76f4\u63a5\u6210\u5458\uff0c\u5305\u62ec\u526f\u5c97\u4eba\u5458,\u517c\u804c\u4eba\u5458\uff0c\u5982\u679c\u91cd\u590d\uff0c\u53ea\u663e\u793a\u4e00\u4e2a\uff0c\u5e76\u4e14\u4ee5\u4e3b\u5c97\u4f18\u5148
 */
Department.prototype.addDirectMembers = function(member, isCheck){
    var isExist = false;
    if(isCheck == true){
        isExist = this.directMembersExist[member.id];
    }
    
    if(!isExist){ //\u4e0d\u5305\u542b\u6b64\u4eba
        this.directMembers.add(member);
        this.directMembersExist[member.id] = true;
    }
}

/**
 * \u5f97\u5230\u90e8\u95e8\u7684\u76f4\u63a5\u6210\u5458\uff0c\u5305\u62ec\u526f\u5c97\u4eba\u5458,\u517c\u804c\u4eba\u5458
 */
Department.prototype.getDirectMembers = function(){
    return this.directMembers;
}

/**
 * \u5f97\u5230\u76f4\u63a5\u5b50\u90e8\u95e8
 */
Department.prototype.getDirectChildren = function(){
    if(this.directChildren){
        return this.directChildren;
    }
    
    return new ArrayList();
}

/**
 * 
 */
Department.prototype.getAllChildren = function(){
    if(!this.allChildren){
        this.allChildren =  new ArrayList();
        
        var currentChildren = this.getDirectChildren();
        this.allChildren.addList(currentChildren);
        
        for(var i = 0; i < currentChildren.size(); i++) {
            this.allChildren.addList(currentChildren.get(i).getAllChildren());
        }
    }
    
    return this.allChildren;
}

/**
 * \u5f97\u5230\u517c\u804c\u4eba\u5458
 */
Department.prototype.getConcurents = function(){
    if(this.concurentMembers){
        return this.concurentMembers;
    }
    
    this.concurentMembers = new ArrayList();
    if(this.concurents){
        for(var i = 0; i < this.concurents.length; i++) {
            //{"DN":"\u9500\u552e\u90e8","A":"-7402591981046643031","PN":"\u804c\u5458","N":"\u674e\u534e\u8868","id":"7798797857441336066","GL":"5744187978606337796"}
            var em = this.concurents[i];
            
            var member = getObject(Constants_concurentMembers, em[Constants_key_id]);
            var index = this.concurentMembers.indexOf(member);
            if(index < 0){
                this.concurentMembers.add(member);
            }
        }
    }
    
    return this.concurentMembers;
}

Department.prototype.getFullName = function(){
    if(this.fullName == null){
        this.fullName = this.name;
        
        var parentPath = getDepartmentParentPath(this.path);
        var parentDepartment = Path2Depart[parentPath];
        
        if(parentDepartment){
            var parentDepartmentFullName = parentDepartment.getFullName();
            this.fullName = parentDepartmentFullName + "/" + this.fullName;
        }
    }
    
    return this.fullName;
}

/****************************************************************
 * @param id
 * @param name
 * @param description
 */
function Post(id, name, type, code, description, accountId){
    this.id = id;
    this.name = name;
    this.type = type;
    this.code = code;
    this.description = description;
    this.accountId = accountId;
    
    this.members = new ArrayList();
    this.membersExist = {};
}

Post.prototype.getMembers = function(){
    return this.members;
}

Post.prototype.addMember = function(member, isCheck){
    var isExist = false;
    if(isCheck == true){
        isExist = this.membersExist[member.id];
    }
    
    if(!isExist){ //\u4e0d\u5305\u542b\u6b64\u4eba
        this.members.add(member);
        this.membersExist[member.id] = true;
    }
}

Post.prototype.getAllMembers = function(){
    return this.members;
}

/****************************************************************
 * @param id
 * @param parentId
 * @param name
 * @param hasChild
 * @param sortId
 * @param groupLevelId \u9690\u5c04\u5230\u96c6\u56e2\u7684\u804c\u52a1\u7ea7\u522bid\uff0c\u4e0d\u662fsortId
 * @param description
 */
function Level(id, parentId, name, hasChild, sortId, groupLevelId, code, description, accountId){
    this.id = id;
    this.parentId = parentId;
    this.name = name;
    this.hasChild = hasChild;
    this.sortId = sortId;
    this.groupLevelId = groupLevelId;
    this.code = code;
    this.description = description;
    this.accountId = accountId;
    
    this.members = null;
}
Level.prototype.getMembers = function(){
    if(this.members){
        return this.members;
    }
    
    this.members = new ArrayList();

    var _members = getDataCenter(Constants_Member, this.accountId);
    for(var i = 0; i < _members.size(); i++){
        var member = _members.get(i);
        if(member.levelId == this.id){
            this.members.add(member);
        }
    }
    
    return this.members;
}

Level.prototype.getAllMembers = function(){
    return this.getMembers();
}

/**
 * @param id
 * @param name
 * @param description
 */
function Role(id, name, type, bond, description, accountId){
    this.id = id;
    this.name = name;
    this.type = type;
    this.bond = bond;
    this.description = description;
    this.accountId = accountId;
}

/****************************************************************
 * @param id
 * @param name
 * @param departmentId
 * @param postId
 * @param secondPostIds List<[Department.id, Post.id]>
 * @param levelId
 * @param email
 * @param mobile
 * @param description
 */
function Member(id, name, sortId, departmentId, postId, secondPostIds, levelId, _isInternal, email, mobile, description, accountId){
    this.id = id;
    this.name = name;
    this.sortId = parseInt(sortId);
    this.departmentId = departmentId;
    this.departmentName = "";//\u4eba\u5458\u6240\u5728\u90e8\u95e8\u540d\u79f0\uff0c\u7528\u4e8e\u5168\u96c6\u56e2\u67e5\u8be2\u7ed3\u679c\u663e\u793a\u5168\u8def\u5f84
    this.postId = postId;
    this.secondPostIds = secondPostIds;
    this.levelId = levelId;
    this.isInternal = _isInternal == 0 ? false : true;
    this.email = email;
    this.mobile = mobile;
    this.description = description;
    this.accountId = accountId;
    
    //\u4e00\u4e0b\u662fMember\u7684\u6269\u5c55\u5c5e\u6027\uff0c\u901a\u5e38\u662f\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u8d4b\u503c\uff0c\u4e4b\u540e\u4e0d\u518d\u91cd\u65b0\u8d4b\u503c
    
    this.department = null;
    this.post = null;
    this.level = null;
    this.teams = null;
    this.secondPost = null; //Properties<departmentId, ArrayList<Post>>
}

Member.prototype.clone = function(){
    var newMember = new Member();
    newMember.id = this.id;
    newMember.name = this.name;
    newMember.sortId = this.sortId;
    newMember.departmentId = this.departmentId;
    newMember.postId = this.postId;
    newMember.secondPostIds = this.secondPostIds;
    newMember.levelId = this.levelId;
    newMember.isInternal = this.isInternal;
    newMember.email = this.email;
    newMember.mobile = this.mobile;
    newMember.description = this.description;
    newMember.accountId = this.accountId;
    
    //\u4e00\u4e0b\u662fMember\u7684\u6269\u5c55\u5c5e\u6027\uff0c\u901a\u5e38\u662f\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u8d4b\u503c\uff0c\u4e4b\u540e\u4e0d\u518d\u91cd\u65b0\u8d4b\u503c
    newMember.department = this.department;
    newMember.post = this.post;
    newMember.level = this.level;
    newMember.teams = this.teams;
    newMember.secondPost = this.secondPost;
    return newMember;
}

Member.prototype.getLevel = function(){
    if(this.level == null){
        this.level = getObject(Constants_Level, this.levelId);
    }
    
    return this.level;
}

Member.prototype.getDepartment = function(){
    if(this.department == null){
        this.department = getObject(Constants_Department, this.departmentId);
    }
    
    return this.department;
}

Member.prototype.getPost = function(){
    if(this.post == null){
        this.post = getObject(Constants_Post, this.postId);
    }
    
    return this.post;
}

Member.prototype.getSecondPost = function(){
    if(this.secondPost == null){
        if(this.secondPostIds){
            this.secondPost = new Properties();
            
            for(var i = 0; i < this.secondPostIds.size(); i++) {
                var dId = this.secondPostIds.get(i)[0];
                var pId = this.secondPostIds.get(i)[1];
                
                var p = getObject(Constants_Post, pId);
                if(p){
                    var _posts = this.secondPost.get(dId);
                    if(_posts == null){
                        _posts = new ArrayList();
                        this.secondPost.put(dId, _posts);
                    }
                    
                    _posts.add(p);
                }
            }
        }
        else{
            this.secondPost = EmptyProperties;
        }
    }

    return this.secondPost;
}

/**
 * \u5224\u65ad\u5f53\u524d\u4eba\u662f\u5426\u5728\u6307\u5b9a\u90e8\u95e8\u517c\u804c
 */
Member.prototype.isSecondPostInDept = function(departmentId){
    return this.getSecondPost().get(departmentId) != null;
}

/**
 * \u6839\u636e\u517c\u804c\u5c97\u4f4d\u5f97\u5230\u6211\u517c\u804c\u90e8\u95e8
 */
Member.prototype.getSecondDepartmentId = function(postId){
    if(this.secondPostIds == null){
        return null;
    }
    
    for(var i = 0; i < this.secondPostIds.size(); i++) {
        var pId = this.secondPostIds.get(i)[1];
        
        if(pId == postId){
            return this.secondPostIds.get(i)[0];
        }   
    }
    
    return null;
}

Member.prototype.getSecondDepartmentIds = function(){
    if(this.secondPostIds == null){
        return null;
    }
    
    var result = new Set();
    
    for(var i = 0; i < this.secondPostIds.size(); i++) {
        result.add(this.secondPostIds.get(i)[0]);
    }
    
    return result;
}

Member.prototype.toString = function(){
    return "id=" + this.id + ", name=" + this.name + ", postId=" + this.postId + 
            ", levelId=" + this.levelId + ", departmentId=" + this.departmentId;
}

/****************************************************************
 * @param id
 * @param type \u7c7b\u578b 1 - \u4e2a\u4eba 2 - \u7cfb\u7edf\u7ec4 3 - \u9879\u76ee\u7ec4
 * @param name
 * @param teamSupervisors ArrayList<Member.id> \u7ec4\u7684\u4e3b\u7ba1
 * @param teamMembers ArrayList<Member.id> \u7ec4\u7684\u6210\u5458
 * @param teamLeaders ArrayList<Member.id> \u7ec4\u7684\u9886\u5bfc
 * @param teamRelatives ArrayList<Member.id> \u7ec4\u7684\u5173\u8054\u4eba\u5458
 * @param description
 */
function Team(id, type, name, depId, teamLeaders, teamMembers, teamSupervisors, teamRelatives, externalMember, description, accountId){
    this.id = id;
    this.type = type;
    this.name = name;
    this.depId = depId;
    this.teamLeaders = teamLeaders; //\u4e3b\u7ba1
    this.teamMembers = teamMembers; //\u6210\u5458
    this.teamSupervisors = teamSupervisors; //\u9886\u5bfc
    this.teamRelatives = teamRelatives; //\u7ba1\u7406\u4eba\u5458
    this.externalMember = externalMember || []; //\u5916\u5355\u4f4d\u4eba\u5458
    this.description = description;
    this.accountId = accountId || "";
    
    this.department = null;
    
    this.leaders = new ArrayList();
    this.members = new ArrayList();
    this.supervisors = new ArrayList();
    this.relatives = new ArrayList();
    
    this.isInit = false;
}

/**
 * \u53d6\u5f97\u7ec4\u6240\u5c5e\u90e8\u95e8
 */
Team.prototype.getDepartment = function(){
    if(!this.department){
        if(!this.depId || this.depId == -1){
            return null;
        }
    
        this.department = getObject(Constants_Department, this.depId);
    }
    
    return this.department;
}

/**
 * \u521d\u59cb\u5316\u4eba\u5458
 */
Team.prototype.initMembers = function(){
    if(this.isInit == true){
        return;
    }
    
    for(var i = 0; i < this.externalMember.length; i++) {
        var em = this.externalMember[i];
        var member = new Member(em[Constants_key_id], em["N"], 999999, null, null, null, null, true, em["Y"], em["M"], '');
        member.type = "E";
        member.departmentName = em["DN"] || "";
        member.accountId = em["A"];
        
        addExMember(member);
    }
    
    var temp = dataCenterMap[currentAccountId_orgDataCenter][Constants_Member] || {};
    
    for(var i = 0; i < this.teamLeaders.size(); i++) {
        var memberId = this.teamLeaders.get(i);
        var member = temp[memberId];
        
        if(member != null){
            this.leaders.add(member);
        }
    }
    
    for(var i = 0; i < this.teamMembers.size(); i++) {
        var memberId = this.teamMembers.get(i);
        var member = temp[memberId];
        
        if(member != null){
            this.members.add(member);
        }
    }
        
    for(var i = 0; i < this.teamSupervisors.size(); i++) {
        var memberId = this.teamSupervisors.get(i);
        var member = temp[memberId];
        
        if(member != null){
            this.supervisors.add(member);
        }
    }
    
    for(var i = 0; i < this.teamRelatives.size(); i++) {
        var memberId = this.teamRelatives.get(i);
        var member = temp[memberId];
        
        if(member != null){
            this.relatives.add(member);
        }
    }
    
    this.isInit = true;
}

/**
 * \u5f97\u5230\u6210\u5458\uff08\u4e3b\u7ba1\u3001\u6210\u5458\uff09\u7684Id
 */
Team.prototype.getAllMemberIds = function(){
    var allMemberIds = new ArrayList();
    allMemberIds.addList(this.teamLeaders);
    allMemberIds.addList(this.teamMembers);
    
    return allMemberIds;
}


/**
 * \u6240\u6709\u7684\u6210\u5458\uff0c\u5305\u62ec\u4e3b\u7ba1\u3001\u7ec4\u5458
 */
Team.prototype.getAllMembers = function(){
    this.initMembers();
    var allMembers = new ArrayList();

    allMembers.addList(this.leaders);
    allMembers.addList(this.members);
    
    return allMembers;
}

/**
 * \u5f97\u5230\u7ec4\u7684\u4e3b\u7ba1
 * @return List<Member>
 */
Team.prototype.getLeaders = function(){
    this.initMembers();
    return this.leaders;
}

/**
 * \u5f97\u5230\u7ec4\u7684\u6210\u5458
 * 
 * @return List<Member>
 */
Team.prototype.getMembers = function(){
    this.initMembers();
    return this.members;
}

/**
 * \u5f97\u5230\u7ec4\u7684\u9886\u5bfc
 * @return List<Member>
 */
Team.prototype.getSupervisors = function(){
    this.initMembers();
    return this.supervisors;
}

/**
 * \u5f97\u5230\u7ec4\u7684\u5173\u8054\u4eba\u5458
 * @return List<Member>
 */
Team.prototype.getRelatives = function(){
    this.initMembers();
    return this.relatives;
}

function addExMember(member){
    try {
        var obj = dataCenterMap[currentAccountId_orgDataCenter][Constants_Member][member.id];
        if(!obj){
            getDataCenter(Constants_Member).add(member);
            dataCenterMap[currentAccountId_orgDataCenter][Constants_Member][member.id] = member;
        }
    }
    catch (e) {
        alert(e.message)
    }
}

/**************************************************************
 * \u5916\u90e8\u5355\u4f4d\uff0c\u7528\u4e8e\u516c\u6587\u4ea4\u6362
 */
function ExchangeAccount(id, name, description){
    this.id = id;
    this.name = name;
    this.isInternal = false;
    this.description = description;
}

/**************************************************************
 * \u673a\u6784\u7ec4\uff0c\u7528\u4e8e\u516c\u6587
 */
function OrgTeam(id, name, description){
    this.id = id;
    this.name = name;
    this.description = description;
}
OrgTeam.prototype.toString = function(){
    return this.id + ", " + this.name;
}

/****************************************************************
 * \u5173\u8054\u4eba\u5458
 */
function RelatePeople(type, name, description){
    this.type = type;
    this.name = name;
    this.description = description;
    
    this.memberOrginal = new ArrayList();
    
    this.members = null;
}

RelatePeople.prototype.addMember = function(o){
    this.memberOrginal.add(o);
}

RelatePeople.prototype.getMembers = function(){
    if(this.members == null){
        var st = new Date();
        this.members = new ArrayList();
        for ( var i = 0; i < this.memberOrginal.size(); i++) {
            var o = this.memberOrginal.get(i);
            var em = o["E"];
            if(em){
                var member = new Member(o["K"], em["N"], 999999, null, null, null, null, true, em["Y"], em["M"], '');
                member.type = "E";
                member.departmentName = em["DN"] || "";
                member.accountId = em["A"];
                
                addExMember(member);
                this.members.add(member);
            }
            else{           
                var member = dataCenterMap[currentAccountId_orgDataCenter][Constants_Member][o["K"]];
                if(member != null){
                    this.members.add(member);
                }
            }
        }
    }
    
    return this.members;
}

RelatePeople.prototype.toString = function(){
    return this.id + ", " + this.name;
}

/*******************************************************************
 * \u7ba1\u7406\u5458
 */
function Admin(id, name, role, accountId, description){
    this.id = id;
    this.name = name;
    this.role = role;
    this.accountId = accountId;
    this.description = description;
};

Admin.prototype.toString = function(){
    return this.is + ", " + this.name;
};

/**
 * \u8868\u5355\u63a7\u4ef6
 * @param {} id
 * @param {} name
 */
function FormField(id, name, departmentRole){
    this.id = id;
    this.name = name;
    this.departmentRole = departmentRole;
}
FormField.prototype.getRoles = function(){
    var r = new ArrayList();
    
    if(this.departmentRole){
        for(var i = 0; i < this.departmentRole.length; i++){
            r.add(this.departmentRole[i]);
        }
    }
    
    return r;
};
FormField.prototype.toString = function(){
    return this.name + ", " + this.id;
};

/**
 * \u52a8\u6001\u8282\u70b9
 * @param id
 * @param name
 * @returns
 */
function Node(id, name, departmentRole){
    this.id = id;
    this.name = name;
    this.departmentRole = departmentRole;
}
Node.prototype.getRoles = function(){
    var r = new ArrayList();
    
    if(this.departmentRole){
        for(var i = 0; i < this.departmentRole.length; i++){
            r.add(this.departmentRole[i]);
        }
    }
    
    return r;
};
Node.prototype.toString = function(){
    return this.id + ", " + this.name;
};

/******************************************************************************************************/
/******************************************************************************************************/
var currentAccountId_orgDataCenter    = null;
var currentMemberId_orgDataCenter  = null;

var ajaxLoadOrganization = "ajaxSelectPeopleManager";
var Constants_key_id = "K";

var hasLoadOrgModel = new Properties();
var hasLoadExchangeAccountModel = new Properties();

//\u7ec4\u7ec7\u6a21\u578b\u65f6\u95f4\u6233
var orgLocalTimestamp = new Properties();

/**
 * Properties<accountId, Properties<EntityType, List<Entity>>>
 * 
 * \u8be5\u5bf9\u8c61\u4e0d\u8981\u76f4\u63a5\u8bbf\u95ee\uff0c\u8bf7\u7528getDataCenter(type)
 */
var dataCenter = new Properties();

/**
 * \u6240\u6709\u7684\u5bf9\u8c61\u90fd\u5728\u91cc\u9762
 * 
 * {accountId, {EntityType, {id, Entity}}}
 */
var dataCenterMap = {};

//~ \u6240\u6709\u7684\u5355\u4f4d <account.id, Account>
var allAccounts = new Properties();
var rootAccount = new Account();

/**
 * \u804c\u52a1\u7ea7\u522b {accountId, {hashCode, level.id}}
 */
var levelHashCodeMap = {};
var departmentHashCodeMap = {};
var postHashCodeMap = {};

/**
 * \u53d6\u5f97\u7ec4\u7ec7\u6a21\u578b\u6570\u636e
 * 
 * @param type \u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de\u6240\u6709
 */
function getDataCenter(type, accountId){
    accountId = accountId || currentAccountId_orgDataCenter;
    if(!hasLoadOrgModel.get(accountId)){
        return null;
    }
    
    if(type){
        var accountDataCenter = dataCenter.get(accountId);
        
        if(accountDataCenter){
            return accountDataCenter.get(type);
        }
    }
    
    return dataCenter.get(accountId);
}

/**
 * \u6839\u636e\u7c7b\u578b\u548cId\u53d6\u5f97Object
 */
function getObject(type, id, accountId){
    if(type == Constants_Account){
        return allAccounts.get(id);
    }
    
    accountId = accountId || currentAccountId_orgDataCenter;
    
    if(!hasLoadOrgModel.get(accountId)){
        return null;
    }
    
    var object = null;
    try {
        object = dataCenterMap[accountId][type][id]; //\u4ece\u5f53\u524d\u7684\u5355\u4f4d\u627e
        if(object){
            return object;
        }
    }
    catch (e) {
    }
    
    for(var dataCenterItem in dataCenterMap) {
        if(dataCenterMap[dataCenterItem]){
            try{
                object = dataCenterMap[dataCenterItem][type][id];
            }catch(e){}
        }
        if(object){
            return object;
        }
    }
    
    return null;
}

function getObjects(type, id, accountId){
    if(type == Constants_Account){
        return allAccounts.get(id);
    }
    
    accountId = accountId || currentAccountId_orgDataCenter;
    
    if(!hasLoadOrgModel.get(accountId)){
        return null;
    }
    
    var count = 0;
    var objects = [];
    try {
        var list = getDataCenter(type, accountId);
        for ( var i = 0; i < list.size(); i++) {
            if(list.get(i).id == id){
                objects[count++] = list.get(i);
            }
        }
    }
    catch (e) {
    }
    
    return objects;
}

//Map<Department.path, Department>
var Path2Depart = {};

//\u5f53\u524d\u4eba\u662f\u5916\u90e8\u4eba\u5458\uff0c\u8fd9\u662f\u4ed6\u7684\u5de5\u4f5c\u8303\u56f4[Department.path]
var ExternalMemberWorkScope = new ArrayList();

//\u5f53\u524d\u4eba\u662f\u5185\u90e8\u4eba\u5458\uff0c\u80fd\u8bbf\u95ee\u54ea\u4e9b\u5916\u90e8\u4eba\u5458 <departmentId, List<memberId>>
var ExtMemberScopeOfInternal = new Properties();

/********************** Data Center *************************
 * Load based data
 *
 * \u52a0\u8f7d\u7ec4\u7ec7\u6a21\u578b\u6570\u636e
 * 
 * @param accountId \u9700\u8981\u52a0\u8f7d\u5355\u4f4d
 */
function initOrgModel(accountId, memberId, extParameters){
    if(accountId && memberId){
        currentAccountId_orgDataCenter = accountId;
        currentMemberId_orgDataCenter  = memberId;
    }
        
    this.invoke = function(){
        
    };
    
    var accountDataCenter = dataCenter.get(currentAccountId_orgDataCenter);
    
    var departments   = null; //\u90e8\u95e8
    var teams         = null; //\u7ec4
    var posts         = null; //\u5c97\u4f4d
    var levels        = null; //\u804c\u52a1\u7ea7\u522b
    var members       = null; //\u4eba\u5458
    var roles         = null; //\u7279\u6b8a\u89d2\u8272
    var outworkers    = null; //\u5916\u90e8\u4eba\u5458
    var exchangeAccounts   = null; //\u5916\u90e8\u5355\u4f4d\uff0c\u7528\u4e8e\u516c\u6587\u4ea4\u6362
    var orgTeams           = null; //\u673a\u6784\u7ec4\uff0c\u7528\u4e8e\u516c\u6587
    var relatePeoples      = null; //\u5173\u8054\u4eba\u5458
    var concurentMembers   = null; //\u517c\u804c\u4eba\u5458\uff0c\u53ea\u5b58\u4eba\u7684Id\u548c\u5355\u4f4dId
    var admins             = null; //\u7ba1\u7406\u5458    
    var formFields         = null; //\u8868\u5355\u63a7\u4ef6    
    var nodes              = null; //\u52a8\u6001\u8282\u70b9    
    
    if(!accountDataCenter){ //\u7b2c\u4e00\u6b21\u52a0\u8f7d
        accountDataCenter = new Properties();
        
        departments   = new ArrayList();
        teams         = new ArrayList();
        posts         = new ArrayList();
        levels        = new ArrayList();
        members       = new ArrayList();
        roles         = new ArrayList();
        outworkers    = new ArrayList();
        exchangeAccounts    = new ArrayList();
        orgTeams            = new ArrayList();
        relatePeoples       = new ArrayList();
        concurentMembers    = new ArrayList();
        admins              = new ArrayList();
        formFields          = new ArrayList();
        nodes               = new ArrayList();
        
        accountDataCenter.put(Constants_Department, departments);
        accountDataCenter.put(Constants_Post, posts);
        accountDataCenter.put(Constants_Level, levels);
        accountDataCenter.put(Constants_Member, members);
        accountDataCenter.put(Constants_Team, teams);
        accountDataCenter.put(Constants_Role, roles);
        accountDataCenter.put(Constants_Outworker, outworkers);
        accountDataCenter.put(Constants_ExchangeAccount, exchangeAccounts);
        accountDataCenter.put(Constants_OrgTeam, orgTeams);
        accountDataCenter.put(Constants_RelatePeople, relatePeoples);
        accountDataCenter.put(Constants_concurentMembers, concurentMembers);
        accountDataCenter.put(Constants_Admin, admins);
        accountDataCenter.put(Constants_FormField, formFields);
        accountDataCenter.put(Constants_Node, nodes);
    }
    else{
        departments   = accountDataCenter.get(Constants_Department);
        teams         = accountDataCenter.get(Constants_Team);
        posts         = accountDataCenter.get(Constants_Post);
        levels        = accountDataCenter.get(Constants_Level);
        members       = accountDataCenter.get(Constants_Member);
        roles         = accountDataCenter.get(Constants_Role);
        outworkers    = accountDataCenter.get(Constants_Outworker);
        exchangeAccounts    = accountDataCenter.get(Constants_ExchangeAccount);
        orgTeams            = accountDataCenter.get(Constants_OrgTeam);
        relatePeoples       = accountDataCenter.get(Constants_RelatePeople);
        concurentMembers    = accountDataCenter.get(Constants_concurentMembers);
        admins              = accountDataCenter.get(Constants_Admin);
        formFields          = accountDataCenter.get(Constants_FormField);
        nodes               = accountDataCenter.get(Constants_Node);
    }
    
    var departmentsMap   = null; //\u90e8\u95e8
    var teamsMap         = null; //\u7ec4
    var postsMap         = null; //\u5c97\u4f4d
    var levelsMap        = null; //\u804c\u52a1\u7ea7\u522b
    var membersMap       = null; //\u4eba\u5458
    var rolesMap         = null; //\u7279\u6b8a\u89d2\u8272
    var outworkersMap    = null; //\u5916\u90e8\u4eba\u5458
    var exchangeAccountsMap   = null; //\u5916\u90e8\u5355\u4f4d\uff0c\u7528\u4e8e\u516c\u6587\u4ea4\u6362
    var orgTeamsMap           = null; //\u673a\u6784\u7ec4\uff0c\u7528\u4e8e\u516c\u6587\u4ea4\u6362
    var relatePeoplesMap      = null; //\u5173\u8054\u4eba\u5458
    var concurentMembersMap   = null; //\u517c\u804c\u4eba\u5458\uff0c\u53ea\u5b58\u4eba\u7684Id\u548c\u5355\u4f4dId
    var adminsMap             = null; //\u7ba1\u7406\u5458
    var formFieldsMap         = null; //\u8868\u5355\u63a7\u4ef6
    var nodesMap              = null; //\u52a8\u6001\u8282\u70b9
    
    var accountDataCenterMap = dataCenterMap[currentAccountId_orgDataCenter];
    
    if(!accountDataCenterMap){ //\u7b2c\u4e00\u6b21\u52a0\u8f7d
        accountDataCenterMap = {};
        
        departmentsMap   = {};
        teamsMap         = {};
        postsMap         = {};
        levelsMap        = {};
        membersMap       = {};
        rolesMap         = {};
        outworkersMap    = {};
        exchangeAccountsMap    = {};
        orgTeamsMap            = {};
        relatePeoplesMap       = {};
        concurentMembersMap    = {};
        adminsMap              = {};
        formFieldsMap          = {};
        nodesMap               = {};
        
        accountDataCenterMap[Constants_Department] = departmentsMap;
        accountDataCenterMap[Constants_Post] = postsMap;
        accountDataCenterMap[Constants_Level] = levelsMap;
        accountDataCenterMap[Constants_Member] = membersMap;
        accountDataCenterMap[Constants_Team] = teamsMap;
        accountDataCenterMap[Constants_Role] = rolesMap;
        accountDataCenterMap[Constants_Outworker] = outworkersMap;
        accountDataCenterMap[Constants_ExchangeAccount] = exchangeAccountsMap;
        accountDataCenterMap[Constants_OrgTeam] = orgTeamsMap;
        accountDataCenterMap[Constants_RelatePeople] = relatePeoplesMap;
        accountDataCenterMap[Constants_concurentMembers] = concurentMembersMap;
        accountDataCenterMap[Constants_Admin] = adminsMap;
        accountDataCenterMap[Constants_FormField] = formFieldsMap;
        accountDataCenterMap[Constants_Node] = nodesMap;
    }
    
    var levelHashCodes = levelHashCodeMap[currentAccountId_orgDataCenter];
    if(levelHashCodes == null){
        levelHashCodes = {};
        levelHashCodeMap[currentAccountId_orgDataCenter] = levelHashCodes;
    }
    var departmentHashCodes = departmentHashCodeMap[currentAccountId_orgDataCenter];
    if(departmentHashCodes == null){
        departmentHashCodes = {};
        departmentHashCodeMap[currentAccountId_orgDataCenter] = departmentHashCodes;
    }
    var postHashCodes = postHashCodeMap[currentAccountId_orgDataCenter];
    if(postHashCodes == null){
        postHashCodes = {};
        postHashCodeMap[currentAccountId_orgDataCenter] = postHashCodes;
    }

    try {
        var isNeedInitDepartment = false;
        var isNeedInitMember = false;
        
//      var startTime = new Date().getTime();
        
    var spm = new selectPeopleManager();
    
    extParameters = extParameters || "";
    
    var result = spm.getOrgModel(orgLocalTimestamp.get(currentAccountId_orgDataCenter, ""), currentAccountId_orgDataCenter, currentMemberId_orgDataCenter, extParameters);
    
//      if(!result0 || result0.startsWith("[LOGOUT]")){
//          alert(result0.substring(8));
//          return false;
//      }
//      var result = null;
//      eval("result = " + result0 + ";");
//      if(!result){
//          return;
//      }
//      log.debug("Load and eval : " + (new Date().getTime() - startTime) + "ms");
        
        orgLocalTimestamp.put(currentAccountId_orgDataCenter, result["timestamp"]); //\u5c06\u672c\u5730\u65f6\u95f4\u6233\u66f4\u65b0\u4e3a\u65b0\u7684\u65f6\u95f4\u6233 \u683c\u5f0f\u4e3aMember=234123;Department=3245243
        
        // \u5355\u4f4d
        var _accounts = result["Account"];
        if(_accounts){
            allAccounts.clear();
            
            for(var i = 0; i < _accounts.length; i++) {
                var d = _accounts[i];
                var id = d[Constants_key_id];
                var isRoot = d['R'];
                
                //Account(id, parentId, path, name, hasChild, shortname, levelScope, description)
                var account = new Account(id, d["P"], null, d["N"], d["C"], d["S"], d["L"], "");
                
                allAccounts.put(id, account);
            }
        }
        
        //\u517c\u804c key \u90e8\u95e8id, value Members
        var concurents = result["Concurent"];
        if(concurents != null){
            concurentMembers.clear();
            accountDataCenterMap[Constants_concurentMembers] = concurentMembersMap = {};
            for(var dpid in concurents) {
                var ems = concurents[dpid];
                if(ems){
                    for(var i = 0; i < ems.length; i++) {
                        var em = ems[i];
                        var id = em[Constants_key_id];
                        
                        var member = new Member(id, em["N"], em["S"], dpid, em["P"], null, em["L"], true, em["Y"], em["M"], '');
                        member.type = "E";
                        member.accountId = em["A"];
                        member.departmentName = em["DN"] || "";
                        
                        concurentMembers.add(member);
                        concurentMembersMap[id] = member;
                    }
                }
            }
            isNeedInitMember = true;
        }
        else{
            concurents = {};
        }
        
//      startTime = new Date().getTime();
        var _posts = result[Constants_Post];
        if(_posts){
            posts.clear();
            accountDataCenterMap[Constants_Post] = postsMap = {};
            for(var i = 0; i < _posts.length; i++) {
                var d = _posts[i];
                var id = d[Constants_key_id];
                var post = new Post(id, d["N"], d["T"], d["C"], "", currentAccountId_orgDataCenter);
                posts.add(post);
                
                postsMap[id] = post;
                
                postHashCodes[d["H"]] = id;
            }
        }
//      log.debug("posts : " + (new Date().getTime() - startTime) + "ms");

//      startTime = new Date().getTime();
        var _levels = result[Constants_Level];
        if(_levels){
            levels.clear();
            accountDataCenterMap[Constants_Level] = levelsMap = {};
            for(var i = 0; i < _levels.length; i++) {
                var d = _levels[i];
                var id = d[Constants_key_id];
                var level = new Level(id, "", d["N"], true, d["S"], d["G"], d["C"], "", currentAccountId_orgDataCenter);
                levels.add(level);
                levelsMap[id] = level;
                
                levelHashCodes[d["H"]] = id;
            }
        }
//      log.debug("levels : " + (new Date().getTime() - startTime) + "ms");

        //\u90e8\u95e8\u89d2\u8272
        var departmentRoleIds = new ArrayList();

        var _roles = result[Constants_Role];
        if(_roles){
            roles.clear();
            accountDataCenterMap[Constants_Role] = rolesMap = {};
            for(var i = 0; i < _roles.length; i++) {
                var d = _roles[i];
                var id   = d[Constants_key_id];
                var type = d["T"];
                var name = d["N"];
                var bond = d["B"];
                
                /**
                 * 1 \u56fa\u5b9a\u89d2\u8272 AccountManager AccountAdmin account_exchange account_edoccreate FormAdmin HrAdmin ProjectBuild DepManager DepAdmin department_exchange
                 * 2 \u76f8\u5bf9\u89d2\u8272 Sender SenderDepManager SenderSuperManager NodeUserDepManager NodeUserSuperManager
                 * 3 \u7528\u6237\u81ea\u5b9a\u4e49\u89d2\u8272
                 * 4 \u63d2\u4ef6\u89d2\u8272(\u5ee2\u68c4)
                 */
                if(id.indexOf("_") > -1){
                    continue;
                }
                
                if(type == 3 || type == 4){
                    type = 1;
                }
                
                var role = new Role(id, name, type, bond, "", currentAccountId_orgDataCenter);
                roles.add(role);
                rolesMap[id] = role;
                
                if(bond == 2){
                    departmentRoleIds.add(id);
                }
            }
        }
        //\u7ba1\u7406\u5458
        var _admins = result[Constants_Admin];
        if(_admins){
            admins.clear();
            accountDataCenterMap[Constants_Admin] = adminsMap = {};
            for(var i = 0; i < _admins.length; i++){
                var a = _admins[i];
                
                var id = a[Constants_key_id];
                var name = a["N"];
                
                var admin = new Admin(id, name, a["C"], a["A"], "");
                admins.add(admin);
                adminsMap[id] = admin;
            } 
        }

//      startTime = new Date().getTime();
        var _department = result[Constants_Department];
        if(_department){
            Path2Depart = {};
            outworkers.clear();
            departments.clear();
            accountDataCenterMap[Constants_Department] = departmentsMap = {};
            accountDataCenterMap[Constants_Outworker] = outworkersMap = {};
            
            for(var i = 0; i < _department.length; i++) {
                var d = _department[i];
                
                var id = d[Constants_key_id];
                
                isNeedInitDepartment = true;
                var depPosts = new ArrayList();
                var S = d["S"];
                if(S){
                    for(var l = 0; l < S.length; l++) {
                        depPosts.add(postHashCodes[S[l]]);
                    }
                }
                
                //\u517c\u804c\u4eba\u5458
                var concurentMembersOfDepart = concurents[d[Constants_key_id]];
                
                //Department(id, parentId, name, hasChild, path, postList, description)
                var path = d["P"];
                var depart = new Department(id, null, d["N"], false, path, depPosts, departmentRoleIds, d["I"], concurentMembersOfDepart, "", currentAccountId_orgDataCenter);
                
                if(depart.isInternal){ //\u5185\u90e8\u90e8\u95e8
                    departments.add(depart);
                    Path2Depart[path] = depart;
                }
                else{
                    outworkers.add(depart);
                    outworkersMap[id] = depart;
                }
                
                departmentsMap[id] = depart;
                departmentHashCodes[d["H"]] = id;
            }
        }
//      log.debug("departments : " + (new Date().getTime() - startTime) + "ms");
        
//      startTime = new Date().getTime();
        var _members = result[Constants_Member];
        if(_members){
            members.clear();
            accountDataCenterMap[Constants_Member] = membersMap = {};
            for(var c = 0; c < concurentMembers.size(); c++) {
                var member = concurentMembers.get(c);
                members.add(member);
                membersMap[member.id] = member;
            }
            
            for(var i = 0; i < _members.length; i++) {
                var d = _members[i];
                var id = d[Constants_key_id];
                //Member(id, name, departmentId, postId, secondPostIds, levelId, _isInternal, email, mobile, description)
                var deptId = departmentHashCodes[d["D"]];
                var levelId = levelHashCodes[d["L"]];
                var postId = postHashCodes[d["P"]];
                
                if(!deptId){
                    continue;
                }

                var secondPostIds = null;
                var SP = d["F"];
                if(SP){
                    secondPostIds = new ArrayList();
                    for(var s = 0; s < SP.length; s++) {
                        var secondPostId = new Array();
                        secondPostId[0] = departmentHashCodes[SP[s][0]];
                        secondPostId[1] = postHashCodes[SP[s][1]];
                        secondPostIds.add(secondPostId);
                    }
                }
                else{
                    secondPostIds = EmptyArrayList;
                }
                
                var member = new Member(id, d["N"], d["S"], deptId, postId, secondPostIds, levelId, d["I"], d["Y"], d["M"], "", currentAccountId_orgDataCenter);
                members.add(member);
                membersMap[id] = member;
            }
            
            isNeedInitMember = true;
        }
//      log.debug("members : " + (new Date().getTime() - startTime) + "ms");        

        var _teams = result[Constants_Team];
        if(_teams){
            teams.clear();
            accountDataCenterMap[Constants_Team] = teamsMap = {};
            for(var i = 0; i < _teams.length; i++) {
                var d = _teams[i];
                var id = d[Constants_key_id];
                var teamLeaders = new ArrayList();
                teamLeaders.addAll(d["L"]);
                var teamMembers = new ArrayList();
                teamMembers.addAll(d["M"]);
                var teamSupervisors = new ArrayList();
                teamSupervisors.addAll(d["S"]);
                var teamRelatives = new ArrayList();
                teamRelatives.addAll(d["RM"]);
            
                var team = new Team(id, d["T"] || 2, d["N"], d["O"] || currentAccountId_orgDataCenter, teamLeaders, teamMembers, teamSupervisors, teamRelatives, d["E"], "", d["A"] || currentAccountId_orgDataCenter);
                teams.add(team);
                
                teamsMap[id] = team;
            }
        }

        var _exchangeAccounts = result[Constants_ExchangeAccount];
        if(_exchangeAccounts){
            exchangeAccounts.clear();
            accountDataCenterMap[Constants_ExchangeAccount] = exchangeAccountsMap = {};
            for(var i = 0; i < _exchangeAccounts.length; i++) {
                var d = _exchangeAccounts[i];
                var id = d[Constants_key_id];
                
                var exchangeAccount = new ExchangeAccount(id, d["N"], "");
                exchangeAccounts.add(exchangeAccount);
                exchangeAccountsMap[id] = exchangeAccount;
            }
        }
        
        var _orgTeams = result[Constants_OrgTeam];
        if(_orgTeams){
            orgTeams.clear();
            accountDataCenterMap[Constants_OrgTeam] = orgTeamsMap = {};
            for(var i = 0; i < _orgTeams.length; i++) {
                var d = _orgTeams[i];
                var id = d[Constants_key_id];
                
                var orgTeam = new OrgTeam(id, d["N"], "");
                orgTeams.add(orgTeam);
                orgTeamsMap[id] = orgTeam;
            }
        }
        
        var _relatePeoples = result[Constants_RelatePeople];
        if(_relatePeoples){
            relatePeoples.clear();
            accountDataCenterMap[Constants_RelatePeople] = relatePeoplesMap = {};
            
            var leader = new RelatePeople(1, PeopleRelate_TypeName[1]); // \u9886\u5bfc
            var assistant = new RelatePeople(2, PeopleRelate_TypeName[2]); // \u79d8\u4e66
            var junior = new RelatePeople(3, PeopleRelate_TypeName[3]); // \u4e0b\u7ea7
            var confrere = new RelatePeople(4, PeopleRelate_TypeName[4]); //\u540c\u4e8b
            
            relatePeoples.add(leader);
            relatePeoples.add(assistant);
            relatePeoples.add(junior);
            relatePeoples.add(confrere);
            
            relatePeoplesMap[1] = leader;
            relatePeoplesMap[2] = assistant;
            relatePeoplesMap[3] = junior;
            relatePeoplesMap[4] = confrere;
            
            for(var i = 0; i < _relatePeoples.length; i++) {
                var d = _relatePeoples[i];
                
                relatePeoplesMap[d["T"]].addMember(d);
            }
        }
        
        //\u8868\u5355\u63a7\u4ef6
        var _formFields = result[Constants_FormField];
        formFields.clear();
        accountDataCenterMap[Constants_FormField] = formFieldsMap = {};
        if(_formFields){
            for(var i = 0; i < _formFields.length; i++) {
                var f = _formFields[i];
                
                var formField = new FormField(f[Constants_key_id], f["N"], f["R"]);
                formFields.add(formField);
                formFieldsMap[f[Constants_key_id]] = formField;
            }
        }
        
        //\u52a8\u6001\u8282\u70b9
        var _nodes = result[Constants_Node];
        if(_nodes){
            nodes.clear();
            accountDataCenterMap[Constants_Node] = nodesMap = {};
            for(var i = 0; i < _nodes.length; i++) {
                var n = _nodes[i];
                    
                var node = new Node(n[Constants_key_id], n["N"], n["R"]);
                nodes.add(node);
                nodesMap[n[Constants_key_id]] = node;
            }
        }

        //\u5185\u90e8\u4eba\u5458\uff1a\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9b\u5916\u90e8\u4eba\u5458
        var _ExtMemberScopeOfInternal = result["ExtMemberScopeOfInternal"];
        if(_ExtMemberScopeOfInternal){
            ExtMemberScopeOfInternal.clear();
            
            for(var extDepatId in _ExtMemberScopeOfInternal) {
                var extMemberIds = new ArrayList();
                extMemberIds.addAll(_ExtMemberScopeOfInternal[extDepatId]);
                
                ExtMemberScopeOfInternal.put(extDepatId, extMemberIds);
            }
        }
        
        //\u5916\u90e8\u4eba\u5458\uff1a\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9b\u5185\u90e8\u4eba\u5458
        var _ExternalMemberWorkScope = result["ExternalMemberWorkScope"];
        if(_ExternalMemberWorkScope){
            ExternalMemberWorkScope.clear();
            
            for(var i = 0; i < _ExternalMemberWorkScope.length; i++) {
                var ws = _ExternalMemberWorkScope[i];
                if(ws.indexOf("D") == 0){
                    var dId = ws.substring(1);
                    var d1 = departmentsMap[departmentHashCodes[dId]];
                    if(d1){
                        ExternalMemberWorkScope.add("D" + d1.path);
                    }
                }
                else if(ws.indexOf("M") == 0){
                    ExternalMemberWorkScope.add(ws);
                }
                else if(ws.indexOf("A") == 0){
                    ExternalMemberWorkScope.clear();
                    ExternalMemberWorkScope.add("0");
                    break;
                }
            }
        }
        
        if(isNeedInitDepartment){
            intiDepartmentParentId(departments, Path2Depart);
            //\u5c06\u5916\u90e8\u90e8\u95e8\u6dfb\u52a0\u5230\u5185\u90e8\u90e8\u95e8
            departments.addList(outworkers);
        }

        for(var i = 0; i < outworkers.size(); i++) {
            var d = outworkers.get(i);
            var parentPath = getDepartmentParentPath(d.path);
            var parentDep = Path2Depart[parentPath];
            
            if(parentDep != null){
                d.parentId = parentDep.id;
                d.parentDepartment = parentDep;
            }
            else{
                d.parentId = currentAccountId_orgDataCenter;
            }   
        }
        
        if(isNeedInitMember){
            if(!concurentMembers.isEmpty()){//\u5305\u542b\u517c\u804c\u65f6\u624d\u8fdb\u884c\u5168\u4f53\u6392\u5e8f
                QuickSortArrayList(members, "sortId");
            }
            
            var lawlevel = levels.getLast();
            
            for(var i = 0; i < members.size(); i++){
                var member = members.get(i);
                
                var levelId = member.levelId ? member.levelId : lawlevel != null ? lawlevel.id : null;
                if(levelId){
                    member.level = levelsMap[levelId];
                }
                
                var d = departmentsMap[member.departmentId];
                if(d){
                    d.addDirectMembers(member, false);
                }
                else{
                    //alert(member.name + "\u7684\u4e3b\u5c97\u90e8\u95e8[" + member.departmentId + "]\u4e0d\u5b58\u5728")
                }
                
                if(member.isInternal && member.postId != null){
                    var p = postsMap[member.postId];
                    if(p){
                        p.addMember(member, true);
                        member.post = p;
                    }
                    else{
                        //alert(member.name + "\u7684\u4e3b\u5c97[" + member.postId + "]\u4e0d\u5b58\u5728")
                    }
                }
                
                var sp = member.secondPostIds; //\u526f\u5c97\u4fe1\u606f
                if(sp && !sp.isEmpty()){
                    for(var k = 0; k < sp.size(); k++) {
                        var dId = sp.get(k)[0]; //\u526f\u5c97\u6240\u5728\u90e8\u95e8
                        var d1 = departmentsMap[dId];
                        var pId = sp.get(k)[1]; //\u526f\u5c97\u5c97\u4f4d
                        var p1 = postsMap[pId];
                        if(d1){
                            var newMember = member.clone();
                            newMember.postId = pId;
                            newMember.post = p1;
                            newMember.departmentId = dId;
                            newMember.department = d1;
                            newMember.type = "F";
                            d1.addDirectMembers(newMember, false);
                            
                            if(p1 && member.isInternal){
                                p1.addMember(newMember, true);
                            }
                        }
                    }
                }
            }
        }
    }
    catch (ex1) {       
        //alert("loadOrgModel() Exception : " + ex1.message);
      throw ex1
    }
        
    dataCenter.put(currentAccountId_orgDataCenter, accountDataCenter);
    dataCenterMap[currentAccountId_orgDataCenter] = accountDataCenterMap;
    
    hasLoadOrgModel.put(currentAccountId_orgDataCenter, true);
}

/**
 * \u6839\u636epath\u5bf9\u90e8\u95e8\u7684parent\u8fdb\u884c\u91cd\u65b0\u8c03\u6574
 */
function intiDepartmentParentId(departments, Path2Depart){
    for(var i = 0; i < departments.size(); i++){
        var depart = departments.get(i);
        var parentPath = getDepartmentParentPath(depart.path);
        var parentDepart = Path2Depart[parentPath];
        
        if(parentDepart){
            depart.parentId = parentDepart.id;
            
            parentDepart.hasChild = true;       
            if(parentDepart.directChildren == null){
                parentDepart.directChildren = new ArrayList();
            }
            
            parentDepart.directChildren.add(depart);
        }
        else{
            depart.parentId = currentAccountId_orgDataCenter;
        }       
    }
}

function getDepartmentParentPath(path){
    return path.substring(0, path.length - 4);
}



/**
 * \u76f4\u63a5\u5b50\u8282\u70b9
 * ???? E (id, parentId)
 * @param list ArrayList<E> ?????? ????????????????parentId????
 * @param parentId ??Id
 * @return ArrayList<E> ????????????????
 */
function findChildInList(list, parentId) {
    var temp = new ArrayList();
    if(list == null){
        return temp;
    }

    for(var i = 0; i < list.size(); i++){
        if(list.get(i).parentId == parentId){
            temp.add(list.get(i));
        }
    }

    return temp;
}

/**
 * \u6240\u6709\u5b50\u8282\u70b9\uff0c\u5305\u62ec\u5b59\u5b50\u7b49
 */
function findAllChildInList(list, parentId) {
    var temp = new ArrayList();
    if(list == null){
        return temp;
    }
    
    for(var i = 0; i < list.size(); i++){
        var obj = list.get(i);
        if(obj.parentId == parentId){
            temp.add(obj);
            
            var cList = findAllChildInList(list, obj.id);
            temp.addList(cList);
        }
    }

    return temp;
}

/**
 * ????ID????????????????????????????????????
 * ???? E (id)
 * @param list ArrayList<E> ?????? ????????????????parentId????
 * @param id 
 * @return E ????
 */
function findObjectById(list, id){
    if(!list){
        return null;
    }
    
    for(var i = 0; i < list.size(); i++){
        if(list.get(i).id == id){
            return list.get(i);
        }
    }

    return null;
}
/**
 * \ufffd\ufffd\ufffd\u0579\u063c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd
 * @param list ArrayList<E>
 * @param keyword Stirng
 * @return tempList ArrayList<E>
 */
function findObjectsLikeName(list, keyword){
    var tempList = new ArrayList();
    
    if(!list){
        return tempList;
    }
    for(var i = 0; i < list.size(); i++){
        if(list.get(i).name.indexOf(keyword) != -1){
            tempList.add(list.get(i));
        }
    }

    return tempList;
}

/**
 * find parent Object
 * E (id)
 * @param list ArrayList<E> There is the attribute 'parentId' and 'id';
 * @param id current object's id
 * @return E 
 */
function findParent(list, id){
    if(!list){
        return null;
    }
    
    var currentObject = findObjectById(list, id);
    
    if(currentObject == null){
        return null;
    }

    return findObjectById(list, currentObject.parentId);
}
/**
 * find Mult-Level parent Objects
 * @param list ArrayList<E> There is the attribute 'parentId' and 'id';
 * @param id current object's id
 * @param tempNodes ArrayList empty
 * @return ArrayList the first item is the top parent object
 */
function findMultiParent(list, id, tempNodes){
    if(!list){
        return null;
    }
    
    var parentObject = findParent(list, id);
    
    if(tempNodes == null){
        tempNodes = new ArrayList();
    }
    
    if(parentObject != null){//\ufffd\ufffd\ufffd\u06b8\ufffd\ufffd\u06b5\ufffd
        tempNodes.add(parentObject);
        
        findMultiParent(list, parentObject.id, tempNodes);
    }
    
    var returnNodes = new ArrayList();
    
    for(var i = tempNodes.size() - 1; i > -1; i--){
        returnNodes.add(tempNodes.get(i));
    }

    return returnNodes;
}

/**
 * \u4ecelist\u4e2d\u67e5\u627e\u7b26\u5408\u5bf9\u8c61\u67d0\u4e2a\u5c5e\u6027\u503c\u7684\u5bf9\u8c61\uff0c\u53ea\u53d6\u4e00\u4e2a
 */
function findByProperty(list, propertyName, propertyValue){
    if(!list){
        return null;
    }
    
    for(var i = 0; i < list.size(); i++){
        if(list.get(i)[propertyName] == propertyValue){
            return list.get(i);
        }
    }

    return null;
}

function addPersonalTeam(myAccountId, teamId, teamName, members){
    var teamMemberIds = new ArrayList();
    var e = []; //\u5916\u90e8\u4eba\u5458\u4fe1\u606f
    for(var i = 0; i < members.length; i++) {
        var member = members[i];

        var memberId = member.id;
        var accountId = member.accountId;
        
        if(accountId != myAccountId){ //\u5916\u5355\u4f4d\u7684
            var m = getObject(Constants_Member, memberId, accountId);
            var departmentName = null;
            if(m){
                departmentName = getObject(Constants_Department, m.departmentId, accountId).name;
            }
            
            e[e.length] = {
                "K" : memberId,
                "N"  : member.name,
                "DN" : departmentName,
                "A"  : accountId
            };
        }
        
        teamMemberIds.add(memberId);
    }
    
    var team = new Team(teamId, 1, teamName, -1, new ArrayList(), teamMemberIds, new ArrayList(), new ArrayList(), e, "");

    getDataCenter(Constants_Team, myAccountId).add(team);
    dataCenterMap[myAccountId][Constants_Team][teamId] = team;
}

function initTimeLineDate() {
  return new MxtTimeLine({
    id : 'timeLine',
    height : $('#content_layout_body_right').height(),
    render : 'content_layout_body_right',
    date : timeLineDate[2],
    timeStep : timeLineDate[0],
    searchClick : function() {
      timeLineObjReset(timeLineObj);
    },
    editClick : function() {
      timeLineDialog = $.dialog({
        url : _ctxPath + '/calendar/calEvent.do?method=editTimeLine',
        width : 425,
        height : 180,
        targetWindow : getCtpTop(),
        transParams : {
          searchFunc : timeLineObjReset,
          diaClose : timeLineObjDialogClose,
          timeLineObjResetParam : timeLineObj
        },
        title : $.i18n('calendar.editTimeLine.title'),
        buttons : [ {
          id : "sure",
          text : $.i18n('calendar.sure'),
          handler : function() {
            timeLineDialog.getReturnValue();      
          }
        }, {
          id : "cancel",
          text : $.i18n('calendar.cancel'),
          handler : function() {
            timeLineDialog.close();
          }
        } ]
      });
    },
    maxClick : function() {
      var url = _ctxPath + "/calendar/calEvent.do?method=arrangeTime&type=day";
      var curDayArr = getCurDayStr();
      var curDayStr = curDayArr[0] + "-" + curDayArr[1] + "-" + curDayArr[2];
      url = url + "&selectedDate=" + curDayStr;
      url = url + "&curDay=" + curDayStr;
      $("#main").attr("src",url); 
    },
    action : 'timeLineAction',
    items : timeLineDate[1]
  });
}

function getCurDayStr(){
  var timeSure = timeLineObj.getDate();
  var curDayArr = new Array();
  if(timeSure.year == "" || timeSure.mounth == "" || timeSure.day == ""){
    var _ymd = new Date();
    timeSure.year = _ymd.getFullYear();
    timeSure.mounth = _ymd.getMonth()+1;
    timeSure.day = _ymd.getDate();
  }
  curDayArr[0] = timeSure.year;
  curDayArr[1] = timeSure.mounth;
  curDayArr[2] = timeSure.day;
  return curDayArr;
}

/**
 * \u6253\u5f00\u8ba1\u5212
 * 
 * @param planId \u8ba1\u5212ID
 * @param actionAfterClose \u5237\u65b0\u65b9\u6cd5\u540d
 * @return
 */
function openPlan(planId, actionAfterClose) {
  var toSrc = _ctxPath + "/plan/plan.do?method=initPlanDetailFrame&planId="
      + planId;
  var ajaxCalEventBean = new calEventManager();
  var res = ajaxCalEventBean.isHasDeleteByType(planId, "plan");
  res = res.toString();
  if (res == "true") {
    var planViewdialog = $.dialog({
      id : 'showPlan',
      url : toSrc,
      width : $(getCtpTop().document).width() - 100,
      height : $(getCtpTop().document).height() - 100,
      title : $.i18n('plan.dialog.showPlanTitle'),
      targetWindow : getCtpTop(),
      buttons : [ {
        text : $.i18n('plan.dialog.close'),
        handler : function() {
          planViewdialog.close();
          if (actionAfterClose instanceof Function) {
            actionAfterClose();
          }
        }
      } ]
    });
  } else {
    var msg;
    if (res == "false") {
      msg = $.i18n('plan.alert.nopotent');
    } else if (res == "absence") {
      msg = $.i18n('plan.alert.deleted');
    }
    $.error({
      'msg' : msg,
      ok_fn : function() {
        if (actionAfterClose instanceof Function) {
          actionAfterClose();
        }
      }
    });
  }

}

/**
 * \u65f6\u95f4\u7ebf\u6267\u884c\u67e5\u770b\u6570\u636e\u7684\u65f6\u5019\u8c03\u7528
 * 
 * @param id \u5f53\u524d\u6570\u636e\u7684ID
 * @param type \u516d\u4e2a\u6a21\u5757\u7684\u7c7b\u578b
 */
function timeLineAction(id, type) {
  var calEvent = timeLineObj.getDateObj(id);
  var eventType = calEvent.type;
  if (eventType == "event") { // \u4e8b\u4ef6\u67e5\u770b
    calEvent.curUserID = curUserID;
    dynamicDailog(calEvent, refleshTimeLinePage);
  } else if (eventType == "task") { // \u4efb\u52a1\u67e5\u770b
    viewTaskInfo4Event(id, refleshTimeLinePage);
  } else if (eventType == "plan") { // \u8ba1\u5212\u67e5\u770b
    openPlan(id, refleshTimeLinePage);
  } else if (eventType == "meeting") { // \u4f1a\u8bae\u67e5\u770b
    openMeeting(id, refleshTimeLinePage);
  } else if (eventType == "collaboration") { // \u534f\u540c\u67e5\u770b
    showSummayDialog(id, calEvent.title, refleshTimeLinePage);
  } else if (eventType == "doc") { // \u516c\u6587\u67e5\u770b
    openEdocByStatus(id, calEvent.states, _ctxPath, refleshTimeLinePage);
  }
}

/**
 * \u65f6\u95f4\u7ebf\u5c40\u90e8\u5237\u65b0\u7684\u65b9\u6cd5
 * 
 * @param timeLineObj
 */
function timeLineObjReset(timeLineObj) {
  if(timeLineObj != null && typeof(timeLineObj) != "undefined"){
    var curDayArr = getCurDayStr();
    var curDayStr = curDayArr[0] + "-" + curDayArr[1] + "-" + curDayArr[2];
    var ajaxCalEventBean = new calEventManager();
    ajaxCalEventBean.getTimeLineResetDate(curDayStr,{
      success : function(listDate){
        timeLineObj.reset({
          date : curDayArr,
          timeStep : listDate[0],
          action : 'timeLineAction',
          items : listDate[1]
        });
      }
    });
    
  }
}

/**
 * \u65f6\u95f4\u7ebf\u7f16\u8f91\u7684\u65f6\u5019\u5173\u95ed\u7684\u65b9\u6cd5
 */
function timeLineObjDialogClose() {
  timeLineDialog.close();
}

/**
 * \u7531\u4e8e\u65f6\u95f4\u7ebf\u7684\u5c40\u90e8\u5237\u65b0\u65b9\u6cd5timeLineObjReset\u6709\u53c2\u6570timeLineObj\uff0c\u800c\u6bcf\u4e2a\u6a21\u5757
 * \u8c03\u7528\u56de\u6765\u6267\u884c\u8fd9\u4e2a\u5237\u65b0\u7684\u65f6\u5019\u90fd\u62a5timeLineObj\u8fd9\u4e2a\u53c2\u6570\u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\uff0c\u53e6\u5916\u5c01\u88c5\u4e86\u4e00 \u5c42\u4e00\u4e2a\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684\u65b9\u6cd5\u4ee3\u66ff\u6267\u884c\u7684\u5237\u65b0\u65b9\u6cd5
 */
function refleshTimeLinePage() {
  timeLineObjReset(timeLineObj);
}

/**
 * \u67e5\u770b\u4efb\u52a1\u8be6\u7ec6\u4fe1\u606f\u9875\u9762
 * 
 * @param id \u4efb\u52a1\u7f16\u53f7
 */
function viewTaskInfo4Event(id, actionAfterClose) {
  var ajaxCalEventBean = new calEventManager();
  var res = ajaxCalEventBean.isHasDeleteByType(id, "task");
  if (res != null && res != "") {
    $.error({
      'msg' : res,
      ok_fn : function() {
        if (actionAfterClose instanceof Function) {
          actionAfterClose();
        }
      }
    });
  } else {
    var title = $.i18n('taskmanage.content');
    var dialog = $.dialog({
      url : _ctxPath + '/taskmanage/taskinfo.do?method=taskDetailIndex&id='
          + id,
      width : $(getCtpTop()).width() - 100,
      height : $(getCtpTop()).height() - 100,
      title : title,
      targetWindow : getCtpTop(),
      closeParam:{
		'show':true,
		autoClose:false,
		handler:function(){
		   if (actionAfterClose instanceof Function) {
            dialog.getClose({'dialogObj' : dialog ,'runFunc' : actionAfterClose});
          } else {
          	dialog.getClose({'dialogObj' : dialog });
          }
		}
      },
      buttons : [ {
        text : $.i18n('common.button.close.label'),
        handler : function() {
          if (actionAfterClose instanceof Function) {
            dialog.getClose({'dialogObj' : dialog ,'runFunc' : actionAfterClose});
          } else {
            dialog.getClose({'dialogObj' : dialog });
          }
        }
      } ]
    });
  }
}

/**
 * \u6253\u5f00\u6b63\u6587\u5185\u5bb9
 * 
 * affairId \u5f85\u529e\u4e8b\u9879\u7684id title dialog\u7684\u6807\u9898\uff0c\u7528affair\u7684subject\u503c actionAfterClose
 * \u534f\u540c\u5904\u7406\u5b8c\u6210\u540e\u9700\u8981\u6267\u884c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5237\u65b0
 */
function showSummayDialog(affairId, title, actionAfterClose) {
  var url = _ctxPath
      + "/collaboration/collaboration.do?method=summary&openFrom=listPending&affairId="
      + affairId;
  var width = $(getCtpTop().document).width() - 100;
  var height = $(getCtpTop().document).height() - 50;
  $.dialog({
    url : url,
    width : width,
    height : height,
    title : title,
    id : 'dialogDealColl',
    transParams : {
    	callbackOfEvent : actionAfterClose,
    	window : window
    },
    targetWindow : getCtpTop()
  });
}

/**
 * \u67e5\u770b\u4f1a\u8bae\u63a5\u53e3
 * 
 * @param id \u4f1a\u8baeid
 */
var dialogDealColl;
function openMeeting(meetingId, actionAfterClose) {
  var url = _ctxPath + "/mtMeeting.do?method=myDetailFrame&id=" + meetingId;
  var width = $(getCtpTop().document).width() - 100;
  var height = $(getCtpTop().document).height() - 50;
  dialogDealColl = $.dialog({
    url : url,
    width : width,
    height : height,
    title : '\u4f1a\u8bae',
    targetWindow : getCtpTop(),
    transParams : {
      diaClose : actionAfterClose,
      window : window
    }
  });
}

// 5.0\u5bf9\u5916\u63a5\u53e3--\u65f6\u95f4\u5b89\u6392\uff0c\u67e5\u8be2\u67d0\u4e2a\u516c\u6587\u7684\u8be6\u7ec6\uff0c\u6839\u636e\u72b6\u6001\u5224\u65ad\u663e\u793a\u5f85\u529e\u8fd8\u662f\u5df2\u529e
// \u65b0\u589e\u53c2\u6570 actionAfterClose \u53c8\u5916\u9762\u4f20\u7684 \u5237\u65b0\u65b9\u6cd5\u540d
function openEdocByStatus(affairId, state, contextPath, actionAfterClose) {
  if (state == '3') { // \u5f85\u529e
    openDetail_edoc('listPending', 'from=Pending&affairId=' + affairId
        + '&from=Pending', contextPath, actionAfterClose);
  } else if ((state == '4')) { // \u5df2\u529e
    openDetail_edoc('', 'from=Done&affairId=' + affairId, contextPath,
        actionAfterClose);
  } else {

  }

}

function openDetail_edoc(subject, _url, contextPath, actionAfterClose) {
  // 'subject'\u5224\u65ad\u662f\u5426\u662f\u4ea4\u6362\u516c\u6587
  if (subject == 'exchange') {
    _url = _url;
  } else {
    _url = contextPath + "/edocController.do" + "?method=detailIFrame&" + _url;

    if ("listPending" == subject || "listReading" == subject || "" == subject) {
      var rv = v3x.openWindow({
        url : _url,
        FullScrean : 'yes',
        //dialogType : 'open'
        dialogType: v3x.getBrowserFlag('pageBreak') == true ? 'modal' : '1'
      });
    } else {
      var rv = v3x.openWindow({
        url : _url,
        FullScrean : 'yes',
        dialogType : v3x.getBrowserFlag('pageBreak') == true ? 'modal' : '1'
      });
    }
  }

  if (rv == "true") {
    if (actionAfterClose instanceof Function) {
      actionAfterClose();
    }
  }

}

/**
 * \u8bbf\u95ee\u540e\u53f0\u770b\u770b\u6570\u636e\u88ab\u5220\u6389\u4e86\u6ca1\u6709
 * 
 * @param id \u6570\u636eIE
 */
function accessManagerData(id ,eventObj) {
  var ajaxCalEventBean = new calEventManager();
  return ajaxCalEventBean.isHasDeleteByType(id, eventObj);
}

/**
 * \u67e5\u770b\u4e8b\u4ef6
 * 
 * @param data \u4e8b\u4ef6\u5bf9\u8c61
 */
var calEventDialogUpdate;
function dynamicDailog(data, timeLineObjReset) {
  var res = accessManagerData(data.id ,"event");
  if (res != null && res != "") {
    $.alert({
      'msg' : res,
      ok_fn : function() {
        if(res == "${ctp:i18n('calendar.event.create.had.delete')}"){
          if (timeLineObjReset instanceof Function) {
            timeLineObjReset();
          }
        }
      }
    });
  } else {
    var height = 600;
    if (data.shareType == 1 && data.receiveMemberId == null) {
      height = 500;
    }
    calEventDialogUpdate = $.dialog({
      url : _ctxPath + '/calendar/calEvent.do?method=editCalEvent&id='
          + data.id,
      width : 600,
      height : height,
      targetWindow : getCtpTop(),
      checkMax : true,
      transParams : {
        diaClose : dialogClose,
        showButton : showBtn,
        isview : "true",
        refleshMethod : timeLineObjReset
      },
      title : $.i18n('calendar.event.search.title'),
      buttons : [ {
        id : "sure",
        text : $.i18n('calendar.sure'),
        handler : function() {
          calEventDialogUpdate.getReturnValue();
        }
      }, {
        id : "update",
        text : $.i18n('calendar.update'),
        handler : function() {
          calEventDialogUpdate.getReturnValue("update");
        }
      }, {
        id : "cancel",
        text : $.i18n('calendar.cancel'),
        handler : function() {
          calEventDialogUpdate.close();
        }
      }, {
        id : "btnClose",
        text : $.i18n('calendar.close'),
        handler : function() {
          calEventDialogUpdate.close();
        }
      } ]
    });
    calEventDialogUpdate.hideBtn("sure");
    calEventDialogUpdate.hideBtn("btnClose");
    calEventDialogUpdate.hideBtn("update");
    calEventDialogUpdate.hideBtn("cancel");
    if (data.createUserId != data.curUserID) {
      calEventDialogUpdate.showBtn("btnClose");
    } else {
      calEventDialogUpdate.showBtn("update");
      calEventDialogUpdate.showBtn("cancel");
    }
  }
}

function dialogClose(id, reloadDate, timeLineObjReset) {
  calEventDialogUpdate.close();
  if (reloadDate == 'true') {
    if (timeLineObjReset instanceof Function) {
      timeLineObjReset();
    }
  }
}

function showBtn() {
  calEventDialogUpdate.showBtn("sure");
  calEventDialogUpdate.hideBtn("update");
}
\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff/**
 * \u6240\u6709\u7684\u77e5\u8bc6\u6253\u5f00\u90fd\u4f7f\u7528\u6b64\u65b9\u6cd5
 * @param docId \u77e5\u8bc6Id
 * @param entrance \u5165\u53e3\u53c2\u6570 \u53c2\u8003EntranceTypeEnum.java
 * @param baseDocId \u5982\u679c\u5165\u53e3\u4e3a\u5173\u8054\u6587\u6863\uff0c\u5219\u5fc5\u987b\u4f20\u6b64\u53c2\u6570\u3002\u6b64\u53c2\u6570\u4e3a\u5173\u8054\u6587\u6863\u6240\u63d2\u5165\u7684\u77e5\u8bc6\u7684Id\u3002\u53ef\u4e3a\u7a7a\u3002
 * @param showBorrowApply \u82e5\u6ca1\u6709\u6253\u5f00\u6743\u9650\uff0c\u662f\u5426\u53d1\u8d77\u501f\u9605\u3002\u9ed8\u8ba4\u53ef\u501f\u9605\u3002\u53ef\u4e3a\u7a7a\u3002
 * @param showDelete \u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u662f\u5426\u5220\u9664\u5f53\u524d\u8bb0\u5f55\u3002\u9ed8\u8ba4\u4e0d\u5220\u9664\u3002\u53ef\u4e3a\u7a7a\u3002
 * @param showOpenWindow \u662f\u5426\u4f7f\u7528openwindow\u6a21\u5f0f\u6253\u5f00\u3002\u9ed8\u8ba4\u4e0d\u9002\u7528\u3002\u53ef\u4e3a\u7a7a\u3002
 * @param dialogId \u5f39\u51fa\u6846\u53e3\u7684Id\u503c\u3002\u53ef\u4e3a\u7a7a\u3002
 * @returns
 */
function fnOpenKnowledge(docId, entrance,baseDocId,showBorrowApply,showDelete,showOpenWindow,dialogId) {
	if(typeof(showBorrowApply) === 'undefined' || showBorrowApply == null) {
		showBorrowApply = true;
	}
	if(v3x.baseURL === '') {
		v3x.baseURL = _ctxPath;
	}
	// openWindow\u7684\u6253\u5f00\u65b9\u5f0f duanyl
	var dialogType = "modal";
	// \u4ece\u5173\u8054\u6587\u6863\u6253\u5f00\uff0c\u4e0d\u4f1a\u663e\u793a\u7533\u8bf7\u501f\u9605(\u5148\u9636\u6bb5\uff0c\u5728\u5173\u8054\u6587\u6863\u6253\u5f00\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u6253\u4e0d\u5f00\u7684\u72b6\u51b5)
	if(entrance === 8 || entrance === '8' || typeof($) === 'undefined') {
		showBorrowApply = false;
	}
	
	if(entrance === 8 || entrance === '8'){
	    //showDelete  \u5728\u5173\u8054\u6587\u6863\u4e2d\u8868\u793a\u662f\u5426\u662f\u94fe\u63a5
	    var isLink = showDelete ;
	    if(baseDocId === 'true' && isLink==='false' ){
	        fnAlert(fnI18n('doc.prompt.noright'));
	        return ;
	    }
	    baseDocId = null;
	}
	
	var requestCaller = new XMLHttpRequestCaller(this, "docHierarchyManager", "getValidInfo", false);
    requestCaller.addParameter(1, "Long", docId);
    if(typeof(entrance) === 'undefined' || entrance === null) {
    	entrance = 6;
    }
    requestCaller.addParameter(2,"Integer",entrance);
    if(typeof(baseDocId) === 'undefined' || baseDocId === null) {
    	baseDocId = null;
    }
    requestCaller.addParameter(3,"Long",null);
    requestCaller.addParameter(4,"Long",baseDocId);
    ret = requestCaller.serviceRequest();
    var isExist = ret.charAt(0);
    // \u73b0\u5728\u4e3a\u4e86\u7edf\u4e00\uff0c\u5728\u4efb\u4f55\u4f4d\u7f6e\u90fd\u4e0d\u63d0\u793a\u5220\u9664
    showDelete = false;
    if(isExist === '4') {
    	fnAlert(fnI18n('doc.prompt.docLib.disabled'));
		return;
    } else if(isExist !== '0') {
    	if(showDelete && typeof(delF) !== 'undefined') {
    		fnConfirm(fnI18n('doc.prompt.inexistence.delete'),function (){
    			delF(docId, "self", false);
    		});
    		return;
    	} else {
    		fnAlert(fnI18n('doc.prompt.inexistence'));
    		return;
    	} 
    }
    // 0:\u4ee3\u8868\u6709\u6743\u9650\uff0c1\uff1a\u4ee3\u8868\u6ca1\u6709\u6253\u5f00\u6743\u9650\uff0c2\u4ee3\u8868\u6ca1\u6709\u8d44\u6e90\uff0c3\u4ee3\u8868\u4ec5\u4ec5\u6709\u5b66\u4e60\u533a\u7684\u6743\u9650
	var hasOP = ret.charAt(1);
	if((hasOP != 0 || hasOP !='0') && (entrance == '11'||entrance == 11)){
		fnConfirm(fnI18n('doc.prompt.noright.sendlearningcancel.borrow'),function (){
			fnAddDocBorrowApply(docId,null);
		});
		return;
	}
	if(hasOP === '2'||hasOP === 2) {
		fnAlert(fnI18n('doc.prompt.noright'));
		return;
	}
    if(hasOP !== '0' && hasOP!=='3') {
    	if(showBorrowApply && typeof(fnAddDocBorrowApply) !== 'undefined') {
    		fnConfirm(fnI18n('doc.prompt.noright.borrow'),function (){
    			fnAddDocBorrowApply(docId,null);
			});
    		return;
    	} else {
    		fnAlert(fnI18n('doc.prompt.noright'));
    		return;
    	}
    }
    
    //\u6587\u6863\u5e93\u6253\u5f00
    if((entrance === 5 || entrance === '5') && (hasOP == '3'||hasOP === 3)){//\u6587\u6863\u4e2d\u5fc3\u6253\u5f00\uff0c\u4ec5\u4ec5\u5b66\u4e60\u533a\u6709\u6743\u9650
        fnAlert(fnI18n('doc.prompt.noright'));
        return;
    }
    
    // \u5982\u679c\u662f\u516c\u5171\u4fe1\u606f(\u5305\u62ec\u516c\u6587)\uff0c\u90fd\u7528OpenWindow\u6a21\u5f0f\u6253\u5f00 duanyl
    var isPublicInfo = ret.charAt(2);
    if(isPublicInfo === '0') {
    	showOpenWindow = true;
    	dialogType = "open";
    }
	var url ;
    if(typeof(_ctxPath) !== 'undefined'){
    	url = _ctxPath+ret.substring(3);
    }else{
    	url = v3x.baseURL+ret.substring(3);
    }
    
    if((entrance === 6 || entrance === '6' )&& typeof(ownerId) !== 'undefined'){
        url = url + "&ownerId=" + ownerId ;
    }
    
    if(showOpenWindow) {
    	dialog = v3x.openWindow({
			url : url,
			workSpace : 'yes',
			resizable : "false",
			dialogType : dialogType
		});
    } else {
    	if(dialogId === null || typeof(dialogId) === 'undefined') {
    		dialogId = 'docOpenDialogOnlyId';
    	}
    	fnSelectOpenMode(dialogId,url,fnI18n('doc.knowledge.browse'));
    }      
}
/**
 * \u56fd\u9645\u5316\u65b9\u6cd5
 * @param key \u56fd\u9645\u5316key\u503c
 * @returns
 */
function fnI18n(key) {
	var reg = new RegExp('\\.','g');
	oldKey = key.replace(reg,'_');
	oldKey = "DocLang." + oldKey;
	if(typeof($) !== 'undefined'){
		if($.i18n) {
			return $.i18n(key);
		} else {
			return v3x.getMessage(oldKey);
		}
	} else {
		return v3x.getMessage(oldKey);
	}
}




function fnAlert(word) {
	if(typeof($) !== 'undefined'){
		if($.alert) {
			$.alert(word);
		} else {
			alert(word);
		}
	} else {
		alert(word);
	}
}
function fnConfirm(word,fnOk) {
	if(typeof($) !== 'undefined'){
		if($.confirm) {
			$.confirm({'type': 1,
	            'msg': word, 
	             ok_fn: function () { 
	            	return fnOk();
	             }}
			);
		} else {
			if(confirm(word)) {
				return fnOk();
			} else {
				return;
			}
		}
	} else {
		if(confirm(word)) {
			return fnOk();
		} else {
			return;
		}
	}
}

/**
 * \u662f\u5426\u5b58\u5728\u6709\u6587\u6863\u6743\u9650\u7684\u7528\u6237
 * @param docResourceId
 * @returns
 */
//function hasPotentUsers(docResourceId) {
//	var requestCaller = new XMLHttpRequestCaller(this, "knowledgePageManager", "getPotentModelUsers", false);
//    requestCaller.addParameter(1, "long", docResourceId);
//    requestCaller.addParameter(2,"boolean",false);
//    var strInclude = requestCaller.serviceRequest();
//	if(strInclude != null) {
//		return true;
//	}
//	return false;
//}

/**
 * \u7533\u8bf7\u501f\u9605
 * @param docResourceId \u6587\u6863id
 * @param borrowUserId \u501f\u9605\u4eba
 * @param createUserId \u6587\u6863\u521b\u5efa\u4eba
 */
function fnAddDocBorrowApply(docResourceId,borrowUserId,createUserId) {
    var dialog = $.dialog({
        id: 'html',
        url: _ctxPath+"/doc/knowledgeController.do?method=applyBorrow&docId="+docResourceId,
        title: $.i18n('doc.jsp.knowledge.borrow.apply'),
        width : 352,
        height : 120,
        overflow : 'hidden',
        buttons: [ 
           {
                text: $.i18n('common.button.ok.label'), 
                handler: function () {
        	   		var data = $.parseJSON(dialog.getReturnValue());
        	   		if(data==false)
        	   			return ;
//                    var loginAccount = $.ctx.CurrentUser.loginAccount;
                    var requestCaller = new XMLHttpRequestCaller(this, "knowledgePageManager", "applyDocBorrow", false);
                    requestCaller.addParameter(1, "Long", borrowUserId);
                    requestCaller.addParameter(2, "Long", docResourceId);
                    requestCaller.addParameter(3, "String", data.spc1);
                    requestCaller.addParameter(4, "String", data.borrowMsg);
                    var data = requestCaller.serviceRequest();
                    if(data === null) {
                    	$.alert($.i18n('doc.jsp.knowledge.borrow.apply.failed'));
                    } else {
                    	$.infor($.i18n('doc.jsp.knowledge.borrow.apply.success'));
                    }
                    dialog.close();
                } 
             } , {
                text: $.i18n('common.button.cancel.label'),
                handler: function () {
                    dialog.close();
                }
           }]
     });
}
/**
 * \u5f39\u51fa\u6846\u53e3\u7684\u9009\u62e9\uff0c\u5982\u679c\u5f15\u5165\u4e86common.jsp\u5219\u53ef\u4f7f\u7528$.dialog\u751f\u6210\uff0c\u5426\u5219MxtWindow
 * @param id \u5f39\u51fa\u6846\u53e3\u7684id
 * @param url 
 * @param isDrag \u662f\u5426\u80fd\u62d6\u52a8
 * @param targetWindow \u5f39\u51fa\u4f4d\u7f6e
 * @param title \u6846\u53e3\u6807\u9898
 * @returns
 */
function fnSelectOpenMode(id,url,title,isDrag,targetWindow) {
	var docWinWidth = 0;
	var docWinHeight = 0;
	if(isDrag === null || typeof(isDrag) === 'undefined') {
		isDrag = true;
	}
	
	if(targetWindow === null || typeof(targetWindow) === 'undefined') {
		targetWindow = getA8Top();
	}
	
	if(targetWindow.document && targetWindow.document.body && targetWindow.document.documentElement) {
		docWinWidth = targetWindow.document.body.clientWidth-20;
		docWinHeight = targetWindow.document.documentElement.clientHeight-10;
	}
	
	if(docWinWidth <= 0 || docWinHeight <= 0) {
		docWinWidth = 1280;
		docWinHeight = 600;
	}
	
	if(typeof($) !== 'undefined') {
		if($.dialog) {
		    docWinHeight -= 40;
			dialog = $.dialog({
	        	id : id,
	        	url : url,
	        	top:10,
	        	width: docWinWidth,
        		height: docWinHeight,
	        	isDrag : isDrag,
	        	targetWindow :targetWindow,
	        	title : title,
	        	checkMax : false,
	        	closeParam: {'show' : true,handler : fnIsRefresh}
	    	});
			getA8Top()._dialog = dialog;
			return dialog;
		} else {
			dialog = new MxtWindow({
        		id : id,
        		url	: url,
        		width: docWinWidth,
        		height: docWinHeight,
        		type: 'window',
        		isDrag: isDrag,
        		targetWindow: targetWindow,
        		title: title,
        		closeParam: {handler : fnIsRefresh}
    		});
			getA8Top()._dialog = dialog;
			return dialog;
		}
	} else {
		dialog = new MxtWindow({
    		id : id,
    		url	: url,
    		width: docWinWidth,
    		height: docWinHeight,
    		type: 'window',
    		isDrag: isDrag,
    		targetWindow: targetWindow,
    		title: title,
    		closeParam: {handler : fnIsRefresh}
		});
		getA8Top()._dialog = dialog;
		return dialog;
	} 
}
/**
 * \u63d0\u4f9b\u8fde\u63a5\u7684\u6253\u5f00\u65b9\u6cd5
 * @param _url
 * @param forDataList \u5feb\u53d1\u7248 \u4e3a\u4e86\u4e0d\u5f15\u8d77\u5176\u4ed6bug\uff0c\u9488\u5bf9\u7efc\u5408\u67e5\u8be2\u7684\u516c\u5171\u4fe1\u606f\u4fee\u6b63\u7684\u65b9\u6cd5
 * @param appNum  \u7efc\u5408\u67e5\u8be2\u7684\u7c7b\u578b\uff0c\u4e0eforDataList\u7ed1\u5b9a\u4f7f\u7528
 */
function openKnowledgeByURL(_url,appNum,forDataList) {
	var openFrom = fnGetParam(_url,'openFrom');
	var dialogId = 'docOpenDialogOnlyId';
	var entrance = null;
	var baseObjectId = fnGetParam(_url,'baseObjectId');
	if(openFrom === 'glwd' || baseObjectId != null || openFrom === 'glwd' ) {
		entrance = 8;
		dialogId = 'openFromGlwd';	
	}
	if(openFrom === 'docLearning' || baseObjectId != null){
		entrance = 11;
	}
	var docResId = fnGetParam(_url,'docResId');
	if(docResId !== null) {
	    var isBorrowOrShare = fnGetParam(_url,'isBorrowOrShare');
	    if(isBorrowOrShare||isBorrowOrShare=='true'){
	        entrance = 2;
	    }
		fnOpenKnowledge(docResId, entrance,baseObjectId,null,null,null,dialogId);
	} else {
		if(forDataList === 'dataList' && appNum !== '1') {
				openDataDetail(_url,appNum);		
		} else {
			fnSelectOpenMode(dialogId,_url,fnI18n('doc.knowledge.browse'));
		}				
	}
}
/**
 * \u4ece\u4e00\u4e2a\u8fde\u63a5\u4e2d\u83b7\u53d6\u6240\u9700\u53c2\u6570
 * @param _url \u8fde\u63a5\u7684\u5b57\u7b26\u4e32
 * @param param \u6240\u9700\u7684\u53c2\u6570
 * @returns
 */
function fnGetParam(_url,param) {
	var _paramLength = param.length;
	var _startOrg = _url.lastIndexOf(param);
	if(_startOrg === -1) {
		return null;
	}
	var _start = _url.lastIndexOf(param)+_paramLength+1;
	var length = 0;
	while(_url.charAt(_start+length) != '&' && (_start+length)<=_url.length) {
		length++;
	}
	return _url.substring(_start,_start+length);
}
/**
 *  \u9996\u9875\u4e2d\u5f15\u7528\u7684\u6253\u5f00\u65b9\u6cd5
 * @param docResourceId
 * @param currentUserId
 * @param createUserId
 * @param entranceType
 * @returns
 */
function openFileWithPermission(docResourceId,currentUserId,createUserId,entranceType) {
	fnOpenKnowledge(docResourceId,entranceType);
}
/**
 * \u5173\u95ed\u63a8\u8350\u7684\u5bf9\u8bdd\u6846
 * @returns
 */
function fnCloseRecommendDialog() {
	var _dialog = getA8Top().frames['main']._dialog;
	getA8Top().frames['main']._dialog = null;
	//\u5237\u65b0\u77e5\u8bc6\u67e5\u770b
    if(getA8Top().docOpenDialogOnlyId_main_iframe && getA8Top().docOpenDialogOnlyId_main_iframe.fnReloadKnowledgeBrowse){
    	getA8Top().docOpenDialogOnlyId_main_iframe.fnReloadKnowledgeBrowse();
    }
	_dialog.close();
}
function fnIsRefresh() {
	if(getA8Top().frames['main']) {
		fnRefresh();
	} else {
		fnCloseDialog();
	}	
}
function fnRefresh() {
	if(getA8Top().frames['main']) {
		if(getA8Top().frames['main'].frames['rightFrame']) {
			// \u5237\u65b0\u6587\u6863\u4e2d\u5fc3
			getA8Top().frames['main'].frames['rightFrame'].location.reload();
		} else {
		    // \u5237\u65b0\u4e2a\u4eba\u77e5\u8bc6\u4e2d\u5fc3
	        if(getA8Top().frames['main'].fnReload){
	        	getA8Top().frames['main'].fnReload();
	        }
		    //\u5237\u65b0\u77e5\u8bc6\u5e7f\u573a
	        if(getA8Top().frames['main'].fnPageDataLoad){
	        	getA8Top().frames['main'].fnPageDataLoad();
	        }
	        
			fnCloseDialog();
		}
	} else {
		// \u9632\u62a4
		fnCloseDialog();
	}
}

function fnCloseDialog() {
    var _dialog = getA8Top()._dialog;
    getA8Top()._dialog = null;
    if(_dialog) {
    	_dialog.close(); 
    }       
}
var portalManager=RemoteJsonService.extend({
     jsonGateway: "/seeyon/ajax.do?method=ajaxAction&managerName=portalManager",
     getCustomizeMenusOfMember: function(){
                  return this.ajaxCall(arguments,"getCustomizeMenusOfMember");
     },
     getCustomizeShortcutsOfMember: function(){
                  return this.ajaxCall(arguments,"getCustomizeShortcutsOfMember");
     },
     getPageTitle: function(){
                  return this.ajaxCall(arguments,"getPageTitle");
     },
     getGroupSecondName: function(){
       return this.ajaxCall(arguments,"getGroupSecondName");
     },
     getAccountSecondName: function(){
       return this.ajaxCall(arguments,"getAccountSecondName");
     },
     getProductId: function(){
       return this.ajaxCall(arguments,"getProductId");
     },
     getSpaceMenus: function(){
                  return this.ajaxCall(arguments,"getSpaceMenus");
     },
     getSpaceOwnerMenus: function(){
                  return this.ajaxCall(arguments,"getSpaceOwnerMenus");
     },
     getSpaceSort: function(){
                  return this.ajaxCall(arguments,"getSpaceSort");
     },
     getSpaceMenusForPortal: function(){
                  return this.ajaxCall(arguments,"getSpaceMenusForPortal");
     }
});
var selectPeopleManager=RemoteJsonService.extend({
     jsonGateway: "/seeyon/ajax.do?method=ajaxAction&managerName=selectPeopleManager",
     getOrgModel: function(){
                  return this.ajaxCall(arguments,"getOrgModel");
     },
     getQueryOrgModel: function(){
                  return this.ajaxCall(arguments,"getQueryOrgModel");
     },
     saveAsTeam: function(){
                  return this.ajaxCall(arguments,"saveAsTeam");
     }
});
var calEventManager=RemoteJsonService.extend({
     jsonGateway: "/seeyon/ajax.do?method=ajaxAction&managerName=calEventManager",
     getCalEventById: function(){
                  return this.ajaxCall(arguments,"getCalEventById");
     },
     getTimeLineResetDate: function(){
                  return this.ajaxCall(arguments,"getTimeLineResetDate");
     },isOnePerson:function(){
    	 return this.ajaxCall(arguments,"isOnePerson");
     },isHasDeleteByType:function(){
       return this.ajaxCall(arguments,"isHasDeleteByType");
     }
});
var thridReportManager=RemoteJsonService.extend({
  jsonGateway: "/seeyon/ajax.do?method=ajaxAction&managerName=thridReportManager",
  isConnect: function(){
               return this.ajaxCall(arguments,"isConnect");
  }
});
var onlineManager = RemoteJsonService.extend({
	jsonGateway: "/seeyon/ajax.do?method=ajaxAction&managerName=onlineManager",
	updateOnlineSubState: function() {
		return this.ajaxCall(arguments, "updateOnlineSubState");
	}
});
